/// <reference path="android-declarations.d.ts"/>

declare module com {
	export module esri {
		export module arcgisruntime {
			export class ArcGISRuntimeEnvironment {
				public static class: java.lang.Class<com.esri.arcgisruntime.ArcGISRuntimeEnvironment>;
				public static setLicense(param0: com.esri.arcgisruntime.LicenseInfo): com.esri.arcgisruntime.LicenseResult;
				public static setLicense(param0: string, param1: java.util.List<string>): com.esri.arcgisruntime.LicenseResult;
				public static initialize(): void;
				public static getLicense(): com.esri.arcgisruntime.License;
				public static getAPIVersion(): string;
				public static getUserAgent(): string;
				public static setLicense(param0: string): com.esri.arcgisruntime.LicenseResult;
				public constructor();
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class ArcGISRuntimeException {
				public static class: java.lang.Class<com.esri.arcgisruntime.ArcGISRuntimeException>;
				public static ERROR_CODE_CHECK_CAUSE: number;
				public getAdditionalMessage(): string;
				public constructor(param0: number, param1: com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain, param2: string, param3: string, param4: java.lang.Throwable);
				public getErrorDomain(): com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain;
				public getErrorCode(): number;
				public getMessage(): string;
				public getCause(): java.lang.Throwable;
				public toString(): string;
				public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreError): com.esri.arcgisruntime.ArcGISRuntimeException;
			}
			export module ArcGISRuntimeException {
				export class ErrorDomain {
					public static class: java.lang.Class<com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain>;
					public static ARCGIS_RUNTIME: com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain;
					public static ARCGIS_SERVER: com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain;
					public static UNKNOWN: com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain;
					public static valueOf(param0: string): com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain;
					public static values(): native.Array<com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class ExtensionLicense {
				public static class: java.lang.Class<com.esri.arcgisruntime.ExtensionLicense>;
				public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreExtensionLicense): com.esri.arcgisruntime.ExtensionLicense;
				public getExpiry(): java.util.Calendar;
				public getExtensionName(): string;
				public getLicenseStatus(): com.esri.arcgisruntime.LicenseStatus;
				public isPermanent(): boolean;
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class License {
				public static class: java.lang.Class<com.esri.arcgisruntime.License>;
				public getLicenseType(): com.esri.arcgisruntime.LicenseType;
				public getExtensions(): java.util.List<com.esri.arcgisruntime.ExtensionLicense>;
				public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLicense): com.esri.arcgisruntime.License;
				public getExpiry(): java.util.Calendar;
				public getLicenseLevel(): com.esri.arcgisruntime.LicenseLevel;
				public getLicenseStatus(): com.esri.arcgisruntime.LicenseStatus;
				public isPermanent(): boolean;
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class LicenseInfo extends com.esri.arcgisruntime.io.JsonSerializable {
				public static class: java.lang.Class<com.esri.arcgisruntime.LicenseInfo>;
				public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLicenseInfo;
				public static fromJson(param0: string): com.esri.arcgisruntime.LicenseInfo;
				public getUnknownJson(): java.util.Map<string,any>;
				public getUnsupportedJson(): java.util.Map<string,any>;
				public toJson(): string;
				public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLicenseInfo): com.esri.arcgisruntime.LicenseInfo;
				public constructor(param0: string);
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class LicenseLevel {
				public static class: java.lang.Class<com.esri.arcgisruntime.LicenseLevel>;
				public static DEVELOPER: com.esri.arcgisruntime.LicenseLevel;
				public static LITE: com.esri.arcgisruntime.LicenseLevel;
				public static BASIC: com.esri.arcgisruntime.LicenseLevel;
				public static STANDARD: com.esri.arcgisruntime.LicenseLevel;
				public static ADVANCED: com.esri.arcgisruntime.LicenseLevel;
				public static valueOf(param0: string): com.esri.arcgisruntime.LicenseLevel;
				public static values(): native.Array<com.esri.arcgisruntime.LicenseLevel>;
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class LicenseResult {
				public static class: java.lang.Class<com.esri.arcgisruntime.LicenseResult>;
				public getExtensionsStatus(): java.util.Map<string,com.esri.arcgisruntime.LicenseStatus>;
				public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLicenseResult);
				public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLicenseResult): com.esri.arcgisruntime.LicenseResult;
				public getLicenseStatus(): com.esri.arcgisruntime.LicenseStatus;
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class LicenseStatus {
				public static class: java.lang.Class<com.esri.arcgisruntime.LicenseStatus>;
				public static INVALID: com.esri.arcgisruntime.LicenseStatus;
				public static EXPIRED: com.esri.arcgisruntime.LicenseStatus;
				public static LOGIN_REQUIRED: com.esri.arcgisruntime.LicenseStatus;
				public static VALID: com.esri.arcgisruntime.LicenseStatus;
				public static values(): native.Array<com.esri.arcgisruntime.LicenseStatus>;
				public static valueOf(param0: string): com.esri.arcgisruntime.LicenseStatus;
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class LicenseType {
				public static class: java.lang.Class<com.esri.arcgisruntime.LicenseType>;
				public static DEVELOPER: com.esri.arcgisruntime.LicenseType;
				public static NAMED_USER: com.esri.arcgisruntime.LicenseType;
				public static LICENSE_KEY: com.esri.arcgisruntime.LicenseType;
				public static valueOf(param0: string): com.esri.arcgisruntime.LicenseType;
				public static values(): native.Array<com.esri.arcgisruntime.LicenseType>;
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export class UnitSystem {
				public static class: java.lang.Class<com.esri.arcgisruntime.UnitSystem>;
				public static IMPERIAL: com.esri.arcgisruntime.UnitSystem;
				public static METRIC: com.esri.arcgisruntime.UnitSystem;
				public static valueOf(param0: string): com.esri.arcgisruntime.UnitSystem;
				public static values(): native.Array<com.esri.arcgisruntime.UnitSystem>;
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class AntiAliasingMode {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.AntiAliasingMode>;
					public static NONE: com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
					public static FASTEST: com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
					public static FAST: com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
					public static NORMAL: com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
					public static BEST: com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.AntiAliasingMode>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ArcGISFeatureLayerInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo>;
					public hasM(): boolean;
					public getDisplayFieldName(): string;
					public getDrawingInfo(): com.esri.arcgisruntime.arcgisservices.DrawingInfo;
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
					public getSubtypeField(): string;
					public getMinScale(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureLayerInfo;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureLayerInfo): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo;
					public getServiceLayerId(): number;
					public getTimeInfo(): com.esri.arcgisruntime.arcgisservices.LayerTimeInfo;
					public getTypeIdFieldName(): string;
					public getDefaultSubtypeCode(): any;
					public getFeatureTemplates(): java.util.List<com.esri.arcgisruntime.data.FeatureTemplate>;
					public getField(param0: string): com.esri.arcgisruntime.data.Field;
					public isSupportsObacForAnonymousUsers(): boolean;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public isSupportsAdvancedQueries(): boolean;
					public getGlobalIdFieldName(): string;
					public getFeatureTypes(): java.util.List<com.esri.arcgisruntime.data.FeatureType>;
					public isSupportsStatistics(): boolean;
					public getOwnershipBasedAccessControl(): com.esri.arcgisruntime.arcgisservices.OwnershipBasedAccessControlInfo;
					public getDescription(): string;
					public getVersion(): string;
					public hasDefaultVisibility(): boolean;
					public getServiceType(): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
					public getObjectIdFieldName(): string;
					public getCapabilities(): com.esri.arcgisruntime.arcgisservices.FeatureServiceCapabilities;
					public hasAttachments(): boolean;
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getEffectiveMaxScale(): number;
					public getFeatureType(param0: string): com.esri.arcgisruntime.data.FeatureType;
					public getUrl(): string;
					public getServiceLayerName(): string;
					public getZDefault(): number;
					public isAllowGeometryUpdates(): boolean;
					public isZDefaultsEnabled(): boolean;
					public isDataVersioned(): boolean;
					public getMaxRecordCount(): number;
					public getServiceSourceType(): com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
					public getAttribution(): string;
					public isSupportsPagination(): boolean;
					public hasZ(): boolean;
					public isSupportsRollbackOnFailureParameter(): boolean;
					public getRelationshipInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.RelationshipInfo>;
					public getMaxScale(): number;
					public getEditFieldsInfo(): com.esri.arcgisruntime.arcgisservices.EditFieldsInfo;
					public getFeatureSubtypes(): java.util.List<com.esri.arcgisruntime.data.FeatureSubtype>;
					public getEffectiveMinScale(): number;
					public isSupportsQueryExtent(): boolean;
				}
				export module ArcGISFeatureLayerInfo {
					export class ServiceType {
						public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType>;
						public static LAYER: com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
						public static ANNOTATION_LAYER: com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
						public static TABLE: com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
						public static GROUP_LAYER: com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
						public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
						public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ArcGISFeatureServiceInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ArcGISFeatureServiceInfo>;
					public getVersion(): string;
					public getUnit(): com.esri.arcgisruntime.geometry.Unit;
					public getEditorTrackingInfo(): com.esri.arcgisruntime.arcgisservices.EditorTrackingInfo;
					public isSupportsDisconnectedEditing(): boolean;
					public getUrl(): string;
					public getFullExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getZDefault(): number;
					public getSyncCapabilities(): com.esri.arcgisruntime.arcgisservices.SyncCapabilities;
					public hasStaticData(): boolean;
					public isAllowGeometryUpdates(): boolean;
					public getDocumentInfo(): com.esri.arcgisruntime.arcgisservices.ServiceDocumentInfo;
					public isZDefaultsEnabled(): boolean;
					public getMaxRecordCount(): number;
					public getLayerInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.IdInfo>;
					public getAttribution(): string;
					public getTableInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.IdInfo>;
					public getFeatureServiceCapabilities(): com.esri.arcgisruntime.arcgisservices.FeatureServiceCapabilities;
					public getInitialExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureServiceInfo): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureServiceInfo;
					public getServiceDescription(): string;
					public hasVersionedData(): boolean;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public isSyncEnabled(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureServiceInfo;
					public getDescription(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ArcGISImageServiceInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ArcGISImageServiceInfo>;
					public getAttribution(): string;
					public getRenderingRuleInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.RenderingRuleInfo>;
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISImageServiceInfo): com.esri.arcgisruntime.arcgisservices.ArcGISImageServiceInfo;
					public getPixelType(): com.esri.arcgisruntime.arcgisservices.PixelType;
					public getCurrentVersion(): string;
					public getMaxScale(): number;
					public getMinScale(): number;
					public getUrl(): string;
					public getName(): string;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISImageServiceInfo;
					public getFullExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getTimeInfo(): com.esri.arcgisruntime.arcgisservices.LayerTimeInfo;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ArcGISMapServiceInfo extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceInfo>;
					public static fromJson(param0: string): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceInfo;
					public canExportTiles(): boolean;
					public getTileServers(): java.util.List<string>;
					public getUnknownJson(): java.util.Map<string,any>;
					public getUnit(): com.esri.arcgisruntime.geometry.Unit;
					public getCurrentVersion(): string;
					public getMaxImageWidth(): number;
					public getMinScale(): number;
					public getUrl(): string;
					public getMaxImageHeight(): number;
					public getFullExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getLayerInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.MapServiceLayerIdInfo>;
					public getDocumentInfo(): com.esri.arcgisruntime.arcgisservices.ServiceDocumentInfo;
					public toJson(): string;
					public getMaxRecordCount(): number;
					public getServiceSourceType(): com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
					public getTimeInfo(): com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo;
					public getAttribution(): string;
					public getCapabilities(): com.esri.arcgisruntime.arcgisservices.MapServiceCapabilities;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceInfo;
					public hasSingleFusedMapCache(): boolean;
					public getTableInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.IdInfo>;
					public getInitialExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public isSupportsDynamicLayers(): boolean;
					public getSupportedImageFormatTypes(): java.util.List<string>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getMaxScale(): number;
					public getServiceDescription(): string;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getDescription(): string;
					public getTileInfo(): com.esri.arcgisruntime.arcgisservices.TileInfo;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo;
					public getMaxExportTilesCount(): number;
					public getMapName(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ArcGISMapServiceSublayerInfo extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo>;
					public hasM(): boolean;
					public getDisplayFieldName(): string;
					public getDrawingInfo(): com.esri.arcgisruntime.arcgisservices.DrawingInfo;
					public canModifyLayer(): boolean;
					public getVersion(): string;
					public hasDefaultVisibility(): boolean;
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
					public getUnknownJson(): java.util.Map<string,any>;
					public getSubtypeField(): string;
					public hasAttachments(): boolean;
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getMinScale(): number;
					public getEffectiveMaxScale(): number;
					public getUrl(): string;
					public getServiceLayerId(): number;
					public getServiceLayerName(): string;
					public getTimeInfo(): com.esri.arcgisruntime.arcgisservices.LayerTimeInfo;
					public getTypeIdFieldName(): string;
					public canScaleSymbols(): boolean;
					public getDefaultSubtypeCode(): any;
					public getField(param0: string): com.esri.arcgisruntime.data.Field;
					public hasLabels(): boolean;
					public isDataVersioned(): boolean;
					public toJson(): string;
					public getMaxRecordCount(): number;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getAttribution(): string;
					public getCapabilities(): com.esri.arcgisruntime.arcgisservices.MapServiceCapabilities;
					public getParentLayerInfo(): com.esri.arcgisruntime.arcgisservices.IdInfo;
					public isSupportsAdvancedQueries(): boolean;
					public hasZ(): boolean;
					public isUseStandardizedQueries(): boolean;
					public getRelationshipInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.RelationshipInfo>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getFeatureTypes(): java.util.List<com.esri.arcgisruntime.data.FeatureType>;
					public getMaxScale(): number;
					public getFeatureSubtypes(): java.util.List<com.esri.arcgisruntime.data.FeatureSubtype>;
					public getEffectiveMinScale(): number;
					public isSupportsStatistics(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceSublayerInfo): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo;
					public getServiceType(): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceSublayerInfo;
					public getOwnershipBasedAccessControl(): com.esri.arcgisruntime.arcgisservices.OwnershipBasedAccessControlInfo;
					public getDefinitionExpression(): string;
					public getDescription(): string;
					public getSublayerInfos(): java.util.List<com.esri.arcgisruntime.arcgisservices.IdInfo>;
					public static fromJson(param0: string): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo;
				}
				export module ArcGISMapServiceSublayerInfo {
					export class ServiceType {
						public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType>;
						public static FEATURE_LAYER: com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
						public static TABLE: com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
						public static GROUP_LAYER: com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
						public static RASTER_LAYER: com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
						public static NETWORK_ANALYSIS_LAYER: com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
						public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
						public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class DrawingInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.DrawingInfo>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDrawingInfo): com.esri.arcgisruntime.arcgisservices.DrawingInfo;
					public getRenderer(): com.esri.arcgisruntime.symbology.Renderer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDrawingInfo;
					public isShowLabels(): boolean;
					public getTransparency(): number;
					public getLabelingInfo(): java.util.List<com.esri.arcgisruntime.arcgisservices.LabelingInfo>;
					public isScaleSymbols(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class EditFieldsInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.EditFieldsInfo>;
					public getEditDateField(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEditFieldsInfo): com.esri.arcgisruntime.arcgisservices.EditFieldsInfo;
					public getCreatorField(): string;
					public getRealm(): string;
					public getCreationDateField(): string;
					public getEditorField(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreEditFieldsInfo;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class EditorTrackingInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.EditorTrackingInfo>;
					public isAllowOthersToUpdate(): boolean;
					public isAllowOthersToDelete(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreEditorTrackingInfo;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEditorTrackingInfo): com.esri.arcgisruntime.arcgisservices.EditorTrackingInfo;
					public isOwnershipBasedAccessControlEnabled(): boolean;
					public isAllowAnonymousToUpdate(): boolean;
					public isAllowAnonymousToDelete(): boolean;
					public isEditorTrackingEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class FeatureServiceCapabilities {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.FeatureServiceCapabilities>;
					public isSupportsDelete(): boolean;
					public isSupportsCreate(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureServiceCapabilities): com.esri.arcgisruntime.arcgisservices.FeatureServiceCapabilities;
					public isSupportsSync(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureServiceCapabilities;
					public isSupportsEditing(): boolean;
					public isSupportsQuery(): boolean;
					public isSupportsUpdate(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class FeatureServiceLayerIdInfo extends com.esri.arcgisruntime.arcgisservices.IdInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.FeatureServiceLayerIdInfo>;
					public getMaxScale(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureServiceLayerIdInfo): com.esri.arcgisruntime.arcgisservices.FeatureServiceLayerIdInfo;
					public getMinScale(): number;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreIdInfo): com.esri.arcgisruntime.arcgisservices.IdInfo;
					public getDefaultVisibility(): boolean;
					public getServiceType(): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class FullTimeExtentChangedEvent {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedEvent>;
					public getSource(): com.esri.arcgisruntime.arcgisservices.TimeAware;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TimeAware);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class FullTimeExtentChangedListener {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						fullTimeExtentChanged(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedEvent): void;
					});
					public constructor();
					public fullTimeExtentChanged(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class IdInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.IdInfo>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreIdInfo);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreIdInfo): com.esri.arcgisruntime.arcgisservices.IdInfo;
					public getId(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class LabelDefinition extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.LabelDefinition>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public static fromJson(param0: string): com.esri.arcgisruntime.arcgisservices.LabelDefinition;
					public getUnknownJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLabelDefinition;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLabelDefinition): com.esri.arcgisruntime.arcgisservices.LabelDefinition;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class LabelingInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.LabelingInfo>;
					public getMaxScale(): number;
					public isUseCodedValues(): boolean;
					public getMinScale(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLabelingInfo): com.esri.arcgisruntime.arcgisservices.LabelingInfo;
					public getLabelExpression(): string;
					public getWhere(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLabelingInfo;
					public getLabelPlacement(): com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public getSymbol(): com.esri.arcgisruntime.symbology.TextSymbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class LabelingPlacement {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.LabelingPlacement>;
					public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_ABOVE_AFTER: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_ABOVE_ALONG: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_ABOVE_BEFORE: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_ABOVE_END: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_ABOVE_START: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_BELOW_AFTER: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_BELOW_ALONG: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_BELOW_BEFORE: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_BELOW_END: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_BELOW_START: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_CENTER_AFTER: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_CENTER_ALONG: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_CENTER_BEFORE: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_CENTER_END: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static LINE_CENTER_START: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_ABOVE_CENTER: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_ABOVE_LEFT: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_ABOVE_RIGHT: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_BELOW_CENTER: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_BELOW_LEFT: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_BELOW_RIGHT: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_CENTER_CENTER: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_CENTER_LEFT: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POINT_CENTER_RIGHT: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static POLYGON_ALWAYS_HORIZONTAL: com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.LabelingPlacement>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class LayerTimeInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.LayerTimeInfo>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLayerTimeInfo): com.esri.arcgisruntime.arcgisservices.LayerTimeInfo;
					public getInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public getTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayerTimeInfo;
					/** @deprecated */
					public getTimeInterval(): number;
					public getTrackIdField(): string;
					public getEndTimeField(): string;
					public getTimeReference(): com.esri.arcgisruntime.arcgisservices.TimeReference;
					public hasLiveData(): boolean;
					public getStartTimeField(): string;
					/** @deprecated */
					public getTimeUnit(): com.esri.arcgisruntime.arcgisservices.TimeUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class LevelOfDetail {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.LevelOfDetail>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLevelOfDetail): com.esri.arcgisruntime.arcgisservices.LevelOfDetail;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLevelOfDetail;
					public constructor(param0: number, param1: number, param2: number);
					public getScale(): number;
					public getLevel(): number;
					public getResolution(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class MapServiceCapabilities {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.MapServiceCapabilities>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMapServiceCapabilities): com.esri.arcgisruntime.arcgisservices.MapServiceCapabilities;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMapServiceCapabilities;
					public isDataSupported(): boolean;
					public isQuerySupported(): boolean;
					public isMapSupported(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class MapServiceLayerIdInfo extends com.esri.arcgisruntime.arcgisservices.IdInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.MapServiceLayerIdInfo>;
					public getMaxScale(): number;
					public getMinScale(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreIdInfo): com.esri.arcgisruntime.arcgisservices.IdInfo;
					public getDefaultVisibility(): boolean;
					public getParentLayerId(): number;
					public getServiceType(): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
					public getSubLayerIds(): java.util.List<java.lang.Long>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMapServiceLayerIdInfo): com.esri.arcgisruntime.arcgisservices.MapServiceLayerIdInfo;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class OwnershipBasedAccessControlInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.OwnershipBasedAccessControlInfo>;
					public isAllowOthersToUpdate(): boolean;
					public isAllowOthersToDelete(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOwnershipBasedAccessControlInfo): com.esri.arcgisruntime.arcgisservices.OwnershipBasedAccessControlInfo;
					public isAllowAnonymousToUpdate(): boolean;
					public isAllowOthersToQuery(): boolean;
					public isAllowAnonymousToDelete(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOwnershipBasedAccessControlInfo;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class PixelType {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.PixelType>;
					public static FLOAT_32_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static FLOAT_64_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static INTEGER_8_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static INTEGER_16_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static INTEGER_32_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static UNSIGNED_1_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static UNSIGNED_2_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static UNSIGNED_4_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static UNSIGNED_8_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static UNSIGNED_16_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static UNSIGNED_32_BIT: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.PixelType;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.PixelType;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.PixelType>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class RelationshipCardinality {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.RelationshipCardinality>;
					public static ONE_TO_ONE: com.esri.arcgisruntime.arcgisservices.RelationshipCardinality;
					public static ONE_TO_MANY: com.esri.arcgisruntime.arcgisservices.RelationshipCardinality;
					public static MANY_TO_MANY: com.esri.arcgisruntime.arcgisservices.RelationshipCardinality;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.RelationshipCardinality>;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.RelationshipCardinality;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class RelationshipInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.RelationshipInfo>;
					public getRelatedTableId(): number;
					public getKeyField(): string;
					public getRole(): com.esri.arcgisruntime.arcgisservices.RelationshipRole;
					public isComposite(): boolean;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo): com.esri.arcgisruntime.arcgisservices.RelationshipInfo;
					public getId(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo;
					public getCardinality(): com.esri.arcgisruntime.arcgisservices.RelationshipCardinality;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class RelationshipRole {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.RelationshipRole>;
					public static ORIGIN: com.esri.arcgisruntime.arcgisservices.RelationshipRole;
					public static DESTINATION: com.esri.arcgisruntime.arcgisservices.RelationshipRole;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.RelationshipRole;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.RelationshipRole>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class RenderingRuleInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.RenderingRuleInfo>;
					public constructor(param0: string);
					public getName(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRenderingRuleInfo;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRenderingRuleInfo): com.esri.arcgisruntime.arcgisservices.RenderingRuleInfo;
					public getDescription(): string;
					public getHelp(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ServiceDocumentInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ServiceDocumentInfo>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceDocumentInfo): com.esri.arcgisruntime.arcgisservices.ServiceDocumentInfo;
					public getTitle(): string;
					public getAntiAliasingMode(): com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
					public getAuthor(): string;
					public getComments(): string;
					public getCategory(): string;
					public getKeywords(): java.util.List<string>;
					public getTextAntiAliasingMode(): com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode;
					public getSubject(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ServiceSourceType {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ServiceSourceType>;
					public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
					public static FEATURE_SERVICE: com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
					public static IMAGE_SERVICE: com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
					public static MAP_SERVICE: com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.ServiceSourceType>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class ServiceTimeInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo>;
					/** @deprecated */
					public getDefaultTimeIntervalUnit(): com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public getDefaultInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					/** @deprecated */
					public getDefaultTimeInterval(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceTimeInfo): com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo;
					public getTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceTimeInfo;
					public getTimeRelation(): com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation;
					public getTimeReference(): com.esri.arcgisruntime.arcgisservices.TimeReference;
					public hasLiveData(): boolean;
					public getDefaultTimeWindow(): number;
				}
				export module ServiceTimeInfo {
					export class TimeRelation {
						public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation>;
						public static OVERLAPS: com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation;
						public static AFTER_START_OVERLAPS_END: com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation;
						public static OVERLAPS_START_WITHIN_END: com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation;
						public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation;
						public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation;
						public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class SyncCapabilities {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.SyncCapabilities>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSyncCapabilities): com.esri.arcgisruntime.arcgisservices.SyncCapabilities;
					public isSupportsSyncModelLayer(): boolean;
					public isSupportsSyncModelGeodatabase(): boolean;
					public isSupportsRollbackOnFailure(): boolean;
					public isSupportsSyncDirectionControl(): boolean;
					public isSupportsRegisteringExistingData(): boolean;
					public isSupportsAsync(): boolean;
					public isSupportsAttachmentsSyncDirection(): boolean;
					public isSupportsSyncModelNone(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSyncCapabilities;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class TextAntiAliasingMode {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode>;
					public static NONE: com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode;
					public static NORMAL: com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode;
					public static FORCE: com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode>;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class TileInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.TileInfo>;
					public getOrigin(): com.esri.arcgisruntime.geometry.Point;
					public getLevelsOfDetail(): java.util.List<com.esri.arcgisruntime.arcgisservices.LevelOfDetail>;
					public getCompressionQuality(): number;
					public static createFomInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo): com.esri.arcgisruntime.arcgisservices.TileInfo;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public constructor(param0: number, param1: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat, param2: java.util.List<com.esri.arcgisruntime.arcgisservices.LevelOfDetail>, param3: com.esri.arcgisruntime.geometry.Point, param4: com.esri.arcgisruntime.geometry.SpatialReference, param5: number, param6: number);
					public getFormat(): com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
					public getDpi(): number;
					public getTileHeight(): number;
					public getTileWidth(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTileInfo;
				}
				export module TileInfo {
					export class ImageFormat {
						public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat>;
						public static PNG: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static PNG8: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static PNG24: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static PNG32: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static JPG: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static MIXED: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static LERC: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat>;
						public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class TimeAware {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.TimeAware>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.arcgisservices.TimeAware interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
						getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
						getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
						isTimeFilteringEnabled(): boolean;
						setIsTimeFilteringEnabled(param0: boolean): void;
						isTimeFilteringSupported(): boolean;
						setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
						addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
						removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					});
					public constructor();
					public setIsTimeFilteringEnabled(param0: boolean): void;
					public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					public isTimeFilteringSupported(): boolean;
					public isTimeFilteringEnabled(): boolean;
					public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
					public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
					public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class TimeReference {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.TimeReference>;
					public isRespectsDaylightSavings(): boolean;
					public getTimeZone(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTimeReference): com.esri.arcgisruntime.arcgisservices.TimeReference;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTimeReference;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class TimeUnit {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.TimeUnit>;
					public static UNKNOWN: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static CENTURIES: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static DAYS: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static DECADES: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static HOURS: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static MILLISECONDS: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static MINUTES: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static MONTHS: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static SECONDS: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static WEEKS: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static YEARS: com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public static values(): native.Array<com.esri.arcgisruntime.arcgisservices.TimeUnit>;
					public static valueOf(param0: string): com.esri.arcgisruntime.arcgisservices.TimeUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class VectorTileSourceInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.VectorTileSourceInfo>;
					public getOrigin(): com.esri.arcgisruntime.geometry.Point;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreVectorTileSourceInfo;
					public getVersion(): string;
					public canExportTiles(): boolean;
					public getDefaultStyleUri(): string;
					public getInitialExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getUri(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreVectorTileSourceInfo): com.esri.arcgisruntime.arcgisservices.VectorTileSourceInfo;
					public getMaxScale(): number;
					public getMinScale(): number;
					public getLevelsOfDetail(): java.util.List<com.esri.arcgisruntime.arcgisservices.LevelOfDetail>;
					public getName(): string;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getFullExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getDefaultStyle(): com.esri.arcgisruntime.arcgisservices.VectorTileStyle;
					public getMaxExportTilesCount(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module arcgisservices {
				export class VectorTileStyle {
					public static class: java.lang.Class<com.esri.arcgisruntime.arcgisservices.VectorTileStyle>;
					public getVersion(): string;
					public getSourceUri(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreVectorTileStyle;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreVectorTileStyle): com.esri.arcgisruntime.arcgisservices.VectorTileStyle;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module concurrent {
				export abstract class Job implements com.esri.arcgisruntime.io.JsonSerializable, com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.concurrent.Job>;
					public mCredential: com.esri.arcgisruntime.security.Credential;
					public mRequestConfiguration: com.esri.arcgisruntime.io.RequestConfiguration;
					public pause(): boolean;
					/** @deprecated */
					public setUri(param0: string): void;
					public getStatus(): com.esri.arcgisruntime.concurrent.Job.Status;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreJob;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreJob);
					public getUnknownJson(): java.util.Map<string,any>;
					public getUri(): string;
					public addProgressChangedListener(param0: java.lang.Runnable): void;
					public getServerJobId(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public start(): boolean;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public removeProgressChangedListener(param0: java.lang.Runnable): boolean;
					public getResult(): any;
					public addJobChangedListener(param0: java.lang.Runnable): void;
					public static fromJson(param0: string): com.esri.arcgisruntime.concurrent.Job;
					public getMessages(): java.util.List<com.esri.arcgisruntime.concurrent.Job.Message>;
					public removeJobChangedListener(param0: java.lang.Runnable): boolean;
					public toJson(): string;
					public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public addJobDoneListener(param0: java.lang.Runnable): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): void;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public cancel(): boolean;
					public getProgress(): number;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public removeJobDoneListener(param0: java.lang.Runnable): boolean;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
				}
				export module Job {
					export class Message {
						public static class: java.lang.Class<com.esri.arcgisruntime.concurrent.Job.Message>;
						public getMessage(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreJobMessage;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreJobMessage): com.esri.arcgisruntime.concurrent.Job.Message;
					}
					export class Status {
						public static class: java.lang.Class<com.esri.arcgisruntime.concurrent.Job.Status>;
						public static NOT_STARTED: com.esri.arcgisruntime.concurrent.Job.Status;
						public static STARTED: com.esri.arcgisruntime.concurrent.Job.Status;
						public static PAUSED: com.esri.arcgisruntime.concurrent.Job.Status;
						public static SUCCEEDED: com.esri.arcgisruntime.concurrent.Job.Status;
						public static FAILED: com.esri.arcgisruntime.concurrent.Job.Status;
						public static valueOf(param0: string): com.esri.arcgisruntime.concurrent.Job.Status;
						public static values(): native.Array<com.esri.arcgisruntime.concurrent.Job.Status>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module concurrent {
				export class ListenableFuture<V>  extends java.util.concurrent.Future<any> {
					public static class: java.lang.Class<com.esri.arcgisruntime.concurrent.ListenableFuture<any>>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.concurrent.ListenableFuture<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						addDoneListener(param0: java.lang.Runnable): void;
						removeDoneListener(param0: java.lang.Runnable): boolean;
					});
					public constructor();
					public removeDoneListener(param0: java.lang.Runnable): boolean;
					public addDoneListener(param0: java.lang.Runnable): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class ArcGISFeature extends com.esri.arcgisruntime.data.Feature implements com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.ArcGISFeature>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public checkIsDisposed(): void;
					public relateFeature(param0: com.esri.arcgisruntime.data.ArcGISFeature, param1: com.esri.arcgisruntime.arcgisservices.RelationshipInfo): void;
					public getFeatureTable(): com.esri.arcgisruntime.data.FeatureTable;
					public relateFeature(param0: com.esri.arcgisruntime.data.ArcGISFeature): void;
					public getFeatureTable(): com.esri.arcgisruntime.data.ArcGISFeatureTable;
					public deleteAttachmentsAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Attachment>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public loadAsync(): void;
					public updateAttachmentAsync(param0: com.esri.arcgisruntime.data.Attachment, param1: native.Array<number>, param2: string, param3: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public close(): void;
					public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.data.ArcGISFeature;
					public deleteAttachmentAsync(param0: com.esri.arcgisruntime.data.Attachment): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public canEditAttachments(): boolean;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeature;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.data.Feature;
					public unrelateFeature(param0: com.esri.arcgisruntime.data.ArcGISFeature): void;
					public computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
					public canUpdateGeometry(): boolean;
					public fetchAttachmentsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.Attachment>>;
					/** @deprecated */
					public refreshObjectId(): boolean;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public addAttachmentAsync(param0: native.Array<number>, param1: string, param2: string): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.Attachment>;
					public getAttributes(): java.util.Map<string,any>;
					public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export abstract class ArcGISFeatureTable extends com.esri.arcgisruntime.data.FeatureTable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.ArcGISFeatureTable>;
					public isPopupEnabled(): boolean;
					public getObjectIdField(): string;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public isUseAdvancedSymbology(): boolean;
					public getSubtypeField(): string;
					public getTypeIdField(): string;
					public createFeature(): com.esri.arcgisruntime.data.Feature;
					public createFeature(param0: com.esri.arcgisruntime.data.FeatureTemplate, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.data.ArcGISFeature;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable;
					public getEditableAttributeFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
					public validateRelationshipConstraintsAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.RelationshipConstraintViolation>;
					public getServiceLayerId(): number;
					public getDefaultSubtypeCode(): any;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable);
					public getUpdatedFeaturesCountAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Long>;
					public getFeatureTemplates(): java.util.List<com.esri.arcgisruntime.data.FeatureTemplate>;
					public createFeature(param0: com.esri.arcgisruntime.data.FeatureType, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.data.ArcGISFeature;
					public getDeletedFeaturesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public getUpdatedFeaturesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public queryRelatedFeaturesAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.RelatedFeatureQueryResult>>;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
					public getFeatureTemplate(param0: string): com.esri.arcgisruntime.data.FeatureTemplate;
					public queryRelatedFeaturesAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature, param1: com.esri.arcgisruntime.data.RelatedQueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.RelatedFeatureQueryResult>>;
					public getDeletedFeaturesCountAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Long>;
					public getFeatureTypes(): java.util.List<com.esri.arcgisruntime.data.FeatureType>;
					public getRelatedTables(param0: com.esri.arcgisruntime.arcgisservices.RelationshipInfo): java.util.List<com.esri.arcgisruntime.data.ArcGISFeatureTable>;
					public getLayerInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo;
					public createFeature(param0: com.esri.arcgisruntime.data.FeatureType): com.esri.arcgisruntime.data.ArcGISFeature;
					public setUseAdvancedSymbology(param0: boolean): void;
					public createFeature(param0: com.esri.arcgisruntime.data.FeatureTemplate): com.esri.arcgisruntime.data.ArcGISFeature;
					public createFeature(param0: com.esri.arcgisruntime.data.FeatureSubtype, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.data.ArcGISFeature;
					public getGlobalIdField(): string;
					public createFeature(param0: com.esri.arcgisruntime.data.FeatureSubtype): com.esri.arcgisruntime.data.ArcGISFeature;
					public setPopupEnabled(param0: boolean): void;
					public hasAttachments(): boolean;
					public loadAsync(): void;
					public getFeatureType(param0: string): com.esri.arcgisruntime.data.FeatureType;
					public getAddedFeaturesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public queryRelatedFeatureCountAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature, param1: com.esri.arcgisruntime.data.RelatedQueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Long>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
					public queryRelatedFeatureCountAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Long>;
					public getAddedFeaturesCountAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Long>;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getFeatureSubtypes(): java.util.List<com.esri.arcgisruntime.data.FeatureSubtype>;
					public createFeature(param0: java.util.Map<string,any>, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.data.Feature;
					public retryLoadAsync(): void;
					public getRelatedTables(): java.util.List<com.esri.arcgisruntime.data.ArcGISFeatureTable>;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class Attachment {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.Attachment>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAttachment;
					public hasFetchedData(): boolean;
					public getName(): string;
					public getId(): number;
					public getContentType(): string;
					public fetchDataAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.io.InputStream>;
					public getSize(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreAttachment): com.esri.arcgisruntime.data.Attachment;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class CodedValue {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.CodedValue>;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreCodedValue): com.esri.arcgisruntime.data.CodedValue;
					public getCode(): any;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class CodedValueDomain extends com.esri.arcgisruntime.data.Domain {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.CodedValueDomain>;
					public getCodedValues(): java.util.List<com.esri.arcgisruntime.data.CodedValue>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreCodedValueDomain): com.esri.arcgisruntime.data.CodedValueDomain;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export abstract class Domain {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.Domain>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDomain;
					public getName(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDomain);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class EditResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.EditResult>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreEditResult);
					public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public getEditOperation(): com.esri.arcgisruntime.data.EditResult.EditOperation;
					public hasCompletedWithErrors(): boolean;
					public getGlobalId(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEditResult): com.esri.arcgisruntime.data.EditResult;
					public getObjectId(): number;
				}
				export module EditResult {
					export class EditOperation {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.EditResult.EditOperation>;
						public static ADD: com.esri.arcgisruntime.data.EditResult.EditOperation;
						public static UPDATE: com.esri.arcgisruntime.data.EditResult.EditOperation;
						public static DELETE: com.esri.arcgisruntime.data.EditResult.EditOperation;
						public static UNKNOWN: com.esri.arcgisruntime.data.EditResult.EditOperation;
						public static valueOf(param0: string): com.esri.arcgisruntime.data.EditResult.EditOperation;
						public static values(): native.Array<com.esri.arcgisruntime.data.EditResult.EditOperation>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class Feature extends com.esri.arcgisruntime.mapping.GeoElement {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.Feature>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.data.Feature;
					public checkIsDisposed(): void;
					public computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
					public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public getFeatureTable(): com.esri.arcgisruntime.data.FeatureTable;
					public refresh(): boolean;
					public clearAttributeMap(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeature;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeature);
					public getAttributes(): java.util.Map<string,any>;
					public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureCollection implements com.esri.arcgisruntime.io.JsonSerializable, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureCollection>;
					public toJson(): string;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.data.FeatureCollectionTable>);
					public saveAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalItem>;
					public cancelLoad(): void;
					public getUnknownJson(): java.util.Map<string,any>;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getTables(): java.util.List<com.esri.arcgisruntime.data.FeatureCollectionTable>;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureCollection;
					public constructor();
					public static fromJson(param0: string): com.esri.arcgisruntime.data.FeatureCollection;
					public saveAsAsync(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalFolder, param2: string, param3: java.lang.Iterable<string>, param4: string, param5: native.Array<number>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalItem>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureCollection): com.esri.arcgisruntime.data.FeatureCollection;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureCollectionTable extends com.esri.arcgisruntime.data.FeatureTable implements com.esri.arcgisruntime.data.FeatureSet {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureCollectionTable>;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.mapping.GeoElement>, param1: java.lang.Iterable<com.esri.arcgisruntime.data.Field>);
					public getTitle(): string;
					public isPopupEnabled(): boolean;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Field>, param1: com.esri.arcgisruntime.geometry.GeometryType, param2: com.esri.arcgisruntime.geometry.SpatialReference, param3: boolean, param4: boolean);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionTable): com.esri.arcgisruntime.data.FeatureCollectionTable;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getRenderer(): com.esri.arcgisruntime.symbology.Renderer;
					public setTitle(param0: string): void;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Field>, param1: com.esri.arcgisruntime.geometry.GeometryType, param2: com.esri.arcgisruntime.geometry.SpatialReference);
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
					public setPopupEnabled(param0: boolean): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setSymbolOverride(param0: com.esri.arcgisruntime.data.Feature, param1: com.esri.arcgisruntime.symbology.Symbol): void;
					public loadAsync(): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public iterator(): java.util.Iterator<com.esri.arcgisruntime.data.Feature>;
					public getSymbolOverride(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
					public setRenderer(param0: com.esri.arcgisruntime.symbology.Renderer): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionTable;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
					public constructor(param0: com.esri.arcgisruntime.data.FeatureSet);
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public getLayerInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureEditResult extends com.esri.arcgisruntime.data.EditResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureEditResult>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureEditResult;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureEditResult): com.esri.arcgisruntime.data.FeatureEditResult;
					public getAttachmentResults(): java.util.List<com.esri.arcgisruntime.data.EditResult>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEditResult): com.esri.arcgisruntime.data.EditResult;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureQueryResult extends com.esri.arcgisruntime.data.FeatureSet {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public isTransferLimitExceeded(): boolean;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureQueryResult;
					public iterator(): java.util.Iterator<com.esri.arcgisruntime.data.Feature>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureQueryResult): com.esri.arcgisruntime.data.FeatureQueryResult;
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureSet extends java.lang.Iterable<com.esri.arcgisruntime.data.Feature> {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureSet>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.data.FeatureSet interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
						getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
						getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					});
					public constructor();
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureSubtype {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureSubtype>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype): com.esri.arcgisruntime.data.FeatureSubtype;
					public getPrototypeAttributes(): java.util.Map<string,any>;
					public getName(): string;
					public getDomains(): java.util.Map<string,com.esri.arcgisruntime.data.Domain>;
					public getCode(): any;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export abstract class FeatureTable implements com.esri.arcgisruntime.loadable.Loadable, com.esri.arcgisruntime.mapping.popup.PopupSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureTable>;
					public hasM(): boolean;
					public isPopupEnabled(): boolean;
					public canEditGeometry(): boolean;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getLayer(): com.esri.arcgisruntime.layers.Layer;
					public addFeatureAsync(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public updateFeatureAsync(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public updateFeaturesAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public getTableName(): string;
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
					public setPopupEnabled(param0: boolean): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setDisplayName(param0: string): void;
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public createFeature(): com.esri.arcgisruntime.data.Feature;
					public queryFeatureCountAsync(param0: com.esri.arcgisruntime.data.QueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Long>;
					public loadAsync(): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					/** @deprecated */
					public getFeatureLayer(): com.esri.arcgisruntime.layers.FeatureLayer;
					public getTotalFeatureCount(): number;
					public getField(param0: string): com.esri.arcgisruntime.data.Field;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
					public canAdd(): boolean;
					public getDisplayName(): string;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public canUpdate(param0: com.esri.arcgisruntime.data.Feature): boolean;
					public deleteFeatureAsync(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public cancelLoad(): void;
					public hasZ(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public queryExtentAsync(param0: com.esri.arcgisruntime.data.QueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.geometry.Envelope>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public queryStatisticsAsync(param0: com.esri.arcgisruntime.data.StatisticsQueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.StatisticsQueryResult>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public createFeature(param0: java.util.Map<string,any>, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.data.Feature;
					public retryLoadAsync(): void;
					public deleteFeaturesAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public canDelete(param0: com.esri.arcgisruntime.data.Feature): boolean;
					public isEditable(): boolean;
					public addFeaturesAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public hasGeometry(): boolean;
					public queryFeaturesAsync(param0: com.esri.arcgisruntime.data.QueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureTemplate {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureTemplate>;
					public getDrawingTool(): com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
					public getPrototypeAttributes(): java.util.Map<string,any>;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate): com.esri.arcgisruntime.data.FeatureTemplate;
					public getDescription(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate;
				}
				export module FeatureTemplate {
					export class DrawingTool {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool>;
						public static AUTO_COMPLETE_POLYGON: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static CIRCLE: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static DOWN_ARROW: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static ELLIPSE: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static FREEHAND: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static LEFT_ARROW: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static LINE: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static NONE: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static POINT: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static POLYGON: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static RECTANGLE: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static RIGHT_ARROW: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static TEXT: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static TRIANGLE: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static UP_ARROW: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static UNKNOWN: com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static values(): native.Array<com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool>;
						public static valueOf(param0: string): com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class FeatureType {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.FeatureType>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureType;
					public getId(): any;
					public getName(): string;
					public getDomains(): java.util.Map<string,com.esri.arcgisruntime.data.Domain>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureType): com.esri.arcgisruntime.data.FeatureType;
					public getTemplates(): java.util.List<com.esri.arcgisruntime.data.FeatureTemplate>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class Field {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.Field>;
					public toJson(): string;
					public getFieldType(): com.esri.arcgisruntime.data.Field.Type;
					public isNullable(): boolean;
					public static fromJson(param0: string): com.esri.arcgisruntime.data.Field;
					public getLength(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreField): com.esri.arcgisruntime.data.Field;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreField;
					public static createDouble(param0: string, param1: string): com.esri.arcgisruntime.data.Field;
					public static createDate(param0: string, param1: string): com.esri.arcgisruntime.data.Field;
					public static createString(param0: string, param1: string, param2: number): com.esri.arcgisruntime.data.Field;
					public static createInteger(param0: string, param1: string): com.esri.arcgisruntime.data.Field;
					public static createFloat(param0: string, param1: string): com.esri.arcgisruntime.data.Field;
					public getName(): string;
					public isEditable(): boolean;
					public getAlias(): string;
					public static createShort(param0: string, param1: string): com.esri.arcgisruntime.data.Field;
					public getDomain(): com.esri.arcgisruntime.data.Domain;
				}
				export module Field {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.Field.Type>;
						public static UNKNOWN: com.esri.arcgisruntime.data.Field.Type;
						public static SHORT: com.esri.arcgisruntime.data.Field.Type;
						public static INTEGER: com.esri.arcgisruntime.data.Field.Type;
						public static GUID: com.esri.arcgisruntime.data.Field.Type;
						public static FLOAT: com.esri.arcgisruntime.data.Field.Type;
						public static DOUBLE: com.esri.arcgisruntime.data.Field.Type;
						public static DATE: com.esri.arcgisruntime.data.Field.Type;
						public static TEXT: com.esri.arcgisruntime.data.Field.Type;
						public static OID: com.esri.arcgisruntime.data.Field.Type;
						public static GLOBALID: com.esri.arcgisruntime.data.Field.Type;
						public static BLOB: com.esri.arcgisruntime.data.Field.Type;
						public static GEOMETRY: com.esri.arcgisruntime.data.Field.Type;
						public static RASTER: com.esri.arcgisruntime.data.Field.Type;
						public static XML: com.esri.arcgisruntime.data.Field.Type;
						public static valueOf(param0: string): com.esri.arcgisruntime.data.Field.Type;
						public static values(): native.Array<com.esri.arcgisruntime.data.Field.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class GeoPackage extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.GeoPackage>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoPackage): com.esri.arcgisruntime.data.GeoPackage;
					public getGeoPackageRasters(): java.util.List<com.esri.arcgisruntime.raster.GeoPackageRaster>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getGeoPackageFeatureTables(): java.util.List<com.esri.arcgisruntime.data.GeoPackageFeatureTable>;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public close(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoPackage;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class GeoPackageFeatureTable extends com.esri.arcgisruntime.data.FeatureTable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.GeoPackageFeatureTable>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoPackageFeatureTable): com.esri.arcgisruntime.data.GeoPackageFeatureTable;
					public isPopupEnabled(): boolean;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
					public getGeoPackage(): com.esri.arcgisruntime.data.GeoPackage;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public setPopupEnabled(param0: boolean): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getDescription(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoPackageFeatureTable;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class Geodatabase extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.Geodatabase>;
					public addTransactionStatusChangedListener(param0: com.esri.arcgisruntime.data.Geodatabase.TransactionStatusChangedListener): void;
					public getServiceUrl(): string;
					public removeTransactionStatusChangedListener(param0: com.esri.arcgisruntime.data.Geodatabase.TransactionStatusChangedListener): boolean;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase): com.esri.arcgisruntime.data.Geodatabase;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public loadAsync(): void;
					public getGenerateGeodatabaseGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public close(): void;
					public getGeodatabaseFeatureTable(param0: string): com.esri.arcgisruntime.data.GeodatabaseFeatureTable;
					public getGeodatabaseAnnotationTableByServiceLayerId(param0: number): com.esri.arcgisruntime.data.GeodatabaseFeatureTable;
					public getGeodatabaseAnnotationTables(): java.util.List<com.esri.arcgisruntime.data.GeodatabaseFeatureTable>;
					public getGeodatabaseFeatureTables(): java.util.List<com.esri.arcgisruntime.data.GeodatabaseFeatureTable>;
					public rollbackTransaction(): void;
					public getGeodatabaseAnnotationTable(param0: string): com.esri.arcgisruntime.data.GeodatabaseFeatureTable;
					public getSyncId(): java.util.UUID;
					public beginTransaction(): void;
					public cancelLoad(): void;
					public getGeodatabaseFeatureTableByServiceLayerId(param0: number): com.esri.arcgisruntime.data.GeodatabaseFeatureTable;
					public commitTransaction(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public hasLocalEdits(): boolean;
					public retryLoadAsync(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeodatabase;
					/** @deprecated */
					public getGenerateGeodatabaseExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public isInTransaction(): boolean;
					public isSyncEnabled(): boolean;
					public getMinServerGeneration(): number;
					public getSyncModel(): com.esri.arcgisruntime.data.SyncModel;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module Geodatabase {
					export class TransactionStatusChangedEvent<S>  extends java.util.EventObject {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.Geodatabase.TransactionStatusChangedEvent<any>>;
						public constructor(param0: any, param1: boolean);
						public isInTransaction(): boolean;
					}
					export class TransactionStatusChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.Geodatabase.TransactionStatusChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.data.Geodatabase$TransactionStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							transactionStatusChanged(param0: com.esri.arcgisruntime.data.Geodatabase.TransactionStatusChangedEvent<any>): void;
						});
						public constructor();
						public transactionStatusChanged(param0: com.esri.arcgisruntime.data.Geodatabase.TransactionStatusChangedEvent<any>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class GeodatabaseDataset {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.GeodatabaseDataset>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.data.GeodatabaseDataset interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getGeodatabase(): com.esri.arcgisruntime.data.Geodatabase;
						getName(): string;
					});
					public constructor();
					public getName(): string;
					public getGeodatabase(): com.esri.arcgisruntime.data.Geodatabase;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class GeodatabaseFeatureTable extends com.esri.arcgisruntime.data.ArcGISFeatureTable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.GeodatabaseFeatureTable>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
					public isPopupEnabled(): boolean;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public setPopupEnabled(param0: boolean): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getGeodatabase(): com.esri.arcgisruntime.data.Geodatabase;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public constructor(param0: com.esri.arcgisruntime.data.GeodatabaseFeatureTable, param1: com.esri.arcgisruntime.arcgisservices.RelationshipInfo);
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable): com.esri.arcgisruntime.data.GeodatabaseFeatureTable;
					public hasLocalEditsSince(param0: java.util.Calendar): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class InheritedDomain extends com.esri.arcgisruntime.data.Domain {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.InheritedDomain>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.cr): com.esri.arcgisruntime.data.InheritedDomain;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class QueryParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.QueryParameters>;
					public setReturnGeometry(param0: boolean): void;
					public getResultOffset(): number;
					public getWhereClause(): string;
					public getOutSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public setResultOffset(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreQueryParameters;
					public setMaxFeatures(param0: number): void;
					public getTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public setSpatialRelationship(param0: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship): void;
					public getMaxFeatures(): number;
					public getMaxAllowableOffset(): number;
					public isReturnGeometry(): boolean;
					public setTimeExtent(param0: com.esri.arcgisruntime.mapping.TimeExtent): void;
					public getInSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getObjectIds(): java.util.List<java.lang.Long>;
					public getSpatialRelationship(): com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
					public constructor();
					public setWhereClause(param0: string): void;
					public setMaxAllowableOffset(param0: number): void;
					public getOrderByFields(): java.util.List<com.esri.arcgisruntime.data.QueryParameters.OrderBy>;
					public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public setOutSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.data.QueryParameters;
					public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
				export module QueryParameters {
					export class OrderBy {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.QueryParameters.OrderBy>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOrderBy;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOrderBy): com.esri.arcgisruntime.data.QueryParameters.OrderBy;
						public getSortOrder(): com.esri.arcgisruntime.data.QueryParameters.SortOrder;
						public getFieldName(): string;
						public constructor(param0: string, param1: com.esri.arcgisruntime.data.QueryParameters.SortOrder);
					}
					export class SortOrder {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.QueryParameters.SortOrder>;
						public static ASCENDING: com.esri.arcgisruntime.data.QueryParameters.SortOrder;
						public static DESCENDING: com.esri.arcgisruntime.data.QueryParameters.SortOrder;
						public static valueOf(param0: string): com.esri.arcgisruntime.data.QueryParameters.SortOrder;
						public static values(): native.Array<com.esri.arcgisruntime.data.QueryParameters.SortOrder>;
					}
					export class SpatialRelationship {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship>;
						public static UNKNOWN: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static RELATE: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static EQUALS: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static DISJOINT: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static INTERSECTS: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static TOUCHES: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static CROSSES: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static WITHIN: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static CONTAINS: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static OVERLAPS: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static ENVELOPE_INTERSECTS: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static INDEX_INTERSECTS: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static valueOf(param0: string): com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static values(): native.Array<com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class RangeDomain extends com.esri.arcgisruntime.data.Domain {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.RangeDomain>;
					public getMaxValue(): any;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRangeDomain): com.esri.arcgisruntime.data.RangeDomain;
					public getMinValue(): any;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class RelatedFeatureQueryResult extends com.esri.arcgisruntime.data.FeatureSet {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.RelatedFeatureQueryResult>;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getRelationshipInfo(): com.esri.arcgisruntime.arcgisservices.RelationshipInfo;
					public isTransferLimitExceeded(): boolean;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getFeature(): com.esri.arcgisruntime.data.ArcGISFeature;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRelatedFeatureQueryResult): com.esri.arcgisruntime.data.RelatedFeatureQueryResult;
					public iterator(): java.util.Iterator<com.esri.arcgisruntime.data.Feature>;
					public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
					public getRelatedTable(): com.esri.arcgisruntime.data.ArcGISFeatureTable;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRelatedFeatureQueryResult;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class RelatedQueryParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.RelatedQueryParameters>;
					public setReturnGeometry(param0: boolean): void;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.RelationshipInfo);
					public getRelationshipInfo(): com.esri.arcgisruntime.arcgisservices.RelationshipInfo;
					public getResultOffset(): number;
					public getWhereClause(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters;
					public setResultOffset(param0: number): void;
					public setMaxFeatures(param0: number): void;
					public getMaxFeatures(): number;
					public isReturnGeometry(): boolean;
					public setWhereClause(param0: string): void;
					public getOrderByFields(): java.util.List<com.esri.arcgisruntime.data.QueryParameters.OrderBy>;
					public setRelationshipInfo(param0: com.esri.arcgisruntime.arcgisservices.RelationshipInfo): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters): com.esri.arcgisruntime.data.RelatedQueryParameters;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class RelationshipConstraintViolation {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.RelationshipConstraintViolation>;
					public static NONE: com.esri.arcgisruntime.data.RelationshipConstraintViolation;
					public static CARDINALITY: com.esri.arcgisruntime.data.RelationshipConstraintViolation;
					public static ORPHANED: com.esri.arcgisruntime.data.RelationshipConstraintViolation;
					public static values(): native.Array<com.esri.arcgisruntime.data.RelationshipConstraintViolation>;
					public static valueOf(param0: string): com.esri.arcgisruntime.data.RelationshipConstraintViolation;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class ServiceFeatureTable extends com.esri.arcgisruntime.data.ArcGISFeatureTable implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.ServiceFeatureTable>;
					public getFeatureRequestMode(): com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable;
					public setFeatureRequestMode(param0: com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode): void;
					public isPopupEnabled(): boolean;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getGeodatabaseVersion(): string;
					public getUri(): string;
					public setPopupEnabled(param0: boolean): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public applyEditsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.FeatureEditResult>>;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public loadAsync(): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable);
					public undoLocalEditsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
					public clearCache(param0: boolean): void;
					public queryRelatedFeaturesAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.RelatedFeatureQueryResult>>;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.data.ServiceFeatureTable, param1: com.esri.arcgisruntime.arcgisservices.RelationshipInfo);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public queryRelatedFeaturesAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature, param1: com.esri.arcgisruntime.data.RelatedQueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.RelatedFeatureQueryResult>>;
					public queryRelatedFeaturesAsync(param0: com.esri.arcgisruntime.data.ArcGISFeature, param1: com.esri.arcgisruntime.data.RelatedQueryParameters, param2: com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.RelatedFeatureQueryResult>>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public setDefinitionExpression(param0: string): void;
					public setBufferFactor(param0: number): void;
					public retryLoadAsync(): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable): com.esri.arcgisruntime.data.ServiceFeatureTable;
					public getBufferFactor(): number;
					public queryFeaturesAsync(param0: com.esri.arcgisruntime.data.QueryParameters, param1: com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem, param1: number);
					public setGeodatabaseVersion(param0: string): void;
					public loadOrRefreshFeaturesAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public populateFromServiceAsync(param0: com.esri.arcgisruntime.data.QueryParameters, param1: boolean, param2: java.lang.Iterable<string>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public getDefinitionExpression(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public queryFeaturesAsync(param0: com.esri.arcgisruntime.data.QueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module ServiceFeatureTable {
					export class FeatureRequestMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode>;
						public static UNDEFINED: com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
						public static MANUAL_CACHE: com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
						public static ON_INTERACTION_CACHE: com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
						public static ON_INTERACTION_NO_CACHE: com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
						public static values(): native.Array<com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode>;
						public static valueOf(param0: string): com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
					}
					export class QueryFeatureFields {
						public static class: java.lang.Class<com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields>;
						public static IDS_ONLY: com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields;
						public static MINIMUM: com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields;
						public static LOAD_ALL: com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields;
						public static values(): native.Array<com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields>;
						public static valueOf(param0: string): com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class ShapefileFeatureTable extends com.esri.arcgisruntime.data.FeatureTable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.ShapefileFeatureTable>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
					public isPopupEnabled(): boolean;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public isSpatialIndexEnabled(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreShapefileFeatureTable;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public setPopupEnabled(param0: boolean): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getInfo(): com.esri.arcgisruntime.data.ShapefileInfo;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public close(): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreShapefileFeatureTable): com.esri.arcgisruntime.data.ShapefileFeatureTable;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class ShapefileInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.ShapefileInfo>;
					public getCredits(): string;
					public getTags(): java.util.List<string>;
					public getCopyrightText(): string;
					public getThumbnail(): native.Array<number>;
					public getDescription(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreShapefileInfo): com.esri.arcgisruntime.data.ShapefileInfo;
					public getSummary(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreShapefileInfo;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class StatisticDefinition {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.StatisticDefinition>;
					public setOutputAlias(param0: string): void;
					public getStatisticType(): com.esri.arcgisruntime.data.StatisticType;
					public constructor(param0: string, param1: com.esri.arcgisruntime.data.StatisticType);
					public constructor(param0: string, param1: com.esri.arcgisruntime.data.StatisticType, param2: string);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticDefinition): com.esri.arcgisruntime.data.StatisticDefinition;
					public getOutputAlias(): string;
					public setFieldName(param0: string): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStatisticDefinition;
					public getFieldName(): string;
					public setStatisticType(param0: com.esri.arcgisruntime.data.StatisticType): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class StatisticRecord {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.StatisticRecord>;
					public getGroup(): java.util.Map<string,any>;
					public getStatistics(): java.util.Map<string,any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticRecord): com.esri.arcgisruntime.data.StatisticRecord;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStatisticRecord;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class StatisticType {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.StatisticType>;
					public static AVERAGE: com.esri.arcgisruntime.data.StatisticType;
					public static COUNT: com.esri.arcgisruntime.data.StatisticType;
					public static MAXIMUM: com.esri.arcgisruntime.data.StatisticType;
					public static MINIMUM: com.esri.arcgisruntime.data.StatisticType;
					public static STANDARD_DEVIATION: com.esri.arcgisruntime.data.StatisticType;
					public static SUM: com.esri.arcgisruntime.data.StatisticType;
					public static VARIANCE: com.esri.arcgisruntime.data.StatisticType;
					public static valueOf(param0: string): com.esri.arcgisruntime.data.StatisticType;
					public static values(): native.Array<com.esri.arcgisruntime.data.StatisticType>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class StatisticsQueryParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.StatisticsQueryParameters>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.data.StatisticsQueryParameters;
					public getGroupByFieldNames(): java.util.List<string>;
					public getWhereClause(): string;
					public getTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public setSpatialRelationship(param0: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship): void;
					public getStatisticDefinitions(): java.util.List<com.esri.arcgisruntime.data.StatisticDefinition>;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.data.StatisticDefinition>);
					public setTimeExtent(param0: com.esri.arcgisruntime.mapping.TimeExtent): void;
					public getSpatialRelationship(): com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
					public setWhereClause(param0: string): void;
					public getOrderByFields(): java.util.List<com.esri.arcgisruntime.data.QueryParameters.OrderBy>;
					public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters;
					public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class StatisticsQueryResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.StatisticsQueryResult>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryResult): com.esri.arcgisruntime.data.StatisticsQueryResult;
					public iterator(): java.util.Iterator<com.esri.arcgisruntime.data.StatisticRecord>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryResult;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class SyncModel {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.SyncModel>;
					public static NONE: com.esri.arcgisruntime.data.SyncModel;
					public static PER_GEODATABASE: com.esri.arcgisruntime.data.SyncModel;
					public static PER_LAYER: com.esri.arcgisruntime.data.SyncModel;
					public static values(): native.Array<com.esri.arcgisruntime.data.SyncModel>;
					public static valueOf(param0: string): com.esri.arcgisruntime.data.SyncModel;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class TileCache extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.TileCache>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTileCache): com.esri.arcgisruntime.data.TileCache;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getFullExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTileCache;
					public getThumbnail(): native.Array<number>;
					public getTileInfo(): com.esri.arcgisruntime.arcgisservices.TileInfo;
					public isAntialiasing(): boolean;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class TileKey {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.TileKey>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTileKey): com.esri.arcgisruntime.data.TileKey;
					public constructor(param0: number, param1: number, param2: number);
					public getRow(): number;
					public getLevel(): number;
					public getColumn(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class TransportationNetworkDataset extends com.esri.arcgisruntime.data.GeodatabaseDataset {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.TransportationNetworkDataset>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset): com.esri.arcgisruntime.data.TransportationNetworkDataset;
					public getName(): string;
					public getAlias(): string;
					public getGeodatabase(): com.esri.arcgisruntime.data.Geodatabase;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module data {
				export class VectorTileCache extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.data.VectorTileCache>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreVectorTileCache;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreVectorTileCache): com.esri.arcgisruntime.data.VectorTileCache;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getThumbnail(): native.Array<number>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public getSourceInfo(): com.esri.arcgisruntime.arcgisservices.VectorTileSourceInfo;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export abstract class Analysis {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.Analysis>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public setVisible(param0: boolean): void;
					public isVisible(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export class GeoElementLineOfSight extends com.esri.arcgisruntime.geoanalysis.LineOfSight {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.GeoElementLineOfSight>;
					public getTargetOffsetX(): number;
					public setTargetOffsetX(param0: number): void;
					public getObserverOffsetZ(): number;
					public getTargetGeoElement(): com.esri.arcgisruntime.mapping.GeoElement;
					public getObserverGeoElement(): com.esri.arcgisruntime.mapping.GeoElement;
					public setTargetOffsetY(param0: number): void;
					public setTargetOffsetZ(param0: number): void;
					public setObserverOffsetZ(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.mapping.GeoElement, param1: com.esri.arcgisruntime.mapping.GeoElement);
					public setObserverOffsetX(param0: number): void;
					public getObserverOffsetY(): number;
					public setObserverOffsetY(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLineOfSight);
					public getTargetOffsetY(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLineOfSight;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoElementLineOfSight;
					public getObserverOffsetX(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
					public getTargetOffsetZ(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export class GeoElementViewshed extends com.esri.arcgisruntime.geoanalysis.Viewshed {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.GeoElementViewshed>;
					public getOffsetZ(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreViewshed);
					public getHeadingOffset(): number;
					public getOffsetX(): number;
					public setOffsetX(param0: number): void;
					public setPitchOffset(param0: number): void;
					public setOffsetY(param0: number): void;
					public setOffsetZ(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public getGeoElement(): com.esri.arcgisruntime.mapping.GeoElement;
					public getOffsetY(): number;
					public setHeadingOffset(param0: number): void;
					public getPitchOffset(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreViewshed;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
					public constructor(param0: com.esri.arcgisruntime.mapping.GeoElement, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoElementViewshed;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export abstract class LineOfSight extends com.esri.arcgisruntime.geoanalysis.Analysis {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LineOfSight>;
					public removeTargetVisibilityChangedListener(param0: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibilityChangedListener): boolean;
					public static getLineWidth(): number;
					public getTargetVisibility(): com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility;
					public addTargetVisibilityChangedListener(param0: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibilityChangedListener): void;
					public static getVisibleColor(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLineOfSight);
					public static setVisibleColor(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLineOfSight;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public static setLineWidth(param0: number): void;
					public static getObstructedColor(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
					public static setObstructedColor(param0: number): void;
				}
				export module LineOfSight {
					export class TargetVisibility {
						public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility>;
						public static VISIBLE: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility;
						public static OBSTRUCTED: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility;
						public static UNKNOWN: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility;
						public static valueOf(param0: string): com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility;
						public static values(): native.Array<com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility>;
					}
					export class TargetVisibilityChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibilityChangedEvent>;
						public getSource(): com.esri.arcgisruntime.geoanalysis.LineOfSight;
						public constructor(param0: com.esri.arcgisruntime.geoanalysis.LineOfSight, param1: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility);
						public getTargetVisibility(): com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility;
					}
					export class TargetVisibilityChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibilityChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.geoanalysis.LineOfSight$TargetVisibilityChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							targetVisibilityChanged(param0: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibilityChangedEvent): void;
						});
						public constructor();
						public targetVisibilityChanged(param0: com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibilityChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export class LocationDistanceMeasurement extends com.esri.arcgisruntime.geoanalysis.Analysis {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement>;
					public setStartLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
					public getUnitSystem(): com.esri.arcgisruntime.UnitSystem;
					public getEndLocation(): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point);
					public getStartLocation(): com.esri.arcgisruntime.geometry.Point;
					public removeMeasurementChangedListener(param0: com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement.MeasurementChangedListener): boolean;
					public getHorizontalDistance(): com.esri.arcgisruntime.geometry.Distance;
					public getVerticalDistance(): com.esri.arcgisruntime.geometry.Distance;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public getDirectDistance(): com.esri.arcgisruntime.geometry.Distance;
					public addMeasurementChangedListener(param0: com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement.MeasurementChangedListener): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocationDistanceMeasurement;
					public setEndLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
					public setUnitSystem(param0: com.esri.arcgisruntime.UnitSystem): void;
				}
				export module LocationDistanceMeasurement {
					export class MeasurementChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement.MeasurementChangedEvent>;
						public getSource(): com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement;
						public getHorizontalDistance(): com.esri.arcgisruntime.geometry.Distance;
						public getVerticalDistance(): com.esri.arcgisruntime.geometry.Distance;
						public getDirectDistance(): com.esri.arcgisruntime.geometry.Distance;
					}
					export class MeasurementChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement.MeasurementChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement$MeasurementChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							measurementChanged(param0: com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement.MeasurementChangedEvent): void;
						});
						public constructor();
						public measurementChanged(param0: com.esri.arcgisruntime.geoanalysis.LocationDistanceMeasurement.MeasurementChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export class LocationLineOfSight extends com.esri.arcgisruntime.geoanalysis.LineOfSight {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LocationLineOfSight>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public getObserverLocation(): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocationLineOfSight;
					public getTargetLocation(): com.esri.arcgisruntime.geometry.Point;
					public setObserverLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
					public setTargetLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLineOfSight);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLineOfSight;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export class LocationViewshed extends com.esri.arcgisruntime.geoanalysis.Viewshed {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.LocationViewshed>;
					public getPitch(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocationViewshed): com.esri.arcgisruntime.geoanalysis.LocationViewshed;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreViewshed);
					public getHeading(): number;
					public setPitch(param0: number): void;
					public setHeading(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public setLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
					public constructor(param0: com.esri.arcgisruntime.mapping.view.Camera, param1: number, param2: number);
					public getLocation(): com.esri.arcgisruntime.geometry.Point;
					public updateFromCamera(param0: com.esri.arcgisruntime.mapping.view.Camera): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreViewshed;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocationViewshed;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geoanalysis {
				export abstract class Viewshed extends com.esri.arcgisruntime.geoanalysis.Analysis {
					public static class: java.lang.Class<com.esri.arcgisruntime.geoanalysis.Viewshed>;
					public static setFrustumOutlineColor(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreViewshed);
					public setMinDistance(param0: number): void;
					public static getFrustumOutlineColor(): number;
					public static getVisibleColor(): number;
					public setHorizontalAngle(param0: number): void;
					public static setVisibleColor(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysis;
					public getMinDistance(): number;
					public getMaxDistance(): number;
					public getHorizontalAngle(): number;
					public setMaxDistance(param0: number): void;
					public setFrustumOutlineVisible(param0: boolean): void;
					public static getObstructedColor(): number;
					public setVerticalAngle(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreViewshed;
					public getVerticalAngle(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis);
					public static setObstructedColor(param0: number): void;
					public isFrustumOutlineVisibile(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class AngularUnit extends com.esri.arcgisruntime.geometry.Unit {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.AngularUnit>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUnit);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreAngularUnit): com.esri.arcgisruntime.geometry.AngularUnit;
					public convertTo(param0: com.esri.arcgisruntime.geometry.AngularUnit, param1: number): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.AngularUnitId);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAngularUnit;
					public toRadians(param0: number): number;
					public getAngularUnitId(): com.esri.arcgisruntime.geometry.AngularUnitId;
					public convertFrom(param0: com.esri.arcgisruntime.geometry.AngularUnit, param1: number): number;
					public fromRadians(param0: number): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class AngularUnitId {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.AngularUnitId>;
					public static DEGREES: com.esri.arcgisruntime.geometry.AngularUnitId;
					public static MINUTES: com.esri.arcgisruntime.geometry.AngularUnitId;
					public static SECONDS: com.esri.arcgisruntime.geometry.AngularUnitId;
					public static GRADS: com.esri.arcgisruntime.geometry.AngularUnitId;
					public static RADIANS: com.esri.arcgisruntime.geometry.AngularUnitId;
					public static OTHER: com.esri.arcgisruntime.geometry.AngularUnitId;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.AngularUnitId>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.AngularUnitId;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class AreaUnit extends com.esri.arcgisruntime.geometry.Unit {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.AreaUnit>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUnit);
					public convertTo(param0: com.esri.arcgisruntime.geometry.AreaUnit, param1: number): number;
					public getAreaUnitId(): com.esri.arcgisruntime.geometry.AreaUnitId;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAreaUnit;
					public convertFrom(param0: com.esri.arcgisruntime.geometry.AreaUnit, param1: number): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreAreaUnit): com.esri.arcgisruntime.geometry.AreaUnit;
					public constructor(param0: com.esri.arcgisruntime.geometry.AreaUnitId);
					public fromSquareMeters(param0: number): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.LinearUnit);
					public toSquareMeters(param0: number): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class AreaUnitId {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.AreaUnitId>;
					public static HECTARES: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static ACRES: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_METERS: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_FEET: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_KILOMETERS: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_MILES: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_YARDS: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_DECIMETERS: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_CENTIMETERS: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static SQUARE_MILLIMETERS: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static OTHER: com.esri.arcgisruntime.geometry.AreaUnitId;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.AreaUnitId;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.AreaUnitId>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class CoordinateFormatter {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.CoordinateFormatter>;
					public static fromGeoRef(param0: string, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Point;
					public static fromUsng(param0: string, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Point;
					public static fromLatitudeLongitude(param0: string, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Point;
					public static toGeoRef(param0: com.esri.arcgisruntime.geometry.Point, param1: number): string;
					public static toUsng(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: boolean): string;
					public static fromGars(param0: string, param1: com.esri.arcgisruntime.geometry.SpatialReference, param2: com.esri.arcgisruntime.geometry.CoordinateFormatter.GarsConversionMode): com.esri.arcgisruntime.geometry.Point;
					public static toMgrs(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode, param2: number, param3: boolean): string;
					public constructor();
					public static fromUtm(param0: string, param1: com.esri.arcgisruntime.geometry.SpatialReference, param2: com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode): com.esri.arcgisruntime.geometry.Point;
					public static toGars(param0: com.esri.arcgisruntime.geometry.Point): string;
					public static toUtm(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode, param2: boolean): string;
					public static toLatitudeLongitude(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat, param2: number): string;
					public static fromMgrs(param0: string, param1: com.esri.arcgisruntime.geometry.SpatialReference, param2: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode): com.esri.arcgisruntime.geometry.Point;
				}
				export module CoordinateFormatter {
					export class GarsConversionMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.CoordinateFormatter.GarsConversionMode>;
						public static LOWER_LEFT: com.esri.arcgisruntime.geometry.CoordinateFormatter.GarsConversionMode;
						public static CENTER: com.esri.arcgisruntime.geometry.CoordinateFormatter.GarsConversionMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.geometry.CoordinateFormatter.GarsConversionMode;
						public static values(): native.Array<com.esri.arcgisruntime.geometry.CoordinateFormatter.GarsConversionMode>;
					}
					export class LatitudeLongitudeFormat {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat>;
						public static DECIMAL_DEGREES: com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat;
						public static DEGREES_DECIMAL_MINUTES: com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat;
						public static DEGREES_MINUTES_SECONDS: com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat;
						public static values(): native.Array<com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat>;
						public static valueOf(param0: string): com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat;
					}
					export class MgrsConversionMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode>;
						public static AUTOMATIC: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode;
						public static NEW_180_IN_ZONE_01: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode;
						public static NEW_180_IN_ZONE_60: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode;
						public static OLD_180_IN_ZONE_01: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode;
						public static OLD_180_IN_ZONE_60: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode;
						public static values(): native.Array<com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode>;
					}
					export class UtmConversionMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode>;
						public static LATITUDE_BAND_INDICATORS: com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode;
						public static NORTH_SOUTH_INDICATORS: com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode;
						public static values(): native.Array<com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode>;
						public static valueOf(param0: string): com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export abstract class DatumTransformation {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.DatumTransformation>;
					public equals(param0: any): boolean;
					public getInverse(): com.esri.arcgisruntime.geometry.DatumTransformation;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDatumTransformation);
					public getInputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getName(): string;
					public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public isMissingProjectionEngineFiles(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDatumTransformation;
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Distance {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Distance>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDistance): com.esri.arcgisruntime.geometry.Distance;
					public getValue(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDistance;
					public getUnit(): com.esri.arcgisruntime.geometry.LinearUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Envelope extends com.esri.arcgisruntime.geometry.Geometry {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Envelope>;
					public getMMax(): number;
					public static createWithM(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): com.esri.arcgisruntime.geometry.Envelope;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point);
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number);
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.geometry.SpatialReference);
					public getXMin(): number;
					public getUnknownJson(): java.util.Map<string,any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelope): com.esri.arcgisruntime.geometry.Envelope;
					public getYMax(): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number);
					public toString(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
					public constructor();
					public getYMin(): number;
					public static createWithM(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Envelope;
					public static createWithM(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Envelope;
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
					public toJson(): string;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getHeight(): number;
					public static createWithM(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): com.esri.arcgisruntime.geometry.Envelope;
					public getZMax(): number;
					public getWidth(): number;
					public getMMin(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public getXMax(): number;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getZMin(): number;
					public getCenter(): com.esri.arcgisruntime.geometry.Point;
					public getDepth(): number;
					public getDimension(): com.esri.arcgisruntime.geometry.GeometryDimension;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class EnvelopeBuilder extends com.esri.arcgisruntime.geometry.GeometryBuilder {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.EnvelopeBuilder>;
					public getMMax(): number;
					public setXY(param0: number, param1: number, param2: number, param3: number): void;
					public setZ(param0: number, param1: number): void;
					public setZMax(param0: number): void;
					public unionOf(param0: com.esri.arcgisruntime.geometry.Point): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelopeBuilder);
					public setXMin(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number);
					public offsetBy(param0: number, param1: number): void;
					public setM(param0: number, param1: number): void;
					public getXMin(): number;
					public getYMax(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder);
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number);
					public expand(param0: com.esri.arcgisruntime.geometry.Point, param1: number): void;
					public setYMax(param0: number): void;
					public setYMin(param0: number): void;
					public getYMin(): number;
					public expand(param0: number): void;
					public centerAt(param0: com.esri.arcgisruntime.geometry.Point): void;
					public setZMin(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public setDirty(): void;
					public getHeight(): number;
					public getZMax(): number;
					public getWidth(): number;
					public toGeometry(): com.esri.arcgisruntime.geometry.Envelope;
					public getMMin(): number;
					public getXMax(): number;
					public changeAspectRatio(param0: number, param1: number): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelopeBuilder): com.esri.arcgisruntime.geometry.EnvelopeBuilder;
					public getZMin(): number;
					public toGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public setMMax(param0: number): void;
					public unionOf(param0: com.esri.arcgisruntime.geometry.Envelope): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.Envelope);
					public getCenter(): com.esri.arcgisruntime.geometry.Point;
					public getDepth(): number;
					public setXMax(param0: number): void;
					public setMMin(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class ExtendOptions {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ExtendOptions>;
					public static DEFAULT: com.esri.arcgisruntime.geometry.ExtendOptions;
					public static RELOCATE_ENDS: com.esri.arcgisruntime.geometry.ExtendOptions;
					public static KEEP_END_ATTRIBUTES: com.esri.arcgisruntime.geometry.ExtendOptions;
					public static NO_END_ATTRIBUTES: com.esri.arcgisruntime.geometry.ExtendOptions;
					public static DO_NOT_EXTEND_FROM_START_POINT: com.esri.arcgisruntime.geometry.ExtendOptions;
					public static DO_NOT_EXTEND_FROM_END_POINT: com.esri.arcgisruntime.geometry.ExtendOptions;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.ExtendOptions>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.ExtendOptions;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeodesicEllipseParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeodesicEllipseParameters>;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getMaxSegmentLength(): number;
					public setAngularUnit(param0: com.esri.arcgisruntime.geometry.AngularUnit): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeodesicEllipseParameters): com.esri.arcgisruntime.geometry.GeodesicEllipseParameters;
					public getSemiAxis2Length(): number;
					public constructor(param0: number, param1: com.esri.arcgisruntime.geometry.AngularUnit, param2: com.esri.arcgisruntime.geometry.Point, param3: com.esri.arcgisruntime.geometry.LinearUnit, param4: number, param5: number, param6: com.esri.arcgisruntime.geometry.GeometryType, param7: number, param8: number);
					public setMaxPointCount(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number);
					public getLinearUnit(): com.esri.arcgisruntime.geometry.LinearUnit;
					public setAxisDirection(param0: number): void;
					public setSemiAxis1Length(param0: number): void;
					public getAngularUnit(): com.esri.arcgisruntime.geometry.AngularUnit;
					public getAxisDirection(): number;
					public setCenter(param0: com.esri.arcgisruntime.geometry.Point): void;
					public constructor();
					public getCenter(): com.esri.arcgisruntime.geometry.Point;
					public getSemiAxis1Length(): number;
					public getMaxPointCount(): number;
					public setLinearUnit(param0: com.esri.arcgisruntime.geometry.LinearUnit): void;
					public setGeometryType(param0: com.esri.arcgisruntime.geometry.GeometryType): void;
					public setMaxSegmentLength(param0: number): void;
					public setSemiAxis2Length(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeodesicSectorParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeodesicSectorParameters>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeodesicSectorParameters): com.esri.arcgisruntime.geometry.GeodesicSectorParameters;
					public setAngularUnit(param0: com.esri.arcgisruntime.geometry.AngularUnit): void;
					public setSectorAngle(param0: number): void;
					public setAxisDirection(param0: number): void;
					public getStartDirection(): number;
					public getAngularUnit(): com.esri.arcgisruntime.geometry.AngularUnit;
					public constructor(param0: number, param1: com.esri.arcgisruntime.geometry.AngularUnit, param2: com.esri.arcgisruntime.geometry.Point, param3: com.esri.arcgisruntime.geometry.LinearUnit, param4: number, param5: number, param6: com.esri.arcgisruntime.geometry.GeometryType, param7: number, param8: number, param9: number, param10: number);
					public constructor();
					public getMaxPointCount(): number;
					public setLinearUnit(param0: com.esri.arcgisruntime.geometry.LinearUnit): void;
					public setGeometryType(param0: com.esri.arcgisruntime.geometry.GeometryType): void;
					public setSemiAxis2Length(param0: number): void;
					public getSectorAngle(): number;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getMaxSegmentLength(): number;
					public getSemiAxis2Length(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeodesicSectorParameters;
					public setMaxPointCount(param0: number): void;
					public getLinearUnit(): com.esri.arcgisruntime.geometry.LinearUnit;
					public setStartDirection(param0: number): void;
					public setSemiAxis1Length(param0: number): void;
					public getAxisDirection(): number;
					public setCenter(param0: com.esri.arcgisruntime.geometry.Point): void;
					public getCenter(): com.esri.arcgisruntime.geometry.Point;
					public getSemiAxis1Length(): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: number);
					public setMaxSegmentLength(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeodeticCurveType {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeodeticCurveType>;
					public static GEODESIC: com.esri.arcgisruntime.geometry.GeodeticCurveType;
					public static LOXODROME: com.esri.arcgisruntime.geometry.GeodeticCurveType;
					public static GREAT_ELLIPTIC: com.esri.arcgisruntime.geometry.GeodeticCurveType;
					public static NORMAL_SECTION: com.esri.arcgisruntime.geometry.GeodeticCurveType;
					public static SHAPE_PRESERVING: com.esri.arcgisruntime.geometry.GeodeticCurveType;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.GeodeticCurveType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.GeodeticCurveType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeodeticDistanceResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeodeticDistanceResult>;
					public getAzimuth1(): number;
					public getDistance(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeodeticDistanceResult): com.esri.arcgisruntime.geometry.GeodeticDistanceResult;
					public getAzimuthUnit(): com.esri.arcgisruntime.geometry.AngularUnit;
					public getAzimuth2(): number;
					public getDistanceUnit(): com.esri.arcgisruntime.geometry.LinearUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeographicTransformation extends com.esri.arcgisruntime.geometry.DatumTransformation {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeographicTransformation>;
					public getInverse(): com.esri.arcgisruntime.geometry.DatumTransformation;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeographicTransformation;
					public getInverse(): com.esri.arcgisruntime.geometry.GeographicTransformation;
					public getSteps(): java.util.List<com.esri.arcgisruntime.geometry.GeographicTransformationStep>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDatumTransformation;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeographicTransformation): com.esri.arcgisruntime.geometry.GeographicTransformation;
					public static create(param0: com.esri.arcgisruntime.geometry.GeographicTransformationStep): com.esri.arcgisruntime.geometry.GeographicTransformation;
					public static create(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.GeographicTransformationStep>): com.esri.arcgisruntime.geometry.GeographicTransformation;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeographicTransformationStep {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeographicTransformationStep>;
					public getWkid(): number;
					public equals(param0: any): boolean;
					public static create(param0: number): com.esri.arcgisruntime.geometry.GeographicTransformationStep;
					public isMissingProjectionEngineFiles(): boolean;
					public static create(param0: string): com.esri.arcgisruntime.geometry.GeographicTransformationStep;
					public getWkText(): string;
					public getProjectionEngineFilenames(): java.util.List<string>;
					public getInverse(): com.esri.arcgisruntime.geometry.GeographicTransformationStep;
					public hashCode(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep): com.esri.arcgisruntime.geometry.GeographicTransformationStep;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export abstract class Geometry extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Geometry>;
					public mCoreGeometry: com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public mSpatialReference: com.esri.arcgisruntime.geometry.SpatialReference;
					public hasM(): boolean;
					public toJson(): string;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public isEmpty(): boolean;
					public static fromJson(param0: string, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Geometry;
					public hasZ(): boolean;
					public getUnknownJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public equals(param0: any): boolean;
					public static fromJson(param0: string): com.esri.arcgisruntime.geometry.Geometry;
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public hasCurves(): boolean;
					public constructor();
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public getDimension(): com.esri.arcgisruntime.geometry.GeometryDimension;
					public hashCode(): number;
					public equals(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export abstract class GeometryBuilder {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeometryBuilder>;
					public mCoreGeometryBuilder: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
					public mSpatialReference: com.esri.arcgisruntime.geometry.SpatialReference;
					public mUseNonCoreEquals: boolean;
					public hasM(): boolean;
					public isEmpty(): boolean;
					public setDirty(): void;
					public getBuilderType(): com.esri.arcgisruntime.geometry.GeometryBuilderType;
					public hasZ(): boolean;
					public static create(param0: com.esri.arcgisruntime.geometry.GeometryType, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.GeometryBuilder;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder);
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public toGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public static create(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.GeometryBuilder;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public isSketchValid(): boolean;
					public replaceGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeometryBuilderType {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeometryBuilderType>;
					public static POINT_BUILDER: com.esri.arcgisruntime.geometry.GeometryBuilderType;
					public static ENVELOPE_BUILDER: com.esri.arcgisruntime.geometry.GeometryBuilderType;
					public static POLYLINE_BUILDER: com.esri.arcgisruntime.geometry.GeometryBuilderType;
					public static POLYGON_BUILDER: com.esri.arcgisruntime.geometry.GeometryBuilderType;
					public static MULTIPOINT_BUILDER: com.esri.arcgisruntime.geometry.GeometryBuilderType;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.GeometryBuilderType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.GeometryBuilderType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeometryDimension {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeometryDimension>;
					public static POINT: com.esri.arcgisruntime.geometry.GeometryDimension;
					public static CURVE: com.esri.arcgisruntime.geometry.GeometryDimension;
					public static AREA: com.esri.arcgisruntime.geometry.GeometryDimension;
					public static VOLUME: com.esri.arcgisruntime.geometry.GeometryDimension;
					public static UNKNOWN: com.esri.arcgisruntime.geometry.GeometryDimension;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.GeometryDimension>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.GeometryDimension;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeometryEngine {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeometryEngine>;
					public static symmetricDifference(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static removeZAndM(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometryEngine;
					public static buffer(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Geometry>, param1: java.lang.Iterable<java.lang.Double>, param2: boolean): java.util.List<com.esri.arcgisruntime.geometry.Polygon>;
					public static extend(param0: com.esri.arcgisruntime.geometry.Polyline, param1: com.esri.arcgisruntime.geometry.Polyline, param2: native.Array<com.esri.arcgisruntime.geometry.ExtendOptions>): com.esri.arcgisruntime.geometry.Polyline;
					public static distanceGeodetic(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point, param2: com.esri.arcgisruntime.geometry.LinearUnit, param3: com.esri.arcgisruntime.geometry.AngularUnit, param4: com.esri.arcgisruntime.geometry.GeodeticCurveType): com.esri.arcgisruntime.geometry.GeodeticDistanceResult;
					public static project(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Geometry;
					public static isSimple(param0: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static disjoint(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static relate(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry, param2: string): boolean;
					public static moveGeodetic(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: com.esri.arcgisruntime.geometry.LinearUnit, param3: number, param4: com.esri.arcgisruntime.geometry.AngularUnit, param5: com.esri.arcgisruntime.geometry.GeodeticCurveType): com.esri.arcgisruntime.geometry.Point;
					public static buffer(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): com.esri.arcgisruntime.geometry.Polygon;
					public static overlaps(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static areaGeodetic(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.AreaUnit, param2: com.esri.arcgisruntime.geometry.GeodeticCurveType): number;
					public static area(param0: com.esri.arcgisruntime.geometry.Polygon): number;
					public static difference(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static generalize(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: boolean): com.esri.arcgisruntime.geometry.Geometry;
					public static union(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Geometry>): com.esri.arcgisruntime.geometry.Geometry;
					public static fractionAlong(param0: com.esri.arcgisruntime.geometry.Polyline, param1: com.esri.arcgisruntime.geometry.Point, param2: number): number;
					public static boundary(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static setZ(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): com.esri.arcgisruntime.geometry.Geometry;
					public static area(param0: com.esri.arcgisruntime.geometry.Envelope): number;
					public static densifyGeodetic(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: com.esri.arcgisruntime.geometry.LinearUnit, param3: com.esri.arcgisruntime.geometry.GeodeticCurveType): com.esri.arcgisruntime.geometry.Geometry;
					public static autoComplete(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Polygon>, param1: java.lang.Iterable<com.esri.arcgisruntime.geometry.Polyline>): java.util.List<com.esri.arcgisruntime.geometry.Polygon>;
					public static nearestVertex(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.geometry.ProximityResult;
					public static offset(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: com.esri.arcgisruntime.geometry.GeometryOffsetType, param3: number, param4: number): com.esri.arcgisruntime.geometry.Geometry;
					public static simplify(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static reshape(param0: com.esri.arcgisruntime.geometry.Multipart, param1: com.esri.arcgisruntime.geometry.Polyline): com.esri.arcgisruntime.geometry.Multipart;
					public static removeZ(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static intersections(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): java.util.List<com.esri.arcgisruntime.geometry.Geometry>;
					public static combineExtents(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Envelope;
					public static createPointAlong(param0: com.esri.arcgisruntime.geometry.Polyline, param1: number): com.esri.arcgisruntime.geometry.Point;
					public static convexHull(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Geometry>, param1: boolean): java.util.List<com.esri.arcgisruntime.geometry.Geometry>;
					public static intersection(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static intersects(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static cut(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Polyline): java.util.List<com.esri.arcgisruntime.geometry.Geometry>;
					public static removeM(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryEngine);
					public static setZAndM(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: number): com.esri.arcgisruntime.geometry.Geometry;
					public static bufferGeodetic(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Geometry>, param1: java.lang.Iterable<java.lang.Double>, param2: com.esri.arcgisruntime.geometry.LinearUnit, param3: number, param4: com.esri.arcgisruntime.geometry.GeodeticCurveType, param5: boolean): java.util.List<com.esri.arcgisruntime.geometry.Polygon>;
					public static lengthGeodetic(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.LinearUnit, param2: com.esri.arcgisruntime.geometry.GeodeticCurveType): number;
					public static bufferGeodetic(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: com.esri.arcgisruntime.geometry.LinearUnit, param3: number, param4: com.esri.arcgisruntime.geometry.GeodeticCurveType): com.esri.arcgisruntime.geometry.Polygon;
					public static distanceBetween(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): number;
					public static convexHull(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static setM(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): com.esri.arcgisruntime.geometry.Geometry;
					public static nearestCoordinate(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.geometry.ProximityResult;
					public static equals(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static moveGeodetic(param0: java.util.List<com.esri.arcgisruntime.geometry.Point>, param1: number, param2: com.esri.arcgisruntime.geometry.LinearUnit, param3: number, param4: com.esri.arcgisruntime.geometry.AngularUnit, param5: com.esri.arcgisruntime.geometry.GeodeticCurveType): java.util.List<com.esri.arcgisruntime.geometry.Point>;
					public static labelPoint(param0: com.esri.arcgisruntime.geometry.Polygon): com.esri.arcgisruntime.geometry.Point;
					public static densify(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): com.esri.arcgisruntime.geometry.Geometry;
					public static touches(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static length(param0: com.esri.arcgisruntime.geometry.Polyline): number;
					public static clip(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Envelope): com.esri.arcgisruntime.geometry.Geometry;
					public static within(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static sectorGeodesic(param0: com.esri.arcgisruntime.geometry.GeodesicSectorParameters): com.esri.arcgisruntime.geometry.Geometry;
					public static ellipseGeodesic(param0: com.esri.arcgisruntime.geometry.GeodesicEllipseParameters): com.esri.arcgisruntime.geometry.Geometry;
					public static contains(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static crosses(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): boolean;
					public static union(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static normalizeCentralMeridian(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.geometry.Geometry;
					public static combineExtents(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Geometry>): com.esri.arcgisruntime.geometry.Envelope;
					public static project(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.geometry.SpatialReference, param2: com.esri.arcgisruntime.geometry.DatumTransformation): com.esri.arcgisruntime.geometry.Geometry;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeometryOffsetType {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeometryOffsetType>;
					public static MITERED: com.esri.arcgisruntime.geometry.GeometryOffsetType;
					public static BEVELLED: com.esri.arcgisruntime.geometry.GeometryOffsetType;
					public static ROUNDED: com.esri.arcgisruntime.geometry.GeometryOffsetType;
					public static SQUARED: com.esri.arcgisruntime.geometry.GeometryOffsetType;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.GeometryOffsetType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.GeometryOffsetType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class GeometryType {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.GeometryType>;
					public static POINT: com.esri.arcgisruntime.geometry.GeometryType;
					public static ENVELOPE: com.esri.arcgisruntime.geometry.GeometryType;
					public static POLYLINE: com.esri.arcgisruntime.geometry.GeometryType;
					public static POLYGON: com.esri.arcgisruntime.geometry.GeometryType;
					public static MULTIPOINT: com.esri.arcgisruntime.geometry.GeometryType;
					public static UNKNOWN: com.esri.arcgisruntime.geometry.GeometryType;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.GeometryType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.GeometryType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class ImmutablePart extends java.util.AbstractList<com.esri.arcgisruntime.geometry.Segment> {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ImmutablePart>;
					public getSegmentIndexFromStartPointIndex(param0: number): number;
					public isEmpty(): boolean;
					public getPointCount(): number;
					public getStartPoint(): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImmutablePart);
					public size(): number;
					public getPoint(param0: number): com.esri.arcgisruntime.geometry.Point;
					public getEndPoint(): com.esri.arcgisruntime.geometry.Point;
					public indexOf(param0: any): number;
					public hasCurves(): boolean;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public get(param0: number): com.esri.arcgisruntime.geometry.Segment;
					public getPoints(): java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>;
					public getSegmentIndexFromEndPointIndex(param0: number): number;
					public getStartPointIndexFromSegmentIndex(param0: number): number;
					public getEndPointIndexFromSegmentIndex(param0: number): number;
					public contains(param0: any): boolean;
				}
				export module ImmutablePart {
					export class a extends java.util.AbstractList<com.esri.arcgisruntime.geometry.Point> {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ImmutablePart.a>;
						public size(): number;
						public a(param0: number): com.esri.arcgisruntime.geometry.Point;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class ImmutablePartCollection extends java.util.AbstractList<com.esri.arcgisruntime.geometry.ImmutablePart> {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ImmutablePartCollection>;
					public isEmpty(): boolean;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public get(param0: number): com.esri.arcgisruntime.geometry.ImmutablePart;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImmutablePartCollection);
					public size(): number;
					public indexOf(param0: any): number;
					public getPartsAsPoints(): java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>;
				}
				export module ImmutablePartCollection {
					export class a extends java.lang.Iterable<com.esri.arcgisruntime.geometry.Point> {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ImmutablePartCollection.a>;
						public iterator(): java.util.Iterator<com.esri.arcgisruntime.geometry.Point>;
					}
					export class b extends java.util.Iterator<com.esri.arcgisruntime.geometry.Point> {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ImmutablePartCollection.b>;
						public a(): com.esri.arcgisruntime.geometry.Point;
						public hasNext(): boolean;
						public remove(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class ImmutablePointCollection extends java.util.AbstractList<com.esri.arcgisruntime.geometry.Point> {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ImmutablePointCollection>;
					public isEmpty(): boolean;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public size(): number;
					public get(param0: number): com.esri.arcgisruntime.geometry.Point;
					public indexOf(param0: any): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImmutablePointCollection);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class LineSegment extends com.esri.arcgisruntime.geometry.Segment {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.LineSegment>;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLineSegment): com.esri.arcgisruntime.geometry.LineSegment;
					public toString(): string;
					/** @deprecated */
					public static createLineAtAngleFrom(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number): com.esri.arcgisruntime.geometry.LineSegment;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLineSegment);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSegment);
					public static createLineAtAngleFromPoint(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number): com.esri.arcgisruntime.geometry.LineSegment;
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point, param2: com.esri.arcgisruntime.geometry.SpatialReference);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class LinearUnit extends com.esri.arcgisruntime.geometry.Unit {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.LinearUnit>;
					public constructor(param0: com.esri.arcgisruntime.geometry.AreaUnit);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUnit);
					public constructor(param0: com.esri.arcgisruntime.geometry.LinearUnitId);
					public fromMeters(param0: number): number;
					public convertTo(param0: com.esri.arcgisruntime.geometry.LinearUnit, param1: number): number;
					public toMeters(param0: number): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLinearUnit): com.esri.arcgisruntime.geometry.LinearUnit;
					public convertFrom(param0: com.esri.arcgisruntime.geometry.LinearUnit, param1: number): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
					public getLinearUnitId(): com.esri.arcgisruntime.geometry.LinearUnitId;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class LinearUnitId {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.LinearUnitId>;
					public static FEET: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static INCHES: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static KILOMETERS: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static METERS: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static MILLIMETERS: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static MILES: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static NAUTICAL_MILES: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static YARDS: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static CENTIMETERS: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static OTHER: com.esri.arcgisruntime.geometry.LinearUnitId;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.LinearUnitId>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.LinearUnitId;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export abstract class Multipart extends com.esri.arcgisruntime.geometry.Geometry {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Multipart>;
					public mCoreMultipart: com.esri.arcgisruntime.internal.jni.CoreMultipart;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipart);
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.geometry.MultipartBuilder);
					public constructor();
					public getParts(): com.esri.arcgisruntime.geometry.ImmutablePartCollection;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public getUnknownJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMultipart;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export abstract class MultipartBuilder extends com.esri.arcgisruntime.geometry.GeometryBuilder {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.MultipartBuilder>;
					public addPoint(param0: number, param1: number): void;
					public addPoint(param0: com.esri.arcgisruntime.geometry.Point): void;
					public addPoint(param0: number, param1: number, param2: number): void;
					public addPart(): void;
					public addParts(param0: com.esri.arcgisruntime.geometry.PartCollection): void;
					public static getNonNullSpatialRefFromPoints(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.PartCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.PointCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.Part);
					public addPointsToPart(param0: number, param1: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>): void;
					public getParts(): com.esri.arcgisruntime.geometry.PartCollection;
					public addPart(param0: com.esri.arcgisruntime.geometry.PointCollection): void;
					public addPoints(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>): void;
					public replaceGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
					public addPointToPart(param0: number, param1: com.esri.arcgisruntime.geometry.Point): void;
					public addPart(param0: com.esri.arcgisruntime.geometry.Part): void;
					public static getNonNullSpatialRefFromParts(param0: com.esri.arcgisruntime.geometry.PartCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
					public static getNonNullSpatialRefFromSegments(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Segment>, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Multipoint extends com.esri.arcgisruntime.geometry.Geometry {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Multipoint>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor();
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipoint);
					public getPoints(): com.esri.arcgisruntime.geometry.ImmutablePointCollection;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMultipoint;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultipoint): com.esri.arcgisruntime.geometry.Multipoint;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public getUnknownJson(): java.util.Map<string,any>;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class MultipointBuilder extends com.esri.arcgisruntime.geometry.GeometryBuilder {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.MultipointBuilder>;
					public hasM(): boolean;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public toGeometry(): com.esri.arcgisruntime.geometry.Multipoint;
					public getBuilderType(): com.esri.arcgisruntime.geometry.GeometryBuilderType;
					public hasZ(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipointBuilder);
					public getPoints(): com.esri.arcgisruntime.geometry.PointCollection;
					public constructor(param0: com.esri.arcgisruntime.geometry.Multipoint);
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public toGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultipointBuilder): com.esri.arcgisruntime.geometry.MultipointBuilder;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMultipointBuilder;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Part extends java.util.AbstractList<com.esri.arcgisruntime.geometry.Segment> {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Part>;
					public addPoint(param0: number, param1: number): void;
					public addPoint(param0: com.esri.arcgisruntime.geometry.Point): void;
					public getSegmentIndexFromStartPointIndex(param0: number): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePointCollection);
					public isEmpty(): boolean;
					public getPointCount(): number;
					public addPoint(param0: number, param1: number, param2: number): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public size(): number;
					public getPoint(param0: number): com.esri.arcgisruntime.geometry.Point;
					public getEndPoint(): com.esri.arcgisruntime.geometry.Point;
					public setPoint(param0: number, param1: com.esri.arcgisruntime.geometry.Point): void;
					public get(param0: number): com.esri.arcgisruntime.geometry.Segment;
					public addPoint(param0: number, param1: com.esri.arcgisruntime.geometry.Point): void;
					public clear(): void;
					public getPoints(): java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>;
					public getSegmentIndexFromEndPointIndex(param0: number): number;
					public addPoints(param0: java.util.Collection<any>): void;
					public addPoint(param0: number, param1: number, param2: number, param3: number): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public contains(param0: any): boolean;
					public add(param0: number, param1: com.esri.arcgisruntime.geometry.Segment): void;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public addAllPoints(param0: number, param1: java.util.Collection<any>): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public getStartPoint(): com.esri.arcgisruntime.geometry.Point;
					public removePoint(param0: number): com.esri.arcgisruntime.geometry.Point;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public add(param0: com.esri.arcgisruntime.geometry.Segment): boolean;
					public indexOf(param0: any): number;
					public remove(param0: number): com.esri.arcgisruntime.geometry.Segment;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Segment>);
					public hasCurves(): boolean;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection);
					public set(param0: number, param1: com.esri.arcgisruntime.geometry.Segment): com.esri.arcgisruntime.geometry.Segment;
					public getStartPointIndexFromSegmentIndex(param0: number): number;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Segment>, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public getEndPointIndexFromSegmentIndex(param0: number): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMutablePart): com.esri.arcgisruntime.geometry.Part;
				}
				export module Part {
					export class a extends java.util.AbstractList<com.esri.arcgisruntime.geometry.Point> {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Part.a>;
						public a(param0: number, param1: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.geometry.Point;
						public contains(param0: any): boolean;
						public b(param0: number): com.esri.arcgisruntime.geometry.Point;
						public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
						public clear(): void;
						public size(): number;
						public b(param0: number, param1: com.esri.arcgisruntime.geometry.Point): void;
						public a(param0: number): com.esri.arcgisruntime.geometry.Point;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class PartCollection extends java.util.AbstractList<com.esri.arcgisruntime.geometry.Part> {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.PartCollection>;
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePointCollection);
					public isEmpty(): boolean;
					public add(param0: number, param1: com.esri.arcgisruntime.geometry.Part): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.Part);
					public constructor(param0: com.esri.arcgisruntime.geometry.Part, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public size(): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePartCollection);
					public getPartsAsPoints(): java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMutablePartCollection);
					public clear(): void;
					public add(param0: com.esri.arcgisruntime.geometry.PointCollection): boolean;
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection);
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public set(param0: number, param1: com.esri.arcgisruntime.geometry.Part): com.esri.arcgisruntime.geometry.Part;
					public get(param0: number): com.esri.arcgisruntime.geometry.Part;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePartCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public indexOf(param0: any): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePart);
					public remove(param0: number): com.esri.arcgisruntime.geometry.Part;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public add(param0: com.esri.arcgisruntime.geometry.Part): boolean;
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMutablePartCollection;
					public constructor(param0: com.esri.arcgisruntime.geometry.ImmutablePart, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public add(param0: number, param1: com.esri.arcgisruntime.geometry.PointCollection): void;
				}
				export module PartCollection {
					export class a extends java.lang.Iterable<com.esri.arcgisruntime.geometry.Point> {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.PartCollection.a>;
						public iterator(): java.util.Iterator<com.esri.arcgisruntime.geometry.Point>;
					}
					export class b extends java.util.Iterator<com.esri.arcgisruntime.geometry.Point> {
						public static class: java.lang.Class<com.esri.arcgisruntime.geometry.PartCollection.b>;
						public a(): com.esri.arcgisruntime.geometry.Point;
						public hasNext(): boolean;
						public remove(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Point extends com.esri.arcgisruntime.geometry.Geometry {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Point>;
					public hasM(): boolean;
					public getX(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.SpatialReference);
					public getUnknownJson(): java.util.Map<string,any>;
					public toString(): string;
					public constructor();
					public constructor(param0: number, param1: number, param2: number);
					public static createWithM(param0: number, param1: number, param2: number): com.esri.arcgisruntime.geometry.Point;
					public getZ(): number;
					public static createWithM(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Point;
					public static createWithM(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.geometry.SpatialReference);
					public hashCode(): number;
					public constructor(param0: number, param1: number);
					public toJson(): string;
					public static createWithM(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.Point;
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getY(): number;
					public hasZ(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public equals(param0: any): boolean;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getM(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CorePoint;
					public getDimension(): com.esri.arcgisruntime.geometry.GeometryDimension;
					public equals(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class PointBuilder extends com.esri.arcgisruntime.geometry.GeometryBuilder {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.PointBuilder>;
					public setXY(param0: number, param1: number): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePointBuilder): com.esri.arcgisruntime.geometry.PointBuilder;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public setY(param0: number): void;
					public getX(): number;
					public setZ(param0: number): void;
					public constructor(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.geometry.SpatialReference);
					public setX(param0: number): void;
					public getY(): number;
					public constructor(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.SpatialReference);
					public toGeometry(): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePointBuilder);
					public setM(param0: number): void;
					public constructor(param0: number, param1: number, param2: number, param3: number);
					public toGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public constructor(param0: number, param1: number, param2: number);
					public getZ(): number;
					public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.geometry.SpatialReference);
					public getM(): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point);
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class PointCollection extends java.util.AbstractList<com.esri.arcgisruntime.geometry.Point> {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.PointCollection>;
					public set(param0: number, param1: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public isEmpty(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMutablePointCollection): com.esri.arcgisruntime.geometry.PointCollection;
					public constructor(param0: com.esri.arcgisruntime.geometry.Part);
					public add(param0: number, param1: number, param2: number, param3: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMutablePointCollection;
					public constructor(param0: com.esri.arcgisruntime.geometry.Part, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public add(param0: com.esri.arcgisruntime.geometry.Point): boolean;
					public size(): number;
					public get(param0: number): com.esri.arcgisruntime.geometry.Point;
					public add(param0: number, param1: number, param2: number): boolean;
					public indexOf(param0: any): number;
					public add(param0: number, param1: com.esri.arcgisruntime.geometry.Point): void;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public add(param0: number, param1: number, param2: number): void;
					public clear(): void;
					public add(param0: number, param1: number): boolean;
					public remove(param0: number): com.esri.arcgisruntime.geometry.Point;
					public set(param0: number, param1: number, param2: number): com.esri.arcgisruntime.geometry.Point;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.geometry.Point>);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Polygon extends com.esri.arcgisruntime.geometry.Multipart {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Polygon>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipart);
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.geometry.Part);
					public constructor(param0: com.esri.arcgisruntime.geometry.Part, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CorePolygon;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public getUnknownJson(): java.util.Map<string,any>;
					public toPolyline(): com.esri.arcgisruntime.geometry.Polyline;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor(param0: com.esri.arcgisruntime.geometry.MultipartBuilder);
					public constructor();
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePolygon);
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePolygon): com.esri.arcgisruntime.geometry.Polygon;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMultipart;
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class PolygonBuilder extends com.esri.arcgisruntime.geometry.MultipartBuilder {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.PolygonBuilder>;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.geometry.Part);
					public constructor(param0: com.esri.arcgisruntime.geometry.Part, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePolygonBuilder);
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.PartCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.PointCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder);
					public toPolyline(): com.esri.arcgisruntime.geometry.Polyline;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.Part);
					public toGeometry(): com.esri.arcgisruntime.geometry.Polygon;
					public toGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection);
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePolygonBuilder): com.esri.arcgisruntime.geometry.PolygonBuilder;
					public constructor(param0: com.esri.arcgisruntime.geometry.Polygon);
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Polyline extends com.esri.arcgisruntime.geometry.Multipart {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Polyline>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipart);
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.geometry.Part);
					public constructor(param0: com.esri.arcgisruntime.geometry.Part, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public getInternal(): com.esri.arcgisruntime.internal.jni.fg;
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					public getUnknownJson(): java.util.Map<string,any>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.fg): com.esri.arcgisruntime.geometry.Polyline;
					public constructor(param0: com.esri.arcgisruntime.geometry.MultipartBuilder);
					public constructor();
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection);
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.fg);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMultipart;
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class PolylineBuilder extends com.esri.arcgisruntime.geometry.MultipartBuilder {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.PolylineBuilder>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePolylineBuilder): com.esri.arcgisruntime.geometry.PolylineBuilder;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePolylineBuilder);
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.geometry.Part);
					public constructor(param0: com.esri.arcgisruntime.geometry.Part, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public toGeometry(): com.esri.arcgisruntime.geometry.Polyline;
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.PartCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.PointCollection);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder);
					public constructor(param0: com.esri.arcgisruntime.geometry.Polyline);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder, param1: com.esri.arcgisruntime.geometry.Part);
					public toGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public constructor(param0: com.esri.arcgisruntime.geometry.PointCollection);
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection);
					public constructor(param0: com.esri.arcgisruntime.geometry.PartCollection, param1: com.esri.arcgisruntime.geometry.SpatialReference);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class ProximityResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.ProximityResult>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreProximityResult;
					public getDistance(): number;
					public getPartIndex(): number;
					public getCoordinate(): com.esri.arcgisruntime.geometry.Point;
					public getPointIndex(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreProximityResult): com.esri.arcgisruntime.geometry.ProximityResult;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export abstract class Segment {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Segment>;
					public getStartPoint(): com.esri.arcgisruntime.geometry.Point;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSegment);
					public getEndPoint(): com.esri.arcgisruntime.geometry.Point;
					public isCurve(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSegment;
					public isClosed(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class SpatialReference extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.SpatialReference>;
					public getWkid(): number;
					public getConvergenceAngle(param0: com.esri.arcgisruntime.geometry.Point): number;
					public toJson(): string;
					public static create(param0: string): com.esri.arcgisruntime.geometry.SpatialReference;
					public isProjected(): boolean;
					public getVerticalWkid(): number;
					public static create(param0: number): com.esri.arcgisruntime.geometry.SpatialReference;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
					public getUnknownJson(): java.util.Map<string,any>;
					public getUnit(): com.esri.arcgisruntime.geometry.Unit;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public equals(param0: any): boolean;
					public getBaseGeographic(): com.esri.arcgisruntime.geometry.SpatialReference;
					public static fromJson(param0: string): com.esri.arcgisruntime.geometry.SpatialReference;
					public static create(param0: number, param1: number): com.esri.arcgisruntime.geometry.SpatialReference;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.geometry.SpatialReference;
					public isGeographic(): boolean;
					public hashCode(): number;
					public isPannable(): boolean;
					public getWKText(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class SpatialReferences {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.SpatialReferences>;
					public constructor();
					public static getWebMercator(): com.esri.arcgisruntime.geometry.SpatialReference;
					public static getWgs84(): com.esri.arcgisruntime.geometry.SpatialReference;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class TransformationCatalog {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.TransformationCatalog>;
					public static getTransformation(param0: com.esri.arcgisruntime.geometry.SpatialReference, param1: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.geometry.DatumTransformation;
					public static getTransformation(param0: com.esri.arcgisruntime.geometry.SpatialReference, param1: com.esri.arcgisruntime.geometry.SpatialReference, param2: com.esri.arcgisruntime.geometry.Envelope): com.esri.arcgisruntime.geometry.DatumTransformation;
					public static getProjectionEngineDirectory(): string;
					public static getTransformationsBySuitability(param0: com.esri.arcgisruntime.geometry.SpatialReference, param1: com.esri.arcgisruntime.geometry.SpatialReference): java.util.List<com.esri.arcgisruntime.geometry.DatumTransformation>;
					public static getTransformationsBySuitability(param0: com.esri.arcgisruntime.geometry.SpatialReference, param1: com.esri.arcgisruntime.geometry.SpatialReference, param2: com.esri.arcgisruntime.geometry.Envelope): java.util.List<com.esri.arcgisruntime.geometry.DatumTransformation>;
					public static setProjectionEngineDirectory(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class Unit {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.Unit>;
					public mCoreUnit: com.esri.arcgisruntime.internal.jni.CoreUnit;
					public getPluralDisplayName(): string;
					public getUnitId(): number;
					public getDisplayName(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUnit);
					public getAbbreviation(): string;
					public static fromUnitId(param0: number): com.esri.arcgisruntime.geometry.Unit;
					public getName(): string;
					public getUnitType(): com.esri.arcgisruntime.geometry.UnitType;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUnit;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module geometry {
				export class UnitType {
					public static class: java.lang.Class<com.esri.arcgisruntime.geometry.UnitType>;
					public static LINEAR_UNIT: com.esri.arcgisruntime.geometry.UnitType;
					public static ANGULAR_UNIT: com.esri.arcgisruntime.geometry.UnitType;
					public static AREA_UNIT: com.esri.arcgisruntime.geometry.UnitType;
					public static UNKNOWN: com.esri.arcgisruntime.geometry.UnitType;
					public static values(): native.Array<com.esri.arcgisruntime.geometry.UnitType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.geometry.UnitType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module hydrography {
				export class EncCell extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncCell>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCCell): com.esri.arcgisruntime.hydrography.EncCell;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCCell;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.hydrography.EncDataset);
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getDataset(): com.esri.arcgisruntime.hydrography.EncDataset;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module hydrography {
				export class EncDataset {
					public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncDataset>;
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCDataset): com.esri.arcgisruntime.hydrography.EncDataset;
					public getVolumeName(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCDataset;
					public getDescription(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module hydrography {
				export class EncEnvironmentSettings {
					public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings>;
					public static getSencDataPath(): string;
					public static setResourcePath(param0: string): void;
					public constructor();
					public static getResourcePath(): string;
					public static setSencDataPath(param0: string): void;
					public static getDisplaySettings(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings;
				}
				export module EncEnvironmentSettings {
					export class DisplaySettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings>;
						public getTextGroupVisibilitySettings(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.TextGroupVisibilitySettings;
						public getMarinerSettings(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCDisplaySettings;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCDisplaySettings): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings;
						public getViewingGroupSettings(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.ViewingGroupSettings;
					}
					export module DisplaySettings {
						export class MarinerSettings {
							public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings>;
							public getAreaSymbolizationType(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType;
							public isDisplayNOBJNM(): boolean;
							public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCMarinerSettings;
							public setIsDataQuality(param0: boolean): void;
							public setIsLabelSafetyContours(param0: boolean): void;
							public isShallowDepthPattern(): boolean;
							public setIsHonorSCAMIN(param0: boolean): void;
							public getDisplayCategories(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayCategories;
							public getDisplayDepthUnits(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits;
							public getDeepContour(): number;
							public setIsLowAccuracy(param0: boolean): void;
							public isIsolatedDangers(): boolean;
							public setAreaSymbolizationType(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType): void;
							public setDisplayDepthUnits(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits): void;
							public setIsLabelContours(param0: boolean): void;
							public setIsIsolatedDangers(param0: boolean): void;
							public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCMarinerSettings): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings;
							public isLabelSafetyContours(): boolean;
							public getSafetyContour(): number;
							public setShallowContour(param0: number): void;
							public getColorScheme(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme;
							public setSafetyContour(param0: number): void;
							public setColorScheme(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme): void;
							public isLabelContours(): boolean;
							public getPointSymbolizationType(): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType;
							public setDeepContour(param0: number): void;
							public isDataQuality(): boolean;
							public isHonorSCAMIN(): boolean;
							public setPointSymbolizationType(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType): void;
							public setIsTwoDepthShades(param0: boolean): void;
							public isTwoDepthShades(): boolean;
							public resetToDefaults(): void;
							public setIsDisplayNOBJNM(param0: boolean): void;
							public isLowAccuracy(): boolean;
							public getShallowContour(): number;
							public setIsShallowDepthPattern(param0: boolean): void;
						}
						export module MarinerSettings {
							export class AreaSymbolizationType {
								public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType>;
								public static PLAIN: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType;
								public static SYMBOLIZED: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType;
								public static valueOf(param0: string): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType;
								public static values(): native.Array<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType>;
							}
							export class ColorScheme {
								public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme>;
								public static DAY: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme;
								public static DUSK: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme;
								public static NIGHT: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme;
								public static values(): native.Array<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme>;
								public static valueOf(param0: string): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme;
							}
							export class DisplayCategories {
								public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayCategories>;
								public setIsOtherDisplay(param0: boolean): void;
								public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCDisplayCategories): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayCategories;
								public setIsDisplayBase(param0: boolean): void;
								public isOtherDisplay(): boolean;
								public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCDisplayCategories;
								public isStandardDisplay(): boolean;
								public isDisplayBase(): boolean;
								public setIsStandardDisplay(param0: boolean): void;
							}
							export class DisplayDepthUnits {
								public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits>;
								public static METERS: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits;
								public static FEET: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits;
								public static FATHOMS: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits;
								public static values(): native.Array<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits>;
								public static valueOf(param0: string): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits;
							}
							export class PointSymbolizationType {
								public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType>;
								public static SIMPLIFIED: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType;
								public static PAPER_CHART: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType;
								public static valueOf(param0: string): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType;
								public static values(): native.Array<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType>;
							}
						}
						export class TextGroupVisibilitySettings {
							public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.TextGroupVisibilitySettings>;
							public isLightDescription(): boolean;
							public setIsMagneticVariationAndSweptDepth(param0: boolean): void;
							public isNatureOfSeabed(): boolean;
							public setIsNatureOfSeabed(param0: boolean): void;
							public isImportantText(): boolean;
							public isNoteOnChartData(): boolean;
							public isNamesForPositionReporting(): boolean;
							public setIsBerthNumber(param0: boolean): void;
							public setIsHeightOfIsletOrLandFeature(param0: boolean): void;
							public setIsNoteOnChartData(param0: boolean): void;
							public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCTextGroupVisibilitySettings): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.TextGroupVisibilitySettings;
							public isMagneticVariationAndSweptDepth(): boolean;
							public resetToDefaults(): void;
							public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCTextGroupVisibilitySettings;
							public setIsLightDescription(param0: boolean): void;
							public setIsImportantText(param0: boolean): void;
							public isCurrentVelocity(): boolean;
							public setIsNamesForPositionReporting(param0: boolean): void;
							public setIsGeographicNames(param0: boolean): void;
							public isBerthNumber(): boolean;
							public setIsCurrentVelocity(param0: boolean): void;
							public isHeightOfIsletOrLandFeature(): boolean;
							public isGeographicNames(): boolean;
						}
						export class ViewingGroupSettings {
							public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.ViewingGroupSettings>;
							public isMagneticVariation(): boolean;
							public setIsSpotSoundings(param0: boolean): void;
							public isTidal(): boolean;
							public setIsChartScaleBoundaries(param0: boolean): void;
							public setIsLights(param0: boolean): void;
							public isLights(): boolean;
							public setIsBoundariesAndLimits(param0: boolean): void;
							public isChartScaleBoundaries(): boolean;
							public isDepthContours(): boolean;
							public setIsTidal(param0: boolean): void;
							public isProhibitedAndRestrictedAreas(): boolean;
							public setIsSeabed(param0: boolean): void;
							public isStandardMiscellaneous(): boolean;
							public setIsBuoysBeaconsStructures(param0: boolean): void;
							public setIsOtherMiscellaneous(param0: boolean): void;
							public isSpotSoundings(): boolean;
							public isBoundariesAndLimits(): boolean;
							public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCViewingGroupSettings): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.ViewingGroupSettings;
							public setIsDryingLine(param0: boolean): void;
							public setIsAllIsolatedDangers(param0: boolean): void;
							public setIsSubmarineCablesAndPipelines(param0: boolean): void;
							public isSeabed(): boolean;
							public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCViewingGroupSettings;
							public setIsArchipelagicSeaLanes(param0: boolean): void;
							public setIsBuoysBeaconsAidsToNavigation(param0: boolean): void;
							public isOtherMiscellaneous(): boolean;
							public setIsStandardMiscellaneous(param0: boolean): void;
							public setIsProhibitedAndRestrictedAreas(param0: boolean): void;
							public isSubmarineCablesAndPipelines(): boolean;
							public isAllIsolatedDangers(): boolean;
							public isShipsRoutingSystemsAndFerryRoutes(): boolean;
							public isDryingLine(): boolean;
							public isBuoysBeaconsStructures(): boolean;
							public resetToDefaults(): void;
							public setIsMagneticVariation(param0: boolean): void;
							public setIsDepthContours(param0: boolean): void;
							public isArchipelagicSeaLanes(): boolean;
							public isBuoysBeaconsAidsToNavigation(): boolean;
							public setIsShipsRoutingSystemsAndFerryRoutes(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module hydrography {
				export class EncExchangeSet extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncExchangeSet>;
					public constructor(param0: java.lang.Iterable<string>);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getReadme(): string;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getDatasets(): java.util.List<com.esri.arcgisruntime.hydrography.EncDataset>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public getPaths(): java.util.List<string>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module hydrography {
				export class EncFeature extends com.esri.arcgisruntime.mapping.GeoElement {
					public static class: java.lang.Class<com.esri.arcgisruntime.hydrography.EncFeature>;
					public getAttributeDescription(param0: string): string;
					public getAcronym(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCFeature;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCFeature): com.esri.arcgisruntime.hydrography.EncFeature;
					public computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
					public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public getDescription(): string;
					public getAttributes(): java.util.Map<string,any>;
					public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module a {
					export abstract class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.a.a>;
						public a(): com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module a {
					export class b extends com.esri.arcgisruntime.internal.a.a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.a.b>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module a {
					export class c extends com.esri.arcgisruntime.arcgisservices.TimeAware {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.a.c>;
						public isTimeFilteringEnabled(): boolean;
						public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
						public isTimeFilteringSupported(): boolean;
						public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
						public constructor(param0: com.esri.arcgisruntime.arcgisservices.TimeAware, param1: com.esri.arcgisruntime.internal.jni.ii);
						public setIsTimeFilteringEnabled(param0: boolean): void;
						public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
						public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
						public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
						public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.a>;
						public static a(param0: java.lang.Exception): java.lang.Throwable;
						public static a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export abstract class b<T>  extends com.esri.arcgisruntime.concurrent.ListenableFuture<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.b<any>>;
						public isDone(): boolean;
						public addDoneListener(param0: java.lang.Runnable): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTask);
						public isCancelled(): boolean;
						public cancel(param0: boolean): boolean;
						public removeDoneListener(param0: java.lang.Runnable): boolean;
						public get(param0: number, param1: java.util.concurrent.TimeUnit): any;
						public a(param0: java.lang.Runnable): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreElement): any;
						public get(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class c<V>  extends java.util.concurrent.FutureTask<any> implements com.esri.arcgisruntime.concurrent.ListenableFuture<any>  {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.c<any>>;
						public constructor(param0: java.util.concurrent.Callable<any>);
						public addDoneListener(param0: java.lang.Runnable): void;
						public removeDoneListener(param0: java.lang.Runnable): boolean;
						public done(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class d {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.d>;
						public static a(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class e {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.e>;
						public constructor();
						public b(param0: java.lang.Runnable): boolean;
						public a(): void;
						public a(param0: java.lang.Runnable): void;
						public b(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export abstract class f {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.f>;
						public a(): java.lang.Runnable;
						public constructor(param0: java.lang.Runnable);
						public b(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class g extends com.esri.arcgisruntime.internal.b.f {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.g>;
						public constructor(param0: java.lang.Runnable);
						public b(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class h<K, V>  extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.h<any,any>>;
						public a(param0: K): V;
						public constructor();
						public a(param0: K, param1: V): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class i {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.i>;
						public static a(): java.util.concurrent.ExecutorService;
					}
					export module i {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.i.a>;
							public newThread(param0: java.lang.Runnable): java.lang.Thread;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module b {
					export class j<C, W>  extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.j<any,any>>;
						public constructor(param0: com.esri.arcgisruntime.internal.b.j.a<C,W>);
						public a(param0: W, param1: C): void;
						public a(param0: C): W;
					}
					export module j {
						export class a<C, W>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.b.j.a<any,any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.b.j$a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								wrap(param0: C): W;
							});
							public constructor();
							public wrap(param0: C): W;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module c {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.c.a>;
						public static a(param0: java.util.Collection<any>, param1: com.esri.arcgisruntime.geometry.Segment): boolean;
						public static a(param0: com.esri.arcgisruntime.geometry.SpatialReference, param1: com.esri.arcgisruntime.geometry.SpatialReference): boolean;
						public static a(param0: com.esri.arcgisruntime.geometry.Segment, param1: com.esri.arcgisruntime.geometry.Segment): boolean;
						public static a(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a>;
						public constructor();
						public constructor(param0: string, param1: native.Array<any>);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.a>;
							public constructor(param0: com.esri.arcgisruntime.internal.d.a.c, param1: com.esri.arcgisruntime.internal.d.a.k);
							public b(): com.esri.arcgisruntime.internal.d.a.k;
							public a(): com.esri.arcgisruntime.internal.d.a.c;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.b>;
							public static a: com.esri.arcgisruntime.internal.d.a.b;
							public static b: com.esri.arcgisruntime.internal.d.a.b;
							public static c: com.esri.arcgisruntime.internal.d.a.b;
							public static d: com.esri.arcgisruntime.internal.d.a.b;
							public static e: com.esri.arcgisruntime.internal.d.a.b;
							public static values(): native.Array<com.esri.arcgisruntime.internal.d.a.b>;
							public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.a.b;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.c>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.a.c interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.e): void;
								a(): string;
								b(): string;
								c(): boolean;
								d(): boolean;
								a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
							});
							public constructor();
							/** @deprecated */
							public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
							public c(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public d(): boolean;
							public b(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.d>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.a.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.a.c;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.a.c;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.e>;
							public constructor(param0: com.esri.arcgisruntime.internal.d.n);
							public a(): com.esri.arcgisruntime.internal.d.n;
							public hashCode(): number;
							public constructor(param0: string, param1: number, param2: string, param3: string);
							public c(): number;
							public d(): string;
							public toString(): string;
							public constructor(param0: string, param1: number);
							public a(param0: com.esri.arcgisruntime.internal.d.a.e): number;
							public equals(param0: any): boolean;
							public constructor(param0: com.esri.arcgisruntime.internal.d.n, param1: string, param2: string);
							public b(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.f>;
							public constructor();
							public a(): void;
							public d(): com.esri.arcgisruntime.internal.d.a.k;
							public f(): boolean;
							public a(param0: java.util.Queue<com.esri.arcgisruntime.internal.d.a.a>): void;
							public toString(): string;
							public a(param0: com.esri.arcgisruntime.internal.d.a.c, param1: com.esri.arcgisruntime.internal.d.a.k): void;
							public a(param0: com.esri.arcgisruntime.internal.d.a.b): void;
							public e(): java.util.Queue<com.esri.arcgisruntime.internal.d.a.a>;
							public c(): com.esri.arcgisruntime.internal.d.a.c;
							public b(): com.esri.arcgisruntime.internal.d.a.b;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class g extends com.esri.arcgisruntime.internal.d.ab {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.g>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.h>;
							public hashCode(): number;
							public constructor(param0: string);
							public getName(): string;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class i {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.i>;
							public static a: com.esri.arcgisruntime.internal.d.a.i;
							public static b: com.esri.arcgisruntime.internal.d.a.i;
							public static values(): native.Array<com.esri.arcgisruntime.internal.d.a.i>;
							public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.a.i;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class j extends com.esri.arcgisruntime.internal.d.a.c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.j>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.a.j interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e;
								a(param0: com.esri.arcgisruntime.internal.d.e): void;
								a(): string;
								b(): string;
								c(): boolean;
								d(): boolean;
								a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
							});
							public constructor();
							/** @deprecated */
							public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
							public c(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public d(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e;
							public b(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.k>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.a.k interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): java.security.Principal;
								b(): string;
							});
							public constructor();
							public a(): java.security.Principal;
							public b(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class l extends com.esri.arcgisruntime.internal.d.a.g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.l>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class m extends com.esri.arcgisruntime.internal.d.ab {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.m>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class n extends com.esri.arcgisruntime.internal.d.a.k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.n>;
							public constructor(param0: string, param1: string, param2: string, param3: string);
							public a(): java.security.Principal;
							public hashCode(): number;
							public d(): string;
							public e(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public c(): string;
							public b(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class o {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.o>;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public getName(): string;
							public toString(): string;
							public equals(param0: any): boolean;
							public b(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module a {
						export class p extends com.esri.arcgisruntime.internal.d.a.k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.a.p>;
							public a(): java.security.Principal;
							/** @deprecated */
							public constructor(param0: string);
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public toString(): string;
							public equals(param0: any): boolean;
							public b(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class aa {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.aa>;
						public constructor();
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class ab extends com.esri.arcgisruntime.internal.d.m {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.ab>;
						public constructor();
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class ac {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.ac>;
						public d: string;
						public e: number;
						public f: number;
						public c(param0: com.esri.arcgisruntime.internal.d.ac): boolean;
						public c(): number;
						public a(param0: number, param1: number): com.esri.arcgisruntime.internal.d.ac;
						public a(param0: com.esri.arcgisruntime.internal.d.ac): boolean;
						public a(): string;
						public b(param0: com.esri.arcgisruntime.internal.d.ac): number;
						public constructor(param0: string, param1: number, param2: number);
						public clone(): any;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public b(): number;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class ad {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.ad>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.ad interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: number, param1: java.util.Locale): string;
						});
						public constructor();
						public a(param0: number, param1: java.util.Locale): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class ae {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.ae>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.ae interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): string;
							b(): com.esri.arcgisruntime.internal.d.ac;
							c(): string;
						});
						public constructor();
						public a(): string;
						public b(): com.esri.arcgisruntime.internal.d.ac;
						public c(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class af {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.af>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.af interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): com.esri.arcgisruntime.internal.d.ac;
							b(): number;
							c(): string;
						});
						public constructor();
						public a(): com.esri.arcgisruntime.internal.d.ac;
						public c(): string;
						public b(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class ag extends java.util.Iterator<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.ag>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.ag interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							hasNext(): boolean;
							a(): string;
						});
						public constructor();
						public a(): string;
						public hasNext(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class ah extends com.esri.arcgisruntime.internal.d.w {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.ah>;
						public constructor();
						public constructor(param0: string, param1: native.Array<any>);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): boolean;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c): void;
								a(param0: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.a.c;
								b(param0: com.esri.arcgisruntime.internal.d.n): void;
							});
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.n): void;
							public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c): void;
							public a(param0: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.a.c;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.a>;
								public static a: com.esri.arcgisruntime.internal.d.b.a.a;
								public static b: com.esri.arcgisruntime.internal.d.b.a.a;
								public static c: com.esri.arcgisruntime.internal.d.b.a.a;
								public static d: com.esri.arcgisruntime.internal.d.b.a.a;
								public static values(): native.Array<com.esri.arcgisruntime.internal.d.b.a.a>;
								public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.b.a.a;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.b>;
								public constructor(param0: java.util.Date, param1: java.util.Date, param2: com.esri.arcgisruntime.internal.d.af, param3: native.Array<com.esri.arcgisruntime.internal.d.e>, param4: com.esri.arcgisruntime.internal.d.b.a.h, param5: string);
								public toString(): string;
								public h(): com.esri.arcgisruntime.internal.d.b.a.h;
								public k(): string;
								public a(): com.esri.arcgisruntime.internal.d.af;
								public constructor(param0: java.util.Date, param1: java.util.Date, param2: com.esri.arcgisruntime.internal.d.af, param3: native.Array<com.esri.arcgisruntime.internal.d.e>, param4: com.esri.arcgisruntime.internal.d.b.a.h, param5: java.util.Map<string,string>, param6: string);
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public i(): boolean;
								public g(): java.util.Date;
								public j(): java.util.Map<string,string>;
								public b(): string;
								public c(): number;
								public f(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): com.esri.arcgisruntime.internal.d.e;
								public d(): java.util.Date;
								public e(): java.util.Date;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.c>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.a.c interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
									a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.s): void;
								});
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.s): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.d>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.a.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.b): void;
									a(param0: string): com.esri.arcgisruntime.internal.d.b.a.b;
									b(param0: string): void;
									a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.e): void;
								});
								public constructor();
								public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.b): void;
								public a(param0: string): com.esri.arcgisruntime.internal.d.b.a.b;
								public b(param0: string): void;
								public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.e): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.e>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.a.e interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: com.esri.arcgisruntime.internal.d.b.a.b): com.esri.arcgisruntime.internal.d.b.a.b;
								});
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.b.a.b): com.esri.arcgisruntime.internal.d.b.a.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.f>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.g>;
								public constructor(param0: number);
								public a(): number;
								public c(): boolean;
								public b(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.h>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.a.h interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(): java.io.InputStream;
									b(): number;
									c(): void;
								});
								public constructor();
								public c(): void;
								public b(): number;
								public a(): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module a {
							export class i {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.a.i>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.a.i interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: string, param1: java.io.InputStream, param2: com.esri.arcgisruntime.internal.d.b.a.g): com.esri.arcgisruntime.internal.d.b.a.h;
									a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.h): com.esri.arcgisruntime.internal.d.b.a.h;
								});
								public constructor();
								public a(param0: string, param1: java.io.InputStream, param2: com.esri.arcgisruntime.internal.d.b.a.g): com.esri.arcgisruntime.internal.d.b.a.h;
								public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.h): com.esri.arcgisruntime.internal.d.b.a.h;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.b>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
								b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): java.util.Map<string,com.esri.arcgisruntime.internal.d.e>;
								a(param0: java.util.Map<string,com.esri.arcgisruntime.internal.d.e>, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.s, param3: com.esri.arcgisruntime.internal.d.n.d): java.util.Queue<com.esri.arcgisruntime.internal.d.a.a>;
								a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
							public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
							public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): java.util.Map<string,com.esri.arcgisruntime.internal.d.e>;
							public a(param0: java.util.Map<string,com.esri.arcgisruntime.internal.d.e>, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.s, param3: com.esri.arcgisruntime.internal.d.n.d): java.util.Queue<com.esri.arcgisruntime.internal.d.a.a>;
							public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module b {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.b.a>;
								public toString(): string;
								public static a(param0: com.esri.arcgisruntime.internal.d.b.b.a): com.esri.arcgisruntime.internal.d.b.b.a.a;
								public b(): com.esri.arcgisruntime.internal.d.n;
								/** @deprecated */
								public p(): boolean;
								public c(): java.net.InetAddress;
								public static t(): com.esri.arcgisruntime.internal.d.b.b.a.a;
								public constructor();
								public k(): java.util.Collection<string>;
								public r(): boolean;
								public s(): com.esri.arcgisruntime.internal.d.b.b.a;
								public h(): boolean;
								public i(): number;
								public j(): boolean;
								public l(): java.util.Collection<string>;
								public m(): number;
								public a(): boolean;
								public o(): number;
								public q(): boolean;
								public f(): boolean;
								public e(): string;
								/** @deprecated */
								public d(): boolean;
								public g(): boolean;
								public n(): number;
							}
							export module a {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.b.a.a>;
									/** @deprecated */
									public b(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public f(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public d(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public b(param0: java.util.Collection<string>): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public a(param0: string): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public e(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public a(param0: java.util.Collection<string>): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public b(param0: number): com.esri.arcgisruntime.internal.d.b.b.a.a;
									/** @deprecated */
									public g(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public d(param0: number): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public a(param0: number): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public h(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public a(param0: java.net.InetAddress): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public c(param0: number): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public c(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public a(): com.esri.arcgisruntime.internal.d.b.b.a;
									public a(param0: boolean): com.esri.arcgisruntime.internal.d.b.b.a.a;
									public a(param0: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.b.b.a.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.c interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.e.a.b): void;
								b(param0: com.esri.arcgisruntime.internal.d.e.a.b): void;
							});
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.e.a.b): void;
							public a(param0: com.esri.arcgisruntime.internal.d.e.a.b): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module c {
							export class a extends com.esri.arcgisruntime.internal.d.g.g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.a>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.k, param1: com.esri.arcgisruntime.internal.d.b.c.e);
								public constructor(param0: com.esri.arcgisruntime.internal.d.k);
								public c(): number;
								public g(): boolean;
								public a(param0: java.io.OutputStream): void;
								public f(): java.io.InputStream;
								public b(): boolean;
								public e(): com.esri.arcgisruntime.internal.d.e;
								public a(): boolean;
								public d(): com.esri.arcgisruntime.internal.d.e;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module c {
							export class b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.b>;
								public read(param0: native.Array<number>): number;
								public constructor(param0: java.io.InputStream);
								public skip(param0: number): number;
								public reset(): void;
								public mark(param0: number): void;
								public available(): number;
								public close(): void;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public markSupported(): boolean;
								public read(): number;
							}
							export module b {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.b.a>;
									public close(): void;
									public constructor(param0: java.io.InputStream, param1: java.util.zip.Inflater);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module c {
							export class c extends com.esri.arcgisruntime.internal.d.b.c.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.c>;
								public constructor();
								public static a(): com.esri.arcgisruntime.internal.d.b.c.c;
								public a(param0: java.io.InputStream): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module c {
							export class d extends com.esri.arcgisruntime.internal.d.b.c.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.d>;
								public static a(): com.esri.arcgisruntime.internal.d.b.c.d;
								public constructor();
								public a(param0: java.io.InputStream): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module c {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.e>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.c.e interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: java.io.InputStream): java.io.InputStream;
								});
								public constructor();
								public a(param0: java.io.InputStream): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module c {
							export class f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.f>;
								public read(param0: native.Array<number>): number;
								public constructor(param0: java.io.InputStream, param1: com.esri.arcgisruntime.internal.d.b.c.e);
								public skip(param0: number): number;
								public available(): number;
								public close(): void;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public markSupported(): boolean;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module c {
							export class g extends com.esri.arcgisruntime.internal.d.g.h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.c.g>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: string, param1: com.esri.arcgisruntime.internal.d.g.f);
								public constructor();
								public b(): boolean;
								public constructor(param0: java.lang.Iterable<any>, param1: java.nio.charset.Charset);
								public a(): boolean;
								public constructor(param0: string, param1: java.nio.charset.Charset);
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): number;
								public g(): boolean;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public a(param0: java.io.OutputStream): void;
								public f(): java.io.InputStream;
								public e(): com.esri.arcgisruntime.internal.d.e;
								public d(): com.esri.arcgisruntime.internal.d.e;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class d extends com.esri.arcgisruntime.internal.d.b.l {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export abstract class a extends com.esri.arcgisruntime.internal.d.k.a implements com.esri.arcgisruntime.internal.d.b.d.e, com.esri.arcgisruntime.internal.d.q {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.a>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public constructor();
								public h(): boolean;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): boolean;
								public clone(): any;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								/** @deprecated */
								public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public a(param0: string, param1: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class b extends com.esri.arcgisruntime.internal.d.s {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.b>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.d.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(): com.esri.arcgisruntime.internal.d.af;
									b(): com.esri.arcgisruntime.internal.d.k;
									a(param0: com.esri.arcgisruntime.internal.d.k): void;
									c(): com.esri.arcgisruntime.internal.d.ac;
									a(param0: string): boolean;
									b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
									c(param0: string): com.esri.arcgisruntime.internal.d.e;
									d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
									a(param0: com.esri.arcgisruntime.internal.d.e): void;
									a(param0: string, param1: string): void;
									b(param0: com.esri.arcgisruntime.internal.d.e): void;
									b(param0: string, param1: string): void;
									a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
									c(param0: com.esri.arcgisruntime.internal.d.e): void;
									d(param0: string): void;
									e(): com.esri.arcgisruntime.internal.d.h;
									e(param0: string): com.esri.arcgisruntime.internal.d.h;
									f(): com.esri.arcgisruntime.internal.d.l.c;
								});
								public constructor();
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								public a(param0: com.esri.arcgisruntime.internal.d.k): void;
								public b(): com.esri.arcgisruntime.internal.d.k;
								public a(): com.esri.arcgisruntime.internal.d.af;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public a(param0: string): boolean;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public a(param0: string, param1: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.c>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.d.c interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									b_(): com.esri.arcgisruntime.internal.d.b.b.a;
								});
								public constructor();
								public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export abstract class d extends com.esri.arcgisruntime.internal.d.b.d.i implements com.esri.arcgisruntime.internal.d.l {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.d>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public a(param0: string): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
								public clone(): any;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								public a(param0: com.esri.arcgisruntime.internal.d.k): void;
								public b(): com.esri.arcgisruntime.internal.d.k;
								public constructor();
								public a(param0: java.net.URI): void;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public a(): boolean;
								/** @deprecated */
								public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
								public a(param0: string, param1: string): void;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
								public i(): java.net.URI;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.e>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.d.e interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									h(): boolean;
									a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
								});
								public constructor();
								public h(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class f extends com.esri.arcgisruntime.internal.d.b.d.i {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.f>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
								public a_(): string;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								public constructor();
								public a(param0: java.net.URI): void;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								/** @deprecated */
								public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
								public a(param0: string, param1: string): void;
								public constructor(param0: java.net.URI);
								public e(): com.esri.arcgisruntime.internal.d.h;
								public constructor(param0: string);
								public b(param0: string, param1: string): void;
								public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
								public i(): java.net.URI;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class g extends com.esri.arcgisruntime.internal.d.b.d.i {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.g>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
								public a_(): string;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								public constructor();
								public a(param0: java.net.URI): void;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								/** @deprecated */
								public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
								public a(param0: string, param1: string): void;
								public constructor(param0: java.net.URI);
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
								public i(): java.net.URI;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class h extends com.esri.arcgisruntime.internal.d.b.d.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.h>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
								public a_(): string;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								public a(param0: com.esri.arcgisruntime.internal.d.k): void;
								public b(): com.esri.arcgisruntime.internal.d.k;
								public constructor();
								public a(param0: java.net.URI): void;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public a(): boolean;
								/** @deprecated */
								public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
								public a(param0: string, param1: string): void;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public constructor(param0: string);
								public b(param0: string, param1: string): void;
								public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
								public i(): java.net.URI;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export abstract class i extends com.esri.arcgisruntime.internal.d.b.d.a implements com.esri.arcgisruntime.internal.d.b.d.c, com.esri.arcgisruntime.internal.d.b.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.i>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public toString(): string;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
								public d(param0: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
								public a_(): string;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								public constructor();
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public a(param0: java.net.URI): void;
								/** @deprecated */
								public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
								public a(param0: string, param1: string): void;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
								public i(): java.net.URI;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class j extends com.esri.arcgisruntime.internal.d.k.a implements com.esri.arcgisruntime.internal.d.b.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.j>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public toString(): string;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): boolean;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
								public d(param0: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public static a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.b.d.j;
								public j(): com.esri.arcgisruntime.internal.d.q;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								public static a(param0: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.b.d.j;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public a(param0: java.net.URI): void;
								public a(param0: string, param1: string): void;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public k(): com.esri.arcgisruntime.internal.d.n;
								public i(): java.net.URI;
							}
							export module j {
								export class a extends com.esri.arcgisruntime.internal.d.b.d.j implements com.esri.arcgisruntime.internal.d.l {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.j.a>;
									public static a(param0: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.b.d.j;
									public a(param0: string): boolean;
									public e(): com.esri.arcgisruntime.internal.d.h;
									public c(): com.esri.arcgisruntime.internal.d.ac;
									public a(param0: com.esri.arcgisruntime.internal.d.k): void;
									public b(): com.esri.arcgisruntime.internal.d.k;
									public static a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.b.d.j;
									public d(param0: string): void;
									public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
									public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public h(): boolean;
									public i(): java.net.URI;
									public c(param0: string): com.esri.arcgisruntime.internal.d.e;
									public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
									public b(param0: com.esri.arcgisruntime.internal.d.e): void;
									public g(): com.esri.arcgisruntime.internal.d.ae;
									public a(param0: string, param1: string): void;
									public e(param0: string): com.esri.arcgisruntime.internal.d.h;
									/** @deprecated */
									public f(): com.esri.arcgisruntime.internal.d.l.c;
									public a(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: java.net.URI): void;
									public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public a(): boolean;
									public c(param0: com.esri.arcgisruntime.internal.d.e): void;
									public b(param0: string, param1: string): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class k extends com.esri.arcgisruntime.internal.d.q {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.k>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.d.k interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									i(): java.net.URI;
									h(): boolean;
									g(): com.esri.arcgisruntime.internal.d.ae;
									c(): com.esri.arcgisruntime.internal.d.ac;
									a(param0: string): boolean;
									b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
									c(param0: string): com.esri.arcgisruntime.internal.d.e;
									d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
									a(param0: com.esri.arcgisruntime.internal.d.e): void;
									a(param0: string, param1: string): void;
									b(param0: com.esri.arcgisruntime.internal.d.e): void;
									b(param0: string, param1: string): void;
									a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
									c(param0: com.esri.arcgisruntime.internal.d.e): void;
									d(param0: string): void;
									e(): com.esri.arcgisruntime.internal.d.h;
									e(param0: string): com.esri.arcgisruntime.internal.d.h;
									f(): com.esri.arcgisruntime.internal.d.l.c;
								});
								public constructor();
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public a(param0: string): boolean;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public a(param0: string, param1: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public i(): java.net.URI;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module d {
							export class l {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.l>;
								public a(param0: java.net.URI): com.esri.arcgisruntime.internal.d.b.d.l;
								public toString(): string;
								public a(): com.esri.arcgisruntime.internal.d.b.d.k;
								public static a(param0: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.b.d.l;
							}
							export module l {
								export class a extends com.esri.arcgisruntime.internal.d.b.d.d {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.l.a>;
									public a(param0: string): boolean;
									public e(): com.esri.arcgisruntime.internal.d.h;
									public c(): com.esri.arcgisruntime.internal.d.ac;
									public a(param0: com.esri.arcgisruntime.internal.d.k): void;
									public b(): com.esri.arcgisruntime.internal.d.k;
									public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
									public d(param0: string): void;
									public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
									public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
									public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public h(): boolean;
									public i(): java.net.URI;
									public c(param0: string): com.esri.arcgisruntime.internal.d.e;
									public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
									public g(): com.esri.arcgisruntime.internal.d.ae;
									public b(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: string, param1: string): void;
									public e(param0: string): com.esri.arcgisruntime.internal.d.h;
									public a_(): string;
									/** @deprecated */
									public f(): com.esri.arcgisruntime.internal.d.l.c;
									public a(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: java.net.URI): void;
									public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
									public a(): boolean;
									public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public c(param0: com.esri.arcgisruntime.internal.d.e): void;
									public b(param0: string, param1: string): void;
								}
								export class b extends com.esri.arcgisruntime.internal.d.b.d.i {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.d.l.b>;
									public i(): java.net.URI;
									public a(param0: string): boolean;
									public c(param0: string): com.esri.arcgisruntime.internal.d.e;
									public a(param0: com.esri.arcgisruntime.internal.d.ac): void;
									public e(): com.esri.arcgisruntime.internal.d.h;
									public g(): com.esri.arcgisruntime.internal.d.ae;
									public b(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: string, param1: string): void;
									public c(): com.esri.arcgisruntime.internal.d.ac;
									public e(param0: string): com.esri.arcgisruntime.internal.d.h;
									public a_(): string;
									/** @deprecated */
									public f(): com.esri.arcgisruntime.internal.d.l.c;
									public a(param0: com.esri.arcgisruntime.internal.d.c.a): void;
									public d(param0: string): void;
									public a(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
									public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
									public a(param0: java.net.URI): void;
									public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
									public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public c(param0: com.esri.arcgisruntime.internal.d.e): void;
									public h(): boolean;
									public b(param0: string, param1: string): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.e>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: java.lang.Throwable);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module e {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.e.a>;
								public static a(param0: com.esri.arcgisruntime.internal.d.l.c, param1: com.esri.arcgisruntime.internal.d.b.b.a): com.esri.arcgisruntime.internal.d.b.b.a;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.f interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: java.lang.Throwable): boolean;
								a(param0: com.esri.arcgisruntime.internal.d.s): boolean;
							});
							public constructor();
							public a(param0: java.lang.Throwable): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.s): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class a extends com.esri.arcgisruntime.internal.d.n.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.a>;
								public static b(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.n.e;
								public e(): com.esri.arcgisruntime.internal.d.f.j;
								public g(): com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.f.k>;
								public n(): com.esri.arcgisruntime.internal.d.b.b.a;
								public c(): java.util.List<java.net.URI>;
								public a(param0: string, param1: java.lang.Class): any;
								public f(): com.esri.arcgisruntime.internal.d.f.f;
								public k(): com.esri.arcgisruntime.internal.d.a.f;
								public l(): com.esri.arcgisruntime.internal.d.a.f;
								public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): void;
								public a(param0: string, param1: any): void;
								public static a(): com.esri.arcgisruntime.internal.d.b.f.a;
								public j(): com.esri.arcgisruntime.internal.d.b.a;
								public static a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.b.f.a;
								public a(param0: com.esri.arcgisruntime.internal.d.b.a): void;
								public h(): com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.a.d>;
								public a(param0: string): any;
								public constructor();
								public m(): any;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n.d);
								public b(): com.esri.arcgisruntime.internal.d.e.a.e;
								public a(param0: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.a.d>): void;
								public d(): com.esri.arcgisruntime.internal.d.b.g;
								public a(param0: com.esri.arcgisruntime.internal.d.b.g): void;
								public i(): com.esri.arcgisruntime.internal.d.b.h;
								public a(param0: com.esri.arcgisruntime.internal.d.b.h): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class b extends com.esri.arcgisruntime.internal.d.r {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.b>;
								public constructor(param0: java.util.List<string>);
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class c extends com.esri.arcgisruntime.internal.d.r {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.c>;
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class d extends com.esri.arcgisruntime.internal.d.r {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.d>;
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class e extends com.esri.arcgisruntime.internal.d.r {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class f extends com.esri.arcgisruntime.internal.d.r {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.f>;
								public constructor(param0: java.util.Collection<any>);
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class g extends com.esri.arcgisruntime.internal.d.r {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.g>;
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class h extends com.esri.arcgisruntime.internal.d.u {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.h>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.b.c.e>, param1: boolean);
								public constructor(param0: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.b.c.e>);
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module f {
							export class i extends com.esri.arcgisruntime.internal.d.u {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.f.i>;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.g interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.f.c): void;
								a(): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								a(param0: java.util.Date): boolean;
								b(): void;
							});
							public constructor();
							public a(): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							public a(param0: java.util.Date): boolean;
							public b(): void;
							public a(param0: com.esri.arcgisruntime.internal.d.f.c): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module g {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g.a>;
								public static a(param0: any): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module g {
							export class b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g.b>;
								public static a(param0: string, param1: native.Array<string>, param2: java.util.Date): java.util.Date;
								public static a(param0: string, param1: native.Array<string>): java.util.Date;
								public static a(param0: java.util.Date, param1: string): string;
								public static a(param0: java.util.Date): string;
								public static a(param0: string): java.util.Date;
							}
							export module b {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g.b.a>;
									public static a(param0: string): java.text.SimpleDateFormat;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module g {
							export class c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g.c>;
								public b(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>): com.esri.arcgisruntime.internal.d.b.g.c;
								public f(): number;
								public toString(): string;
								public a(): java.net.URI;
								public b(param0: string): com.esri.arcgisruntime.internal.d.b.g.c;
								public constructor();
								public a(param0: native.Array<string>): com.esri.arcgisruntime.internal.d.b.g.c;
								public b(): boolean;
								public c(): string;
								public c(param0: string): com.esri.arcgisruntime.internal.d.b.g.c;
								public h(): java.util.List<string>;
								public e(): string;
								public g(): boolean;
								public i(): string;
								public d(): string;
								public constructor(param0: java.net.URI);
								public a(param0: string): com.esri.arcgisruntime.internal.d.b.g.c;
								public d(param0: string): com.esri.arcgisruntime.internal.d.b.g.c;
								public constructor(param0: string);
								public a(param0: java.nio.charset.Charset): com.esri.arcgisruntime.internal.d.b.g.c;
								public a(param0: java.util.List<string>): com.esri.arcgisruntime.internal.d.b.g.c;
								public e(param0: string): com.esri.arcgisruntime.internal.d.b.g.c;
								public a(param0: number): com.esri.arcgisruntime.internal.d.b.g.c;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module g {
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g.d>;
								public static d: java.util.EnumSet<com.esri.arcgisruntime.internal.d.b.g.d.a>;
								public static b(param0: java.net.URI): java.net.URI;
								public static c(param0: java.net.URI): com.esri.arcgisruntime.internal.d.n;
								public static a(param0: java.net.URI): java.net.URI;
								public static a(param0: java.net.URI, param1: com.esri.arcgisruntime.internal.d.n, param2: java.util.EnumSet<com.esri.arcgisruntime.internal.d.b.g.d.a>): java.net.URI;
								public static a(param0: java.net.URI, param1: java.net.URI): java.net.URI;
								public static a(param0: java.net.URI, param1: com.esri.arcgisruntime.internal.d.e.a.e, param2: boolean): java.net.URI;
								public static a(param0: java.net.URI, param1: string): java.net.URI;
							}
							export module d {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g.d.a>;
									public static a: com.esri.arcgisruntime.internal.d.b.g.d.a;
									public static b: com.esri.arcgisruntime.internal.d.b.g.d.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.b.g.d.a>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.b.g.d.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export module g {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.g.e>;
								public static b(param0: string): java.util.List<string>;
								public static a(param0: java.util.List<any>, param1: string): string;
								public static a(param0: com.esri.arcgisruntime.internal.d.k): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public static a(param0: java.util.List<any>, param1: string, param2: string): string;
								public static a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: java.nio.charset.Charset, param2: native.Array<string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public static a(param0: string, param1: java.nio.charset.Charset): java.util.List<string>;
								public static a(param0: string, param1: java.nio.charset.Charset): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public static a(param0: java.lang.Iterable<string>, param1: java.nio.charset.Charset): string;
								public static b(param0: java.lang.Iterable<any>, param1: java.nio.charset.Charset): string;
								public static a(param0: java.lang.Iterable<any>, param1: string, param2: java.nio.charset.Charset): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.h>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.h interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.a.e, param1: com.esri.arcgisruntime.internal.d.a.k): void;
								a(param0: com.esri.arcgisruntime.internal.d.a.e): com.esri.arcgisruntime.internal.d.a.k;
								a(): void;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.a.e): com.esri.arcgisruntime.internal.d.a.k;
							public a(): void;
							public a(param0: com.esri.arcgisruntime.internal.d.a.e, param1: com.esri.arcgisruntime.internal.d.a.k): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class i {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.i>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.i interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.b.d.k, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.b.d.k, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class j {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.j>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.j interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: java.io.IOException, param1: number, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
							});
							public constructor();
							public a(param0: java.io.IOException, param1: number, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class k extends com.esri.arcgisruntime.internal.d.ab {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.k>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class l extends com.esri.arcgisruntime.internal.d.ab {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.l>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class m {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.m>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.m interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
								b(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.b.d.k;
							});
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.b.d.k;
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class n {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.n>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.n interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.s, param1: number, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
								a(): number;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.s, param1: number, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
							public a(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module b {
						export class o {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.b.o>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.b.o interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.n.d): any;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.n.d): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class c {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.c>;
						public static a: java.nio.charset.Charset;
						public static b: java.nio.charset.Charset;
						public static c: java.nio.charset.Charset;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module c {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.c.a>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.c.a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): boolean;
							});
							public constructor();
							public a(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module c {
						export class b<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.c.b<any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.c.b<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: T): void;
								a(param0: java.lang.Exception): void;
								a(): void;
							});
							public constructor();
							public a(param0: java.lang.Exception): void;
							public a(): void;
							public a(param0: T): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class d extends com.esri.arcgisruntime.internal.d.e {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): com.esri.arcgisruntime.internal.d.p.d;
							b(): number;
							c(): native.Array<com.esri.arcgisruntime.internal.d.f>;
							d(): string;
							e(): string;
						});
						public constructor();
						public a(): com.esri.arcgisruntime.internal.d.p.d;
						public d(): string;
						public e(): string;
						public b(): number;
						public c(): native.Array<com.esri.arcgisruntime.internal.d.f>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module d {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.a>;
							public d(): java.nio.charset.CodingErrorAction;
							public f(): com.esri.arcgisruntime.internal.d.d.c;
							public e(): java.nio.charset.CodingErrorAction;
							public a(): number;
							public g(): com.esri.arcgisruntime.internal.d.d.a;
							public c(): java.nio.charset.Charset;
							public b(): number;
							public toString(): string;
						}
						export module a {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.a.a>;
								public a(): com.esri.arcgisruntime.internal.d.d.a;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module d {
						export class b<I>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.b<any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.d.b<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: string): I;
							});
							public constructor();
							public a(param0: string): I;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module d {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.c>;
							public a(): number;
							public b(): number;
							public toString(): string;
							public c(): com.esri.arcgisruntime.internal.d.d.c;
						}
						export module c {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.c.a>;
								public a(): com.esri.arcgisruntime.internal.d.d.c;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module d {
						export class d<I>  extends com.esri.arcgisruntime.internal.d.d.b<any> {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.d<any>>;
							public a(param0: string): any;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module d {
						export class e<I>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.e<any>>;
							public a(param0: string, param1: I): com.esri.arcgisruntime.internal.d.d.e<I>;
							public static a(): com.esri.arcgisruntime.internal.d.d.e<any>;
							public b(): com.esri.arcgisruntime.internal.d.d.d<I>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module d {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.f>;
							public a(): number;
							public h(): com.esri.arcgisruntime.internal.d.d.f;
							public f(): number;
							public g(): number;
							public c(): number;
							public toString(): string;
							public b(): boolean;
							public d(): boolean;
							public e(): boolean;
						}
						export module f {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.d.f.a>;
								public a(): com.esri.arcgisruntime.internal.d.d.f;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class e extends com.esri.arcgisruntime.internal.d.y {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							c(): native.Array<com.esri.arcgisruntime.internal.d.f>;
							d(): string;
							e(): string;
						});
						public constructor();
						public d(): string;
						public e(): string;
						public c(): native.Array<com.esri.arcgisruntime.internal.d.f>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a>;
							public constructor();
							public constructor(param0: java.io.IOException, param1: com.esri.arcgisruntime.internal.d.n, param2: native.Array<java.net.InetAddress>);
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module a {
							export class a extends com.esri.arcgisruntime.internal.d.e.a.c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.a>;
								public c(param0: com.esri.arcgisruntime.internal.d.e.a.e, param1: com.esri.arcgisruntime.internal.d.e.a.e): number;
								public b(param0: com.esri.arcgisruntime.internal.d.e.a.e, param1: com.esri.arcgisruntime.internal.d.e.a.e): number;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.e, param1: com.esri.arcgisruntime.internal.d.e.a.e): number;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.e): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module a {
							export class b extends com.esri.arcgisruntime.internal.d.e.a.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.b>;
								public toString(): string;
								public a(): com.esri.arcgisruntime.internal.d.n;
								public d(): number;
								public c(): java.net.InetSocketAddress;
								public a(param0: number): com.esri.arcgisruntime.internal.d.n;
								public e(): com.esri.arcgisruntime.internal.d.n;
								public equals(param0: any): boolean;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n, param1: java.net.InetAddress, param2: native.Array<com.esri.arcgisruntime.internal.d.n>, param3: boolean, param4: com.esri.arcgisruntime.internal.d.e.a.e.b, param5: com.esri.arcgisruntime.internal.d.e.a.e.a);
								public h(): boolean;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n, param1: java.net.InetAddress, param2: com.esri.arcgisruntime.internal.d.n, param3: boolean);
								public clone(): any;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n, param1: java.net.InetAddress, param2: boolean);
								public f(): boolean;
								public b(): java.net.InetAddress;
								public g(): boolean;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module a {
							export class c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.c>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.a.c interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: com.esri.arcgisruntime.internal.d.e.a.e, param1: com.esri.arcgisruntime.internal.d.e.a.e): number;
								});
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.e, param1: com.esri.arcgisruntime.internal.d.e.a.e): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module a {
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.d>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.a.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e.a.b;
								});
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e.a.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module a {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.e>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.a.e interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(): com.esri.arcgisruntime.internal.d.n;
									b(): java.net.InetAddress;
									d(): number;
									a(param0: number): com.esri.arcgisruntime.internal.d.n;
									e(): com.esri.arcgisruntime.internal.d.n;
									f(): boolean;
									g(): boolean;
									h(): boolean;
								});
								public constructor();
								public a(): com.esri.arcgisruntime.internal.d.n;
								public f(): boolean;
								public d(): number;
								public b(): java.net.InetAddress;
								public a(param0: number): com.esri.arcgisruntime.internal.d.n;
								public e(): com.esri.arcgisruntime.internal.d.n;
								public g(): boolean;
								public h(): boolean;
							}
							export module e {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.e.a>;
									public static a: com.esri.arcgisruntime.internal.d.e.a.e.a;
									public static b: com.esri.arcgisruntime.internal.d.e.a.e.a;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.e.a.e.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.e.a.e.a>;
								}
								export class b {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.e.b>;
									public static a: com.esri.arcgisruntime.internal.d.e.a.e.b;
									public static b: com.esri.arcgisruntime.internal.d.e.a.e.b;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.e.a.e.b>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.e.a.e.b;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module a {
							export class f extends com.esri.arcgisruntime.internal.d.e.a.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.a.f>;
								public toString(): string;
								public a(): com.esri.arcgisruntime.internal.d.n;
								public d(): number;
								public a(param0: boolean): void;
								public a(param0: number): com.esri.arcgisruntime.internal.d.n;
								public c(param0: boolean): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.a.b);
								public e(): com.esri.arcgisruntime.internal.d.n;
								public equals(param0: any): boolean;
								public c(): com.esri.arcgisruntime.internal.d.e.a.b;
								public h(): boolean;
								public clone(): any;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n, param1: java.net.InetAddress);
								public f(): boolean;
								public b(): java.net.InetAddress;
								public b(param0: boolean): void;
								public g(): boolean;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: boolean): void;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: boolean): void;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.b>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): number;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module b {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.b.a>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.b.a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
									a(param0: number, param1: java.net.Socket, param2: com.esri.arcgisruntime.internal.d.n, param3: java.net.InetSocketAddress, param4: java.net.InetSocketAddress, param5: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								});
								public constructor();
								public a(param0: number, param1: java.net.Socket, param2: com.esri.arcgisruntime.internal.d.n, param3: java.net.InetSocketAddress, param4: java.net.InetSocketAddress, param5: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module b {
							export class b extends com.esri.arcgisruntime.internal.d.e.b.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.b.b>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.b.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: java.net.Socket, param1: string, param2: number, param3: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
									a(param0: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
									a(param0: number, param1: java.net.Socket, param2: com.esri.arcgisruntime.internal.d.n, param3: java.net.InetSocketAddress, param4: java.net.InetSocketAddress, param5: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								});
								public constructor();
								public a(param0: java.net.Socket, param1: string, param2: number, param3: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public a(param0: number, param1: java.net.Socket, param2: com.esri.arcgisruntime.internal.d.n, param3: java.net.InetSocketAddress, param4: java.net.InetSocketAddress, param5: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module b {
							export class c extends com.esri.arcgisruntime.internal.d.e.b.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.b.c>;
								public constructor();
								public a(param0: number, param1: java.net.Socket, param2: com.esri.arcgisruntime.internal.d.n, param3: java.net.InetSocketAddress, param4: java.net.InetSocketAddress, param5: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public static a(): com.esri.arcgisruntime.internal.d.e.b.c;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class c extends com.esri.arcgisruntime.internal.d.e.a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c>;
							public constructor();
							public constructor(param0: java.io.IOException, param1: com.esri.arcgisruntime.internal.d.n, param2: native.Array<java.net.InetAddress>);
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export abstract class a extends com.esri.arcgisruntime.internal.d.e.c.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.a>;
								public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>): void;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>, param3: boolean): void;
								public constructor();
								public static a(param0: string): number;
								public a(param0: string, param1: java.security.cert.X509Certificate): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class b extends com.esri.arcgisruntime.internal.d.e.c.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.b>;
								public static c: com.esri.arcgisruntime.internal.d.e.c.b;
								public toString(): string;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>): void;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>, param3: boolean): void;
								public constructor();
								public static a(param0: string): number;
								public a(param0: string, param1: java.security.cert.X509Certificate): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class c extends com.esri.arcgisruntime.internal.d.e.c.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.c>;
								public static c: com.esri.arcgisruntime.internal.d.e.c.c;
								public toString(): string;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>): void;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>, param3: boolean): void;
								public constructor();
								public static a(param0: string): number;
								public a(param0: string, param1: java.security.cert.X509Certificate): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.d>;
								public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.d.e);
								public constructor();
								public a(param0: string, param1: java.security.cert.X509Certificate): void;
							}
							export module d {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.d.a>;
									public static a: com.esri.arcgisruntime.internal.d.e.c.d.a;
									public static b: com.esri.arcgisruntime.internal.d.e.c.d.a;
									public static c: com.esri.arcgisruntime.internal.d.e.c.d.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.e.c.d.a>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.e.c.d.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.e>;
								public a(param0: string): string;
								public constructor(param0: javax.security.auth.x500.X500Principal);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class f extends com.esri.arcgisruntime.internal.d.e.b.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.f>;
								public static c: com.esri.arcgisruntime.internal.d.e.c.j;
								public d: com.esri.arcgisruntime.internal.d.h.e;
								/** @deprecated */
								public constructor(param0: javax.net.ssl.SSLContext, param1: com.esri.arcgisruntime.internal.d.e.c.j);
								public a(param0: java.net.Socket, param1: string, param2: number, param3: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public constructor(param0: javax.net.ssl.SSLSocketFactory, param1: native.Array<string>, param2: native.Array<string>, param3: javax.net.ssl.HostnameVerifier);
								public a(param0: javax.net.ssl.SSLSocket): void;
								public static b(): com.esri.arcgisruntime.internal.d.e.c.f;
								public a(param0: number, param1: java.net.Socket, param2: com.esri.arcgisruntime.internal.d.n, param3: java.net.InetSocketAddress, param4: java.net.InetSocketAddress, param5: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public static a(): javax.net.ssl.HostnameVerifier;
								/** @deprecated */
								public constructor(param0: javax.net.ssl.SSLSocketFactory, param1: native.Array<string>, param2: native.Array<string>, param3: com.esri.arcgisruntime.internal.d.e.c.j);
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): java.net.Socket;
								public constructor(param0: javax.net.ssl.SSLContext, param1: javax.net.ssl.HostnameVerifier);
								public constructor(param0: javax.net.ssl.SSLContext, param1: native.Array<string>, param2: native.Array<string>, param3: javax.net.ssl.HostnameVerifier);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.g>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class h extends com.esri.arcgisruntime.internal.d.e.c.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.h>;
								public static c: com.esri.arcgisruntime.internal.d.e.c.h;
								public toString(): string;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>): void;
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>, param3: boolean): void;
								public constructor();
								public static a(param0: string): number;
								public a(param0: string, param1: java.security.cert.X509Certificate): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class i {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.i>;
								public toString(): string;
								public b(): string;
								public a(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module c {
							export class j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.c.j>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.c.j interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: string, param1: native.Array<string>, param2: native.Array<string>): void;
								});
								public constructor();
								public a(param0: string, param1: native.Array<string>, param2: native.Array<string>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class d extends com.esri.arcgisruntime.internal.d.c.a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.d>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: number, param1: java.util.concurrent.TimeUnit): com.esri.arcgisruntime.internal.d.i;
								a(): boolean;
							});
							public constructor();
							public a(param0: number, param1: java.util.concurrent.TimeUnit): com.esri.arcgisruntime.internal.d.i;
							public a(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module d {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.d.a>;
								public static a: com.esri.arcgisruntime.internal.d.e.d.a;
								public static b: com.esri.arcgisruntime.internal.d.e.d.a;
								public static c: com.esri.arcgisruntime.internal.d.e.d.a;
								public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.e.d.a;
								public static values(): native.Array<com.esri.arcgisruntime.internal.d.e.d.a>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module d {
							export class b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.d.b>;
								public static c(param0: string): boolean;
								public static d(param0: string): boolean;
								public static b(param0: string): boolean;
								public static a(param0: string): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module d {
							export class c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.d.c>;
								public b(): java.util.List<string>;
								public c(): java.util.List<string>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.d.a, param1: java.util.List<string>, param2: java.util.List<string>);
								public a(): com.esri.arcgisruntime.internal.d.e.d.a;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module d {
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.d.d>;
								public a(param0: java.io.Reader): java.util.List<com.esri.arcgisruntime.internal.d.e.d.c>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module d {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.d.e>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.d.a, param1: java.util.Collection<string>, param2: java.util.Collection<string>);
								public constructor(param0: java.util.Collection<com.esri.arcgisruntime.internal.d.e.d.c>);
								public constructor(param0: java.util.Collection<string>, param1: java.util.Collection<string>);
								public b(param0: string, param1: com.esri.arcgisruntime.internal.d.e.d.a): boolean;
								public a(param0: string, param1: com.esri.arcgisruntime.internal.d.e.d.a): string;
								public a(param0: string): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export module d {
							export class f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.d.f>;
								public constructor();
								public static a(): com.esri.arcgisruntime.internal.d.e.d.e;
								public static a(param0: java.net.URL): com.esri.arcgisruntime.internal.d.e.d.e;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.e>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.e interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: string): native.Array<java.net.InetAddress>;
							});
							public constructor();
							public a(param0: string): native.Array<java.net.InetAddress>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.f>;
							public read(param0: native.Array<number>): number;
							public a(param0: number): void;
							public close(): void;
							public available(): number;
							public read(): number;
							public constructor(param0: java.io.InputStream, param1: com.esri.arcgisruntime.internal.d.e.g);
							public c(): void;
							public b(): void;
							public a(): boolean;
							public read(param0: native.Array<number>, param1: number, param2: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.g>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.g interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: java.io.InputStream): boolean;
								b(param0: java.io.InputStream): boolean;
								c(param0: java.io.InputStream): boolean;
							});
							public constructor();
							public c(param0: java.io.InputStream): boolean;
							public b(param0: java.io.InputStream): boolean;
							public a(param0: java.io.InputStream): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.h>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.h interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: any): com.esri.arcgisruntime.internal.d.e.d;
								a(param0: com.esri.arcgisruntime.internal.d.i, param1: any, param2: number, param3: java.util.concurrent.TimeUnit): void;
								a(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: number, param3: com.esri.arcgisruntime.internal.d.n.d): void;
								a(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								b(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								a(param0: number, param1: java.util.concurrent.TimeUnit): void;
								a(): void;
								b(): void;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.i, param1: any, param2: number, param3: java.util.concurrent.TimeUnit): void;
							public b(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: com.esri.arcgisruntime.internal.d.n.d): void;
							public a(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: number, param3: com.esri.arcgisruntime.internal.d.n.d): void;
							public a(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: com.esri.arcgisruntime.internal.d.n.d): void;
							public a(): void;
							public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: any): com.esri.arcgisruntime.internal.d.e.d;
							public b(): void;
							public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class i {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.i>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.i interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.e.l, param1: com.esri.arcgisruntime.internal.d.n, param2: java.net.InetSocketAddress, param3: number, param4: com.esri.arcgisruntime.internal.d.d.f, param5: com.esri.arcgisruntime.internal.d.n.d): void;
								a(param0: com.esri.arcgisruntime.internal.d.e.l, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.n.d): void;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.e.l, param1: com.esri.arcgisruntime.internal.d.n, param2: java.net.InetSocketAddress, param3: number, param4: com.esri.arcgisruntime.internal.d.d.f, param5: com.esri.arcgisruntime.internal.d.n.d): void;
							public a(param0: com.esri.arcgisruntime.internal.d.e.l, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.n.d): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class j<T, C>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.j<any,any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.j<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: T, param1: com.esri.arcgisruntime.internal.d.d.a): C;
							});
							public constructor();
							public a(param0: T, param1: com.esri.arcgisruntime.internal.d.d.a): C;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.k>;
							public constructor(param0: java.io.IOException, param1: com.esri.arcgisruntime.internal.d.n, param2: native.Array<java.net.InetAddress>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class l implements com.esri.arcgisruntime.internal.d.i, com.esri.arcgisruntime.internal.d.o {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.l>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.l interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: java.net.Socket): void;
								h(): java.net.Socket;
								i(): javax.net.ssl.SSLSession;
								a(param0: number): boolean;
								a(param0: com.esri.arcgisruntime.internal.d.q): void;
								a(param0: com.esri.arcgisruntime.internal.d.l): void;
								a(): com.esri.arcgisruntime.internal.d.s;
								a(param0: com.esri.arcgisruntime.internal.d.s): void;
								b(): void;
								f(): java.net.InetAddress;
								g(): number;
								close(): void;
								c(): boolean;
								d(): boolean;
								b(param0: number): void;
								e(): void;
								close(): void;
								c(): boolean;
								d(): boolean;
								b(param0: number): void;
								e(): void;
							});
							public constructor();
							public close(): void;
							public a(param0: com.esri.arcgisruntime.internal.d.l): void;
							public g(): number;
							public a(param0: java.net.Socket): void;
							public d(): boolean;
							public i(): javax.net.ssl.SSLSession;
							public a(): com.esri.arcgisruntime.internal.d.s;
							public f(): java.net.InetAddress;
							public a(param0: com.esri.arcgisruntime.internal.d.q): void;
							public c(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.s): void;
							public b(): void;
							public h(): java.net.Socket;
							public e(): void;
							public b(param0: number): void;
							public a(param0: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class m {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.m>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.e.m interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.n): number;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.n): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module e {
						export class n {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.e.n>;
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class f {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): string;
							b(): string;
							c(): native.Array<com.esri.arcgisruntime.internal.d.y>;
							a(param0: string): com.esri.arcgisruntime.internal.d.y;
						});
						public constructor();
						public a(): string;
						public b(): string;
						public c(): native.Array<com.esri.arcgisruntime.internal.d.y>;
						public a(param0: string): com.esri.arcgisruntime.internal.d.y;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class a extends com.esri.arcgisruntime.internal.d.f.c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.a>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: string): string;
								b(param0: string): boolean;
								a(): string;
								b(): string;
								c(): java.util.Date;
								d(): string;
								e(): string;
								f(): native.Array<number>;
								g(): boolean;
								h(): number;
								a(param0: java.util.Date): boolean;
							});
							public constructor();
							public c(): java.util.Date;
							public b(param0: string): boolean;
							public a(param0: string): string;
							public h(): number;
							public g(): boolean;
							public f(): native.Array<number>;
							public d(): string;
							public a(param0: java.util.Date): boolean;
							public e(): string;
							public b(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class b extends com.esri.arcgisruntime.internal.d.f.d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.b>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): string;
								a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
								a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
							});
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
							public a(): string;
							public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.c>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.c interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): string;
								b(): string;
								c(): java.util.Date;
								d(): string;
								e(): string;
								f(): native.Array<number>;
								g(): boolean;
								h(): number;
								a(param0: java.util.Date): boolean;
							});
							public constructor();
							public c(): java.util.Date;
							public h(): number;
							public g(): boolean;
							public f(): native.Array<number>;
							public d(): string;
							public a(param0: java.util.Date): boolean;
							public e(): string;
							public b(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.d>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
								a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
							});
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
							public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class e extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.e>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.c): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.f>;
							public constructor(param0: string, param1: number, param2: string, param3: boolean);
							public c(): number;
							public toString(): string;
							public d(): boolean;
							public b(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class g extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.g>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.c): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class h extends java.util.Comparator<com.esri.arcgisruntime.internal.d.f.c> {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.h>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.c): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class i extends com.esri.arcgisruntime.internal.d.f.l {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.i>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class j {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.j>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.j interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): number;
								a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								b(): com.esri.arcgisruntime.internal.d.e;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
							public a(): number;
							public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
							public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
							public b(): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.k>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.k interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.f.j;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.f.j;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class l extends com.esri.arcgisruntime.internal.d.ab {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.l>;
							public constructor();
							public constructor(param0: string);
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class m extends com.esri.arcgisruntime.internal.d.f.c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.m>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.m interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								c(param0: string): void;
								b(param0: java.util.Date): void;
								d(param0: string): void;
								e(param0: string): void;
								a(param0: boolean): void;
								a(param0: number): void;
								a(): string;
								b(): string;
								c(): java.util.Date;
								d(): string;
								e(): string;
								f(): native.Array<number>;
								g(): boolean;
								h(): number;
								a(param0: java.util.Date): boolean;
							});
							public constructor();
							public a(param0: number): void;
							public f(): native.Array<number>;
							public a(param0: java.util.Date): boolean;
							public e(): string;
							public a(param0: boolean): void;
							public a(): string;
							public e(param0: string): void;
							public c(): java.util.Date;
							public c(param0: string): void;
							public d(param0: string): void;
							public h(): number;
							public g(): boolean;
							public d(): string;
							public b(param0: java.util.Date): void;
							public b(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module f {
						export class n extends com.esri.arcgisruntime.internal.d.f.m {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.f.n>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.f.n interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a_(param0: string): void;
								a(param0: native.Array<number>): void;
								b(param0: boolean): void;
								c(param0: string): void;
								b(param0: java.util.Date): void;
								d(param0: string): void;
								e(param0: string): void;
								a(param0: boolean): void;
								a(param0: number): void;
								a(): string;
								b(): string;
								c(): java.util.Date;
								d(): string;
								e(): string;
								f(): native.Array<number>;
								g(): boolean;
								h(): number;
								a(param0: java.util.Date): boolean;
							});
							public constructor();
							public a(param0: number): void;
							public a(param0: native.Array<number>): void;
							public f(): native.Array<number>;
							public a(param0: java.util.Date): boolean;
							public e(): string;
							public a(param0: boolean): void;
							public a_(param0: string): void;
							public a(): string;
							public e(param0: string): void;
							public c(): java.util.Date;
							public c(param0: string): void;
							public d(param0: string): void;
							public h(): number;
							public g(): boolean;
							public d(): string;
							public b(param0: boolean): void;
							public b(param0: java.util.Date): void;
							public b(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class g extends java.util.Iterator<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.g interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							hasNext(): boolean;
							a(): com.esri.arcgisruntime.internal.d.f;
						});
						public constructor();
						public hasNext(): boolean;
						public a(): com.esri.arcgisruntime.internal.d.f;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export abstract class a extends com.esri.arcgisruntime.internal.d.k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.a>;
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public f(): java.io.InputStream;
							public a(param0: java.io.OutputStream): void;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string): void;
							public toString(): string;
							public a(param0: boolean): void;
							public g(): boolean;
							public c(): number;
							public b(): boolean;
							public e(): com.esri.arcgisruntime.internal.d.e;
							public d(): com.esri.arcgisruntime.internal.d.e;
							public a(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export class b extends com.esri.arcgisruntime.internal.d.g.a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.b>;
							public constructor();
							public a(param0: number): void;
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public f(): java.io.InputStream;
							public a(param0: java.io.OutputStream): void;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string): void;
							public a(param0: boolean): void;
							public g(): boolean;
							public c(): number;
							public b(): boolean;
							public e(): com.esri.arcgisruntime.internal.d.e;
							public a(param0: java.io.InputStream): void;
							public a(): boolean;
							public d(): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export class c extends com.esri.arcgisruntime.internal.d.g.g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.c>;
							public f(): java.io.InputStream;
							public a(param0: java.io.OutputStream): void;
							public g(): boolean;
							public c(): number;
							public b(): boolean;
							public e(): com.esri.arcgisruntime.internal.d.e;
							public constructor(param0: com.esri.arcgisruntime.internal.d.k);
							public a(): boolean;
							public d(): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export class d extends com.esri.arcgisruntime.internal.d.g.a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.d>;
							public e: native.Array<number>;
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public constructor(param0: native.Array<number>, param1: com.esri.arcgisruntime.internal.d.g.f);
							public f(): java.io.InputStream;
							public a(param0: java.io.OutputStream): void;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string): void;
							public a(param0: boolean): void;
							public clone(): any;
							public constructor(param0: native.Array<number>);
							public g(): boolean;
							public c(): number;
							public b(): boolean;
							public e(): com.esri.arcgisruntime.internal.d.e;
							public a(): boolean;
							public d(): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.e>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.g.e interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.p): number;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.p): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.f>;
							public static c: com.esri.arcgisruntime.internal.d.g.f;
							public static d: com.esri.arcgisruntime.internal.d.g.f;
							public static e: com.esri.arcgisruntime.internal.d.g.f;
							public static f: com.esri.arcgisruntime.internal.d.g.f;
							public static g: com.esri.arcgisruntime.internal.d.g.f;
							public static h: com.esri.arcgisruntime.internal.d.g.f;
							public static i: com.esri.arcgisruntime.internal.d.g.f;
							public static j: com.esri.arcgisruntime.internal.d.g.f;
							public static k: com.esri.arcgisruntime.internal.d.g.f;
							public static l: com.esri.arcgisruntime.internal.d.g.f;
							public static m: com.esri.arcgisruntime.internal.d.g.f;
							public static n: com.esri.arcgisruntime.internal.d.g.f;
							public static o: com.esri.arcgisruntime.internal.d.g.f;
							public static p: com.esri.arcgisruntime.internal.d.g.f;
							public static q: com.esri.arcgisruntime.internal.d.g.f;
							public static r: com.esri.arcgisruntime.internal.d.g.f;
							public static s: com.esri.arcgisruntime.internal.d.g.f;
							public static t: com.esri.arcgisruntime.internal.d.g.f;
							public static u: com.esri.arcgisruntime.internal.d.g.f;
							public static a(param0: com.esri.arcgisruntime.internal.d.k): com.esri.arcgisruntime.internal.d.g.f;
							public static a(param0: string): com.esri.arcgisruntime.internal.d.g.f;
							public static a(param0: string, param1: java.nio.charset.Charset): com.esri.arcgisruntime.internal.d.g.f;
							public static b(param0: string): com.esri.arcgisruntime.internal.d.g.f;
							public toString(): string;
							public b(): java.nio.charset.Charset;
							public static b(param0: com.esri.arcgisruntime.internal.d.k): com.esri.arcgisruntime.internal.d.g.f;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export class g extends com.esri.arcgisruntime.internal.d.k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.g>;
							public f(): java.io.InputStream;
							public a(param0: java.io.OutputStream): void;
							public g(): boolean;
							public c(): number;
							public b(): boolean;
							public e(): com.esri.arcgisruntime.internal.d.e;
							public constructor(param0: com.esri.arcgisruntime.internal.d.k);
							public a(): boolean;
							public d(): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module g {
						export class h extends com.esri.arcgisruntime.internal.d.g.a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.g.h>;
							public b: native.Array<number>;
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public constructor(param0: string, param1: com.esri.arcgisruntime.internal.d.g.f);
							public f(): java.io.InputStream;
							public a(param0: java.io.OutputStream): void;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string): void;
							public a(param0: boolean): void;
							public constructor(param0: string, param1: java.nio.charset.Charset);
							public clone(): any;
							public g(): boolean;
							public c(): number;
							public b(): boolean;
							public e(): com.esri.arcgisruntime.internal.d.e;
							public a(): boolean;
							public d(): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class h extends java.util.Iterator<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.h interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							hasNext(): boolean;
							a(): com.esri.arcgisruntime.internal.d.e;
						});
						public constructor();
						public hasNext(): boolean;
						public a(): com.esri.arcgisruntime.internal.d.e;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module h {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.a>;
							public static b(param0: native.Array<number>, param1: number, param2: number, param3: number): native.Array<number>;
							public static a(param0: native.Array<number>, param1: number, param2: number, param3: number): native.Array<number>;
							public static b(param0: native.Array<number>, param1: number): native.Array<number>;
							public static a(param0: native.Array<number>, param1: number): native.Array<number>;
						}
						export module a {
							export abstract class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.a.a>;
								public a: native.Array<number>;
								public b: number;
							}
							export class b extends com.esri.arcgisruntime.internal.d.h.a.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.a.b>;
								public a(param0: native.Array<number>, param1: number, param2: number, param3: boolean): boolean;
								public constructor(param0: number, param1: native.Array<number>);
							}
							export class c extends com.esri.arcgisruntime.internal.d.h.a.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.a.c>;
								public d: boolean;
								public e: boolean;
								public f: boolean;
								public a(param0: native.Array<number>, param1: number, param2: number, param3: boolean): boolean;
								public constructor(param0: number, param1: native.Array<number>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module h {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.b>;
							public constructor();
							public static c(param0: native.Array<number>, param1: number): native.Array<number>;
							public static b(param0: native.Array<number>, param1: number): native.Array<number>;
							public static a(param0: native.Array<number>, param1: number): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module h {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.c>;
							public constructor();
							public static c(param0: native.Array<number>, param1: number): native.Array<number>;
							public static b(param0: native.Array<number>, param1: number): native.Array<number>;
							public static a(param0: native.Array<number>, param1: number): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module h {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.d>;
							public a(param0: any): void;
							public e(param0: any): void;
							public c(param0: any, param1: java.lang.Throwable): void;
							public d(): boolean;
							public e(): boolean;
							public c(param0: any): void;
							public c(): boolean;
							public b(param0: any): void;
							public d(param0: any): void;
							public b(param0: any, param1: java.lang.Throwable): void;
							public a(param0: any, param1: java.lang.Throwable): void;
							public b(): boolean;
							public constructor(param0: any);
							public a(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module h {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.h.e>;
							public a(param0: any): void;
							public e(param0: any): void;
							public c(param0: any, param1: java.lang.Throwable): void;
							public d(): boolean;
							public e(): boolean;
							public c(param0: any): void;
							public c(): boolean;
							public b(param0: any): void;
							public d(param0: any): void;
							public b(param0: any, param1: java.lang.Throwable): void;
							public a(param0: any, param1: java.lang.Throwable): void;
							public b(): boolean;
							public constructor(param0: any);
							public a(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class i extends com.esri.arcgisruntime.internal.d.j {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.i interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: number): boolean;
							a(param0: com.esri.arcgisruntime.internal.d.q): void;
							a(param0: com.esri.arcgisruntime.internal.d.l): void;
							a(): com.esri.arcgisruntime.internal.d.s;
							a(param0: com.esri.arcgisruntime.internal.d.s): void;
							b(): void;
							close(): void;
							c(): boolean;
							d(): boolean;
							b(param0: number): void;
							e(): void;
						});
						public constructor();
						public a(param0: number): boolean;
						public e(): void;
						public close(): void;
						public d(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.d.s): void;
						public a(): com.esri.arcgisruntime.internal.d.s;
						public c(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.d.q): void;
						public b(): void;
						public a(param0: com.esri.arcgisruntime.internal.d.l): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export class a extends com.esri.arcgisruntime.internal.d.o {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a>;
							public l(): com.esri.arcgisruntime.internal.d.j.h;
							public a(param0: com.esri.arcgisruntime.internal.d.p): java.io.OutputStream;
							public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.h): java.io.OutputStream;
							public close(): void;
							public k(): com.esri.arcgisruntime.internal.d.j.g;
							public j(): void;
							public g(): number;
							public c(param0: java.net.Socket): java.io.OutputStream;
							public a(param0: java.net.Socket): void;
							public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.g): java.io.InputStream;
							public b(param0: com.esri.arcgisruntime.internal.d.p): com.esri.arcgisruntime.internal.d.k;
							public n(): void;
							public toString(): string;
							public d(): boolean;
							public o(): void;
							public constructor(param0: number, param1: number, param2: java.nio.charset.CharsetDecoder, param3: java.nio.charset.CharsetEncoder, param4: com.esri.arcgisruntime.internal.d.d.c, param5: com.esri.arcgisruntime.internal.d.g.e, param6: com.esri.arcgisruntime.internal.d.g.e);
							public f(): java.net.InetAddress;
							public c(): boolean;
							public b(param0: java.net.Socket): java.io.InputStream;
							public c(param0: number): boolean;
							public h(): java.net.Socket;
							public e(): void;
							public m(): void;
							public b(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export abstract class a extends com.esri.arcgisruntime.internal.d.a.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.a>;
								public a(): string;
								/** @deprecated */
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
								public toString(): string;
								public b(): string;
								public d(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number, param2: number): void;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e;
								public e(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class b extends com.esri.arcgisruntime.internal.d.i.a.m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.b>;
								public a(): string;
								/** @deprecated */
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
								public toString(): string;
								public d(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number, param2: number): void;
								public constructor();
								public constructor(param0: java.nio.charset.Charset);
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e;
								public a(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class c extends com.esri.arcgisruntime.internal.d.a.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.c>;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.a.c;
								public constructor();
								public constructor(param0: java.nio.charset.Charset);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class d extends com.esri.arcgisruntime.internal.d.i.a.m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.d>;
								public a(): string;
								/** @deprecated */
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
								public toString(): string;
								public d(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number, param2: number): void;
								public constructor();
								public constructor(param0: java.nio.charset.Charset);
								public static f(): string;
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e;
								public a(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class e extends com.esri.arcgisruntime.internal.d.a.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.a.c;
								public constructor();
								public constructor(param0: java.nio.charset.Charset);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.f>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.h.e);
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.b.b, param3: com.esri.arcgisruntime.internal.d.a.f, param4: com.esri.arcgisruntime.internal.d.n.d): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.a.f, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.b.b, param3: com.esri.arcgisruntime.internal.d.a.f, param4: com.esri.arcgisruntime.internal.d.n.d): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.g>;
								public write(param0: number): void;
								public a(): native.Array<number>;
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public close(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.h>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.i.a.h interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: string, param1: string): string;
									a(param0: string, param1: string, param2: string, param3: string, param4: string): string;
								});
								public constructor();
								public a(param0: string, param1: string, param2: string, param3: string, param4: string): string;
								public a(param0: string, param1: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class i extends com.esri.arcgisruntime.internal.d.a.g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.i>;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor();
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class j extends com.esri.arcgisruntime.internal.d.i.a.h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j>;
								public a(param0: string, param1: string, param2: string, param3: string, param4: string): string;
								public a(param0: string, param1: string): string;
							}
							export module j {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j.a>;
									public u: native.Array<number>;
									public v: native.Array<number>;
									public w: native.Array<number>;
									public x: native.Array<number>;
									public y: native.Array<number>;
									public z: native.Array<number>;
									public A: native.Array<number>;
									public B: native.Array<number>;
									public p(): native.Array<number>;
									public e(): native.Array<number>;
									public j(): native.Array<number>;
									public d(): native.Array<number>;
									public k(): native.Array<number>;
									public o(): native.Array<number>;
									public q(): native.Array<number>;
									public l(): native.Array<number>;
									public c(): native.Array<number>;
									public constructor(param0: java.util.Random, param1: number, param2: string, param3: string, param4: string, param5: native.Array<number>, param6: string, param7: native.Array<number>);
									public t(): native.Array<number>;
									public b(): native.Array<number>;
									public m(): native.Array<number>;
									public g(): native.Array<number>;
									public h(): native.Array<number>;
									public constructor(param0: java.util.Random, param1: number, param2: string, param3: string, param4: string, param5: native.Array<number>, param6: string, param7: native.Array<number>, param8: native.Array<number>, param9: native.Array<number>, param10: native.Array<number>, param11: native.Array<number>);
									public s(): native.Array<number>;
									public i(): native.Array<number>;
									public f(): native.Array<number>;
									public a(): native.Array<number>;
									public n(): native.Array<number>;
									public r(): native.Array<number>;
								}
								export class b {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j.b>;
									public a: native.Array<number>;
									public b: native.Array<number>;
									public c: java.security.MessageDigest;
								}
								export class c {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j.c>;
									public d: number;
									public e: number;
									public f: native.Array<number>;
									public b(param0: native.Array<number>): void;
									public b(): void;
									public a(param0: native.Array<number>): void;
									public c(param0: native.Array<number>): void;
								}
								export class d {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j.d>;
									public a(param0: native.Array<number>, param1: number): void;
									public a(param0: number, param1: number): void;
									public d(param0: number): void;
									public a(): number;
									public c(param0: number): void;
									public c(): native.Array<number>;
									public a(param0: number): void;
									public b(): string;
									public d(): void;
									public b(param0: number): native.Array<number>;
									public a(param0: native.Array<number>): void;
									public a(param0: number): number;
								}
								export class e extends com.esri.arcgisruntime.internal.d.i.a.j.d {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j.e>;
									public d(param0: number): void;
									public d(): void;
								}
								export class f extends com.esri.arcgisruntime.internal.d.i.a.j.d {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j.f>;
									public c: native.Array<number>;
									public d: string;
									public e: native.Array<number>;
									public f: number;
								}
								export class g extends com.esri.arcgisruntime.internal.d.i.a.j.d {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.j.g>;
									public c: native.Array<number>;
									public e: number;
									public f: native.Array<number>;
									public g: native.Array<number>;
									public h: native.Array<number>;
									public i: native.Array<number>;
									public j: native.Array<number>;
									public k: native.Array<number>;
									public l: native.Array<number>;
									public m: boolean;
									public d(param0: number): void;
									public d(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class k extends com.esri.arcgisruntime.internal.d.i.a.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.k>;
								public a(): string;
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.e;
								public b(): string;
								public d(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number, param2: number): void;
								public constructor();
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.a.h);
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e;
							}
							export module k {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.k.a>;
									public static a: com.esri.arcgisruntime.internal.d.i.a.k.a;
									public static b: com.esri.arcgisruntime.internal.d.i.a.k.a;
									public static c: com.esri.arcgisruntime.internal.d.i.a.k.a;
									public static d: com.esri.arcgisruntime.internal.d.i.a.k.a;
									public static e: com.esri.arcgisruntime.internal.d.i.a.k.a;
									public static f: com.esri.arcgisruntime.internal.d.i.a.k.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.i.a.k.a>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.i.a.k.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class l extends com.esri.arcgisruntime.internal.d.a.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.l>;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.a.c;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export abstract class m extends com.esri.arcgisruntime.internal.d.i.a.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.m>;
								public b(): string;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public g(): java.nio.charset.Charset;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number, param2: number): void;
								public constructor();
								public constructor(param0: java.nio.charset.Charset);
								public h(): java.util.Map<string,string>;
								public a(param0: com.esri.arcgisruntime.internal.d.a.k, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e;
								public a(param0: string): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module a {
							export class n {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.a.n>;
								public constructor();
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export class b extends com.esri.arcgisruntime.internal.d.i.a implements com.esri.arcgisruntime.internal.d.i {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b>;
							public a(param0: com.esri.arcgisruntime.internal.d.p): java.io.OutputStream;
							public close(): void;
							public c(param0: java.net.Socket): java.io.OutputStream;
							public constructor(param0: number, param1: number, param2: java.nio.charset.CharsetDecoder, param3: java.nio.charset.CharsetEncoder, param4: com.esri.arcgisruntime.internal.d.d.c, param5: com.esri.arcgisruntime.internal.d.g.e, param6: com.esri.arcgisruntime.internal.d.g.e);
							public a(): com.esri.arcgisruntime.internal.d.s;
							public f(): java.net.InetAddress;
							public constructor(param0: number, param1: number, param2: java.nio.charset.CharsetDecoder, param3: java.nio.charset.CharsetEncoder, param4: com.esri.arcgisruntime.internal.d.d.c, param5: com.esri.arcgisruntime.internal.d.g.e, param6: com.esri.arcgisruntime.internal.d.g.e, param7: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param8: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>);
							public b(): void;
							public e(): void;
							public b(param0: number): void;
							public a(param0: number): boolean;
							public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.h): java.io.OutputStream;
							public a(param0: com.esri.arcgisruntime.internal.d.l): void;
							public g(): number;
							public b(param0: com.esri.arcgisruntime.internal.d.p): com.esri.arcgisruntime.internal.d.k;
							public a(param0: java.net.Socket): void;
							public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.g): java.io.InputStream;
							public d(): boolean;
							public b(param0: com.esri.arcgisruntime.internal.d.q): void;
							public a(param0: com.esri.arcgisruntime.internal.d.q): void;
							public b(param0: com.esri.arcgisruntime.internal.d.s): void;
							public c(): boolean;
							public b(param0: java.net.Socket): java.io.InputStream;
							public a(param0: com.esri.arcgisruntime.internal.d.s): void;
							public c(param0: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export abstract class a extends com.esri.arcgisruntime.internal.d.b.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a>;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): java.util.Map<string,com.esri.arcgisruntime.internal.d.e>;
								public a(param0: java.util.Map<string,com.esri.arcgisruntime.internal.d.e>, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.s, param3: com.esri.arcgisruntime.internal.d.n.d): java.util.Queue<com.esri.arcgisruntime.internal.d.a.a>;
								public a(param0: com.esri.arcgisruntime.internal.d.a.c): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.a>;
									public a: com.esri.arcgisruntime.internal.d.h.e;
									public run(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class aa extends com.esri.arcgisruntime.internal.d.b.a.i {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.aa>;
									public constructor();
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.h): com.esri.arcgisruntime.internal.d.b.a.h;
									public a(param0: string, param1: java.io.InputStream, param2: com.esri.arcgisruntime.internal.d.b.a.g): com.esri.arcgisruntime.internal.d.b.a.h;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ab {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ab>;
									/**
									 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.i.b.a.ab interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
										c(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
										a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.s): void;
										b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.b.a.b;
										d(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): java.util.Map<string,com.esri.arcgisruntime.internal.d.i.b.a.ap>;
										a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.d.b, param3: java.util.Date, param4: java.util.Date): com.esri.arcgisruntime.internal.d.b.d.b;
										a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b, param3: com.esri.arcgisruntime.internal.d.s, param4: java.util.Date, param5: java.util.Date): com.esri.arcgisruntime.internal.d.b.a.b;
										a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b, param3: com.esri.arcgisruntime.internal.d.s, param4: java.util.Date, param5: java.util.Date, param6: string): com.esri.arcgisruntime.internal.d.b.a.b;
										a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.i.b.a.ap): void;
									});
									public constructor();
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.s): void;
									public c(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.d.b, param3: java.util.Date, param4: java.util.Date): com.esri.arcgisruntime.internal.d.b.d.b;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b, param3: com.esri.arcgisruntime.internal.d.s, param4: java.util.Date, param5: java.util.Date): com.esri.arcgisruntime.internal.d.b.a.b;
									public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.b.a.b;
									public d(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): java.util.Map<string,com.esri.arcgisruntime.internal.d.i.b.a.ap>;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b, param3: com.esri.arcgisruntime.internal.d.s, param4: java.util.Date, param5: java.util.Date, param6: string): com.esri.arcgisruntime.internal.d.b.a.b;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.i.b.a.ap): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ac {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ac>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ad extends com.esri.arcgisruntime.internal.d.i.b.a.an {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ad>;
									public a(param0: com.esri.arcgisruntime.internal.d.i.b.a.a): void;
									public close(): void;
									public constructor(param0: com.esri.arcgisruntime.internal.d.i.b.a.f);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ae extends com.esri.arcgisruntime.internal.d.b.a.d {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ae>;
									public b(param0: string): void;
									public close(): void;
									public constructor(param0: com.esri.arcgisruntime.internal.d.i.b.a.f);
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.e): void;
									public a(): void;
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.b): void;
									public a(param0: string): com.esri.arcgisruntime.internal.d.b.a.b;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class af extends com.esri.arcgisruntime.internal.d.k.a implements com.esri.arcgisruntime.internal.d.s {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.af>;
									public a(param0: string): boolean;
									public c(param0: string): com.esri.arcgisruntime.internal.d.e;
									public e(): com.esri.arcgisruntime.internal.d.h;
									public b(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: string, param1: string): void;
									public c(): com.esri.arcgisruntime.internal.d.ac;
									public e(param0: string): com.esri.arcgisruntime.internal.d.h;
									public a(param0: com.esri.arcgisruntime.internal.d.k): void;
									public b(): com.esri.arcgisruntime.internal.d.k;
									/** @deprecated */
									public f(): com.esri.arcgisruntime.internal.d.l.c;
									public d(param0: string): void;
									public a(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
									public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
									public c(param0: com.esri.arcgisruntime.internal.d.e): void;
									public f(): com.esri.arcgisruntime.internal.d.l.c;
									public a(): com.esri.arcgisruntime.internal.d.af;
									public b(param0: string, param1: string): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ag {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ag>;
									public static a(param0: com.esri.arcgisruntime.internal.d.s): com.esri.arcgisruntime.internal.d.b.d.b;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ah {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ah>;
									public constructor();
									public c(param0: com.esri.arcgisruntime.internal.d.q): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.q): java.util.List<com.esri.arcgisruntime.internal.d.i.b.a.ai>;
									public b(param0: com.esri.arcgisruntime.internal.d.q): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.b.d.j): void;
									public a(param0: com.esri.arcgisruntime.internal.d.i.b.a.ai): com.esri.arcgisruntime.internal.d.s;
									public constructor(param0: boolean);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ai {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ai>;
									public static a: com.esri.arcgisruntime.internal.d.i.b.a.ai;
									public static b: com.esri.arcgisruntime.internal.d.i.b.a.ai;
									public static c: com.esri.arcgisruntime.internal.d.i.b.a.ai;
									public static d: com.esri.arcgisruntime.internal.d.i.b.a.ai;
									public static e: com.esri.arcgisruntime.internal.d.i.b.a.ai;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.i.b.a.ai>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.i.b.a.ai;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class aj extends java.lang.ref.PhantomReference<com.esri.arcgisruntime.internal.d.b.a.b> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.aj>;
									public hashCode(): number;
									public equals(param0: any): boolean;
									public a(): com.esri.arcgisruntime.internal.d.b.a.h;
									public constructor(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: java.lang.ref.ReferenceQueue<com.esri.arcgisruntime.internal.d.b.a.b>);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ak {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ak>;
									public constructor(param0: number, param1: boolean, param2: boolean, param3: boolean);
									public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s): boolean;
									public b(param0: com.esri.arcgisruntime.internal.d.s): boolean;
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.s): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.p, param1: native.Array<string>): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.s): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class al {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.al>;
									public a(param0: com.esri.arcgisruntime.internal.d.b.d.j, param1: com.esri.arcgisruntime.internal.d.s): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class am {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.am>;
									public a(): void;
									public invoke(param0: any, param1: java.lang.reflect.Method, param2: native.Array<any>): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class an {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.an>;
									/**
									 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.i.b.a.an interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										a(param0: com.esri.arcgisruntime.internal.d.i.b.a.a): void;
									});
									public constructor();
									public a(param0: com.esri.arcgisruntime.internal.d.i.b.a.a): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ao {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ao>;
									public constructor(param0: com.esri.arcgisruntime.internal.d.b.a.i, param1: number, param2: com.esri.arcgisruntime.internal.d.q, param3: com.esri.arcgisruntime.internal.d.b.d.b);
									public a(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class ap {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.ap>;
									public a(): string;
									public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.d.b.a.b);
									public b(): com.esri.arcgisruntime.internal.d.b.a.b;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class aq {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.aq>;
									public h(): void;
									public b(): void;
									public e(): void;
									public a(param0: string): void;
									public a(): void;
									public toString(): string;
									public static a(param0: com.esri.arcgisruntime.internal.d.e): native.Array<com.esri.arcgisruntime.internal.d.i.b.a.aq>;
									public d(): void;
									public j(): java.util.Date;
									public c(): void;
									public i(): void;
									public g(): void;
									public f(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class b {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.b>;
									public a(param0: com.esri.arcgisruntime.internal.d.i.b.a.p, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: com.esri.arcgisruntime.internal.d.b.d.j, param3: com.esri.arcgisruntime.internal.d.b.f.a, param4: com.esri.arcgisruntime.internal.d.b.d.e, param5: com.esri.arcgisruntime.internal.d.b.a.b): void;
									public close(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class c extends com.esri.arcgisruntime.internal.d.i.b.a.ab {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.c>;
									public constructor();
									public constructor(param0: com.esri.arcgisruntime.internal.d.b.a.i, param1: com.esri.arcgisruntime.internal.d.b.a.d, param2: com.esri.arcgisruntime.internal.d.i.b.a.f, param3: com.esri.arcgisruntime.internal.d.i.b.a.j, param4: com.esri.arcgisruntime.internal.d.b.a.c);
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.d.b, param3: java.util.Date, param4: java.util.Date): com.esri.arcgisruntime.internal.d.b.d.b;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b, param3: com.esri.arcgisruntime.internal.d.s, param4: java.util.Date, param5: java.util.Date): com.esri.arcgisruntime.internal.d.b.a.b;
									public constructor(param0: com.esri.arcgisruntime.internal.d.i.b.a.f);
									public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): com.esri.arcgisruntime.internal.d.b.a.b;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b, param3: com.esri.arcgisruntime.internal.d.s, param4: java.util.Date, param5: java.util.Date, param6: string): com.esri.arcgisruntime.internal.d.b.a.b;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.i.b.a.ap): void;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.s): void;
									public c(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
									public constructor(param0: com.esri.arcgisruntime.internal.d.b.a.i, param1: com.esri.arcgisruntime.internal.d.b.a.d, param2: com.esri.arcgisruntime.internal.d.i.b.a.f, param3: com.esri.arcgisruntime.internal.d.i.b.a.j);
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
									public constructor(param0: com.esri.arcgisruntime.internal.d.b.a.i, param1: com.esri.arcgisruntime.internal.d.b.a.d, param2: com.esri.arcgisruntime.internal.d.i.b.a.f);
									public d(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): java.util.Map<string,com.esri.arcgisruntime.internal.d.i.b.a.ap>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class d extends com.esri.arcgisruntime.internal.d.b.a.d {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.d>;
									public b(param0: string): void;
									public constructor(param0: com.esri.arcgisruntime.internal.d.i.b.a.f);
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.e): void;
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.b): void;
									public a(param0: string): com.esri.arcgisruntime.internal.d.b.a.b;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class e {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.e>;
									public constructor();
									public a(param0: java.lang.StringBuilder): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class f {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.f>;
									public k(): number;
									public a(): number;
									public i(): boolean;
									public toString(): string;
									public h(): number;
									public l(): number;
									/** @deprecated */
									public constructor();
									public j(): number;
									public b(): boolean;
									public d(): boolean;
									public c(): number;
									public e(): boolean;
									public g(): number;
									public static o(): com.esri.arcgisruntime.internal.d.i.b.a.f.a;
									public f(): boolean;
									public n(): com.esri.arcgisruntime.internal.d.i.b.a.f;
									public m(): number;
								}
								export module f {
									export class a {
										public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.f.a>;
										public a(): com.esri.arcgisruntime.internal.d.i.b.a.f;
										public a(param0: boolean): com.esri.arcgisruntime.internal.d.i.b.a.f.a;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class g extends com.esri.arcgisruntime.internal.d.k {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.g>;
									public e(): com.esri.arcgisruntime.internal.d.e;
									public d(): com.esri.arcgisruntime.internal.d.e;
									public b(): boolean;
									public f(): java.io.InputStream;
									public a(): boolean;
									public c(): number;
									public clone(): any;
									public constructor(param0: com.esri.arcgisruntime.internal.d.b.a.b);
									public a(param0: java.io.OutputStream): void;
									public g(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class h {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.h>;
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.b, param2: java.util.Date, param3: java.util.Date, param4: com.esri.arcgisruntime.internal.d.s): com.esri.arcgisruntime.internal.d.b.a.b;
									public a(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: com.esri.arcgisruntime.internal.d.s): native.Array<com.esri.arcgisruntime.internal.d.e>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class i extends com.esri.arcgisruntime.internal.d.b.a.c {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.i>;
									public a(param0: java.net.URL, param1: java.net.URL): void;
									public a(param0: java.net.URL, param1: string): void;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.s): void;
									public a(param0: com.esri.arcgisruntime.internal.d.q): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): void;
									public constructor(param0: com.esri.arcgisruntime.internal.d.i.b.a.j, param1: com.esri.arcgisruntime.internal.d.b.a.d);
									public b(param0: java.net.URL, param1: string): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class j {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.j>;
									public a(param0: string): string;
									public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): string;
									public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.b.a.b): string;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b): string;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class k extends java.util.LinkedHashMap<string,com.esri.arcgisruntime.internal.d.b.a.b> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.k>;
									public removeEldestEntry(param0: java.util.Map.Entry<string,com.esri.arcgisruntime.internal.d.b.a.b>): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class l {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.l>;
									public f(param0: com.esri.arcgisruntime.internal.d.b.a.b): boolean;
									public j(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
									public a(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: string): boolean;
									public e(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: java.util.Date): number;
									public b(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: java.util.Date): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: number, param2: number): number;
									public e(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
									public d(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: java.util.Date): number;
									public h(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
									public d(param0: com.esri.arcgisruntime.internal.d.b.a.b): java.util.Date;
									public a(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
									public b(param0: com.esri.arcgisruntime.internal.d.b.a.b): boolean;
									public k(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
									public a(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: java.util.Date, param2: number, param3: number): boolean;
									public c(param0: com.esri.arcgisruntime.internal.d.b.a.b): boolean;
									public n(param0: com.esri.arcgisruntime.internal.d.b.a.b): java.util.Date;
									public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.b.a.b, param2: java.util.Date): boolean;
									public l(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
									public a(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: java.util.Date): number;
									public g(param0: com.esri.arcgisruntime.internal.d.b.a.b): boolean;
									public i(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
									public c(param0: com.esri.arcgisruntime.internal.d.b.a.b, param1: java.util.Date): boolean;
									public m(param0: com.esri.arcgisruntime.internal.d.b.a.b): number;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class m {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.m>;
									public a(param0: com.esri.arcgisruntime.internal.d.q): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class n {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.n>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class o {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.o>;
									public a(param0: com.esri.arcgisruntime.internal.d.q): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.b.a.b, param2: java.util.Date): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.b.a.b, param3: java.util.Date): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class p extends com.esri.arcgisruntime.internal.d.i.f.b {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.p>;
									public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
									public constructor(param0: com.esri.arcgisruntime.internal.d.i.f.b, param1: com.esri.arcgisruntime.internal.d.i.b.a.ab, param2: com.esri.arcgisruntime.internal.d.i.b.a.f, param3: com.esri.arcgisruntime.internal.d.i.b.a.b);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class q extends com.esri.arcgisruntime.internal.d.i.b.l {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.q>;
									public a(param0: com.esri.arcgisruntime.internal.d.b.h): com.esri.arcgisruntime.internal.d.i.b.l;
									public constructor();
									public a(param0: com.esri.arcgisruntime.internal.d.e.a.d): com.esri.arcgisruntime.internal.d.i.b.l;
									public a(param0: com.esri.arcgisruntime.internal.d.n.h, param1: com.esri.arcgisruntime.internal.d.e.h, param2: com.esri.arcgisruntime.internal.d.b, param3: com.esri.arcgisruntime.internal.d.e.b, param4: com.esri.arcgisruntime.internal.d.n.f, param5: com.esri.arcgisruntime.internal.d.b.b, param6: com.esri.arcgisruntime.internal.d.b.b, param7: com.esri.arcgisruntime.internal.d.b.o): com.esri.arcgisruntime.internal.d.i.f.b;
									public static c(): com.esri.arcgisruntime.internal.d.i.b.a.q;
									public a(param0: com.esri.arcgisruntime.internal.d.e.h): com.esri.arcgisruntime.internal.d.i.b.l;
									public a(param0: java.io.Closeable): void;
									public a(param0: com.esri.arcgisruntime.internal.d.i.f.b): com.esri.arcgisruntime.internal.d.i.f.b;
									public a(param0: string): com.esri.arcgisruntime.internal.d.i.b.l;
									public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): com.esri.arcgisruntime.internal.d.i.b.l;
									public a(param0: com.esri.arcgisruntime.internal.d.e.b.b): com.esri.arcgisruntime.internal.d.i.b.l;
									public a(param0: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.a.d>): com.esri.arcgisruntime.internal.d.i.b.l;
									public a(param0: com.esri.arcgisruntime.internal.d.i.b.a.f): com.esri.arcgisruntime.internal.d.i.b.a.q;
									public a(): com.esri.arcgisruntime.internal.d.i.b.l;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class r {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.r>;
									public static a(): com.esri.arcgisruntime.internal.d.i.b.a.q;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class s extends com.esri.arcgisruntime.internal.d.g.a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.s>;
									public e(): com.esri.arcgisruntime.internal.d.e;
									public d(): com.esri.arcgisruntime.internal.d.e;
									public b(): boolean;
									public a(param0: string): void;
									public f(): java.io.InputStream;
									public b(param0: com.esri.arcgisruntime.internal.d.e): void;
									public c(): number;
									public a(): boolean;
									public a(param0: boolean): void;
									public a(param0: com.esri.arcgisruntime.internal.d.e): void;
									public a(param0: java.io.OutputStream): void;
									public g(): boolean;
								}
								export module s {
									export class a {
										public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.s.a>;
										public constructor(param0: com.esri.arcgisruntime.internal.d.i.b.a.s, param1: java.io.InputStream);
										public close(): void;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class t {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.t>;
									public a(param0: com.esri.arcgisruntime.internal.d.b.d.j, param1: com.esri.arcgisruntime.internal.d.b.a.b): com.esri.arcgisruntime.internal.d.b.d.j;
									public a(param0: com.esri.arcgisruntime.internal.d.b.d.j, param1: java.util.Map<string,com.esri.arcgisruntime.internal.d.i.b.a.ap>): com.esri.arcgisruntime.internal.d.b.d.j;
									public b(param0: com.esri.arcgisruntime.internal.d.b.d.j, param1: com.esri.arcgisruntime.internal.d.b.a.b): com.esri.arcgisruntime.internal.d.b.d.j;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class u extends com.esri.arcgisruntime.internal.d.i.b.a.v {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.u>;
									public constructor();
									public b(param0: string): void;
									public c(param0: string): void;
									public a(param0: string): number;
									public constructor(param0: number);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class v {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.v>;
									/**
									 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.i.b.a.v interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										a(param0: string): number;
										b(param0: string): void;
										c(param0: string): void;
									});
									public constructor();
									public b(param0: string): void;
									public c(param0: string): void;
									public a(param0: string): number;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class w {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.w>;
									public constructor(param0: string, param1: number);
									public a(): number;
									public c(): number;
									public toString(): string;
									public b(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class x extends com.esri.arcgisruntime.internal.d.b.a.h {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.x>;
									public c(): void;
									public constructor(param0: java.io.File);
									public b(): number;
									public a(): java.io.InputStream;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class y extends com.esri.arcgisruntime.internal.d.b.a.i {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.y>;
									public a(param0: string, param1: com.esri.arcgisruntime.internal.d.b.a.h): com.esri.arcgisruntime.internal.d.b.a.h;
									public constructor(param0: java.io.File);
									public a(param0: string, param1: java.io.InputStream, param2: com.esri.arcgisruntime.internal.d.b.a.g): com.esri.arcgisruntime.internal.d.b.a.h;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export module a {
								export class z extends com.esri.arcgisruntime.internal.d.b.a.h {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.a.z>;
									public c(): void;
									public b(): number;
									public constructor(param0: native.Array<number>);
									public a(): java.io.InputStream;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class b extends com.esri.arcgisruntime.internal.d.b.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.b>;
								public toString(): string;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c): void;
								public a(param0: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.a.c;
								public constructor();
								public b(param0: com.esri.arcgisruntime.internal.d.n): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.m);
								public c(param0: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.n;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class c extends com.esri.arcgisruntime.internal.d.b.g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.c>;
								public toString(): string;
								public a(): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c): void;
								public a(param0: java.util.Date): boolean;
								public b(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class d extends com.esri.arcgisruntime.internal.d.b.h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.d>;
								public a(param0: com.esri.arcgisruntime.internal.d.a.e): com.esri.arcgisruntime.internal.d.a.k;
								public toString(): string;
								public a(): void;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.a.e, param1: com.esri.arcgisruntime.internal.d.a.k): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export abstract class e extends com.esri.arcgisruntime.internal.d.b.i {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.e>;
								public b(param0: com.esri.arcgisruntime.internal.d.b.d.k, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.b.d.b;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.b.d.k, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.b.d.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.f>;
								public static b(param0: com.esri.arcgisruntime.internal.d.e.d.e): com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.f.k>;
								public static a(param0: com.esri.arcgisruntime.internal.d.e.d.e): com.esri.arcgisruntime.internal.d.d.e<com.esri.arcgisruntime.internal.d.f.k>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class g extends com.esri.arcgisruntime.internal.d.i.c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.g>;
								public static b: com.esri.arcgisruntime.internal.d.i.b.g;
								public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): boolean;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class h extends com.esri.arcgisruntime.internal.d.e.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.h>;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class i extends com.esri.arcgisruntime.internal.d.b.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.i>;
								public a(param0: com.esri.arcgisruntime.internal.d.q): boolean;
								public constructor(param0: number, param1: boolean);
								public constructor(param0: number, param1: boolean, param2: java.util.Collection<java.lang.Class<any>>);
								public constructor();
								public a(param0: java.io.IOException, param1: number, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
								/** @deprecated */
								public b(param0: com.esri.arcgisruntime.internal.d.q): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class j extends com.esri.arcgisruntime.internal.d.b.m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.j>;
								public a(param0: string): java.net.URI;
								public b(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.b.d.k;
								public constructor();
								public c(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): java.net.URI;
								public b(param0: string): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class k extends com.esri.arcgisruntime.internal.d.b.o {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.k>;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class l {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.l>;
								public a(param0: com.esri.arcgisruntime.internal.d.b.b.a): com.esri.arcgisruntime.internal.d.i.b.l;
								public a(param0: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.a.d>): com.esri.arcgisruntime.internal.d.i.b.l;
								public a(): com.esri.arcgisruntime.internal.d.i.b.l;
								public a(param0: com.esri.arcgisruntime.internal.d.i.f.b): com.esri.arcgisruntime.internal.d.i.f.b;
								public b(param0: com.esri.arcgisruntime.internal.d.i.f.b): com.esri.arcgisruntime.internal.d.i.f.b;
								public a(param0: string): com.esri.arcgisruntime.internal.d.i.b.l;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.e.b.b): com.esri.arcgisruntime.internal.d.i.b.l;
								public a(param0: java.io.Closeable): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e.h): com.esri.arcgisruntime.internal.d.i.b.l;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.d): com.esri.arcgisruntime.internal.d.i.b.l;
								public a(param0: com.esri.arcgisruntime.internal.d.n.h, param1: com.esri.arcgisruntime.internal.d.e.h, param2: com.esri.arcgisruntime.internal.d.b, param3: com.esri.arcgisruntime.internal.d.e.b, param4: com.esri.arcgisruntime.internal.d.n.f, param5: com.esri.arcgisruntime.internal.d.b.b, param6: com.esri.arcgisruntime.internal.d.b.b, param7: com.esri.arcgisruntime.internal.d.b.o): com.esri.arcgisruntime.internal.d.i.f.b;
								public b(): com.esri.arcgisruntime.internal.d.i.b.e;
								public a(param0: com.esri.arcgisruntime.internal.d.b.h): com.esri.arcgisruntime.internal.d.i.b.l;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.m>;
								public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.h, param1: number, param2: java.util.concurrent.TimeUnit, param3: number, param4: java.util.concurrent.TimeUnit);
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.h, param1: java.util.concurrent.ThreadFactory, param2: number, param3: java.util.concurrent.TimeUnit, param4: number, param5: java.util.concurrent.TimeUnit);
								public b(): void;
							}
							export module m {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.m.a>;
									public newThread(param0: java.lang.Runnable): java.lang.Thread;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class n extends com.esri.arcgisruntime.internal.d.i.b.e implements com.esri.arcgisruntime.internal.d.b.d.c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.n>;
								public b: com.esri.arcgisruntime.internal.d.h.e;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.b.d.k, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
								public b_(): com.esri.arcgisruntime.internal.d.b.b.a;
								public close(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.f.b, param1: com.esri.arcgisruntime.internal.d.e.h, param2: com.esri.arcgisruntime.internal.d.e.a.d, param3: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.f.k>, param4: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.a.d>, param5: com.esri.arcgisruntime.internal.d.b.g, param6: com.esri.arcgisruntime.internal.d.b.h, param7: com.esri.arcgisruntime.internal.d.b.b.a, param8: java.util.List<java.io.Closeable>);
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.b.d.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class o extends com.esri.arcgisruntime.internal.d.b.o {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.o>;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class p extends com.esri.arcgisruntime.internal.d.i.b.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.p>;
								public static b: com.esri.arcgisruntime.internal.d.i.b.p;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
								public a(param0: java.util.Map<string,com.esri.arcgisruntime.internal.d.e>, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.s, param3: com.esri.arcgisruntime.internal.d.n.d): java.util.Queue<com.esri.arcgisruntime.internal.d.a.a>;
								public a(param0: com.esri.arcgisruntime.internal.d.a.c): boolean;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): java.util.Map<string,com.esri.arcgisruntime.internal.d.e>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class q extends java.util.AbstractList<any> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.q>;
								public b(param0: java.net.URI): void;
								public size(): number;
								public a(param0: number): java.net.URI;
								public add(param0: number, param1: any): void;
								public b(param0: number): java.net.URI;
								public set(param0: number, param1: any): any;
								public constructor();
								public a(param0: java.net.URI): boolean;
								public contains(param0: any): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class r extends com.esri.arcgisruntime.internal.d.k.a implements com.esri.arcgisruntime.internal.d.b.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.r>;
								public a(): string;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								public g(): com.esri.arcgisruntime.internal.d.ae;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public h(): boolean;
								public b(): com.esri.arcgisruntime.internal.d.q;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: string): boolean;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public a(param0: string, param1: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public i(): java.net.URI;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class s extends com.esri.arcgisruntime.internal.d.b.h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.s>;
								public a(param0: com.esri.arcgisruntime.internal.d.a.e): com.esri.arcgisruntime.internal.d.a.k;
								public a(): void;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.a.e, param1: com.esri.arcgisruntime.internal.d.a.k): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module b {
							export class t extends com.esri.arcgisruntime.internal.d.i.b.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.b.t>;
								public static b: com.esri.arcgisruntime.internal.d.i.b.t;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.a.c, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
								public a(param0: java.util.Map<string,com.esri.arcgisruntime.internal.d.e>, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.s, param3: com.esri.arcgisruntime.internal.d.n.d): java.util.Queue<com.esri.arcgisruntime.internal.d.a.a>;
								public a(param0: com.esri.arcgisruntime.internal.d.a.c): boolean;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.s, param2: com.esri.arcgisruntime.internal.d.n.d): java.util.Map<string,com.esri.arcgisruntime.internal.d.e>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export class c extends com.esri.arcgisruntime.internal.d.b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class a extends com.esri.arcgisruntime.internal.d.m.a<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l,com.esri.arcgisruntime.internal.d.i.c.b> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.a>;
								public a(param0: any): boolean;
								public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
								public a(param0: any, param1: any): any;
								public constructor(param0: com.esri.arcgisruntime.internal.d.m.b<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l>, param1: number, param2: number, param3: number, param4: java.util.concurrent.TimeUnit);
								public a(param0: any, param1: any, param2: com.esri.arcgisruntime.internal.d.c.b<any>): java.util.concurrent.Future<any>;
								public a(param0: number): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.e.l): com.esri.arcgisruntime.internal.d.i.c.b;
								public a(param0: com.esri.arcgisruntime.internal.d.i.c.b): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.m.d<any,any>): void;
								public a(param0: any, param1: boolean): void;
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.m.b<any,any>, param1: number, param2: number);
								public a(param0: com.esri.arcgisruntime.internal.d.m.d<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l>): void;
								public a(param0: any): com.esri.arcgisruntime.internal.d.m.e;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class b extends com.esri.arcgisruntime.internal.d.m.c<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.b>;
								public c(): void;
								public constructor(param0: string, param1: any, param2: any, param3: number, param4: java.util.concurrent.TimeUnit);
								public a(param0: number): boolean;
								public f(): void;
								public a(param0: any): void;
								public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.h.e, param1: string, param2: com.esri.arcgisruntime.internal.d.e.a.b, param3: com.esri.arcgisruntime.internal.d.e.l, param4: number, param5: java.util.concurrent.TimeUnit);
								public b(): boolean;
								public d(): void;
								public e(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class c implements com.esri.arcgisruntime.internal.d.e.l, com.esri.arcgisruntime.internal.d.n.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.c>;
								public static a(param0: com.esri.arcgisruntime.internal.d.i.c.b): com.esri.arcgisruntime.internal.d.i;
								public a(param0: number): boolean;
								public toString(): string;
								public a(param0: java.net.Socket): void;
								public a(param0: com.esri.arcgisruntime.internal.d.s): void;
								public a(): com.esri.arcgisruntime.internal.d.s;
								public a(param0: string): any;
								public h(): java.net.Socket;
								public a(param0: com.esri.arcgisruntime.internal.d.l): void;
								public b(param0: number): void;
								public a(param0: string, param1: any): void;
								public d(): boolean;
								public g(): number;
								public e(): void;
								public c(): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.q): void;
								public static a(param0: com.esri.arcgisruntime.internal.d.i): com.esri.arcgisruntime.internal.d.i.c.b;
								public f(): java.net.InetAddress;
								public close(): void;
								public static b(param0: com.esri.arcgisruntime.internal.d.i): com.esri.arcgisruntime.internal.d.i.c.b;
								public i(): javax.net.ssl.SSLSession;
								public b(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.d>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class e extends com.esri.arcgisruntime.internal.d.e.i {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.e>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.d.b<com.esri.arcgisruntime.internal.d.e.b.a>, param1: com.esri.arcgisruntime.internal.d.e.m, param2: com.esri.arcgisruntime.internal.d.e.e);
								public a(param0: com.esri.arcgisruntime.internal.d.e.l, param1: com.esri.arcgisruntime.internal.d.n, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e.l, param1: com.esri.arcgisruntime.internal.d.n, param2: java.net.InetSocketAddress, param3: number, param4: com.esri.arcgisruntime.internal.d.d.f, param5: com.esri.arcgisruntime.internal.d.n.d): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class f extends com.esri.arcgisruntime.internal.d.i.g.a<com.esri.arcgisruntime.internal.d.s> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.f>;
								public a(): any;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.k.u, param2: com.esri.arcgisruntime.internal.d.d.c);
								public static a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.d.k.u): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.k.u, param2: com.esri.arcgisruntime.internal.d.t, param3: com.esri.arcgisruntime.internal.d.d.c);
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number): boolean;
								public static a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.d.k.u, param4: java.util.List<com.esri.arcgisruntime.internal.d.p.d>): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.j.g): com.esri.arcgisruntime.internal.d.s;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class g extends com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.g>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.k.u, param1: com.esri.arcgisruntime.internal.d.t);
								public a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.d.c): com.esri.arcgisruntime.internal.d.j.b<any>;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.d.c): com.esri.arcgisruntime.internal.d.j.b<com.esri.arcgisruntime.internal.d.s>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class h extends com.esri.arcgisruntime.internal.d.i.b implements com.esri.arcgisruntime.internal.d.e.l, com.esri.arcgisruntime.internal.d.n.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.h>;
								public c(param0: number): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.s): void;
								public p(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.s): void;
								public a(): com.esri.arcgisruntime.internal.d.s;
								public a(param0: string, param1: any): void;
								public b(param0: com.esri.arcgisruntime.internal.d.q): void;
								public g(): number;
								public e(): void;
								public a(param0: com.esri.arcgisruntime.internal.d.q): void;
								public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.g): java.io.InputStream;
								public f(): java.net.InetAddress;
								public constructor(param0: number, param1: number, param2: java.nio.charset.CharsetDecoder, param3: java.nio.charset.CharsetEncoder, param4: com.esri.arcgisruntime.internal.d.d.c, param5: com.esri.arcgisruntime.internal.d.g.e, param6: com.esri.arcgisruntime.internal.d.g.e, param7: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param8: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>);
								public constructor(param0: string, param1: number, param2: number, param3: java.nio.charset.CharsetDecoder, param4: java.nio.charset.CharsetEncoder, param5: com.esri.arcgisruntime.internal.d.d.c, param6: com.esri.arcgisruntime.internal.d.g.e, param7: com.esri.arcgisruntime.internal.d.g.e, param8: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param9: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>);
								public b(): void;
								public a(param0: number): boolean;
								public a(param0: java.net.Socket): void;
								public a(param0: string): any;
								public a(param0: com.esri.arcgisruntime.internal.d.l): void;
								public h(): java.net.Socket;
								public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.h): java.io.OutputStream;
								public b(param0: java.net.Socket): java.io.InputStream;
								public c(param0: java.net.Socket): java.io.OutputStream;
								public b(param0: number): void;
								public d(): boolean;
								public c(): boolean;
								public constructor(param0: number, param1: number, param2: java.nio.charset.CharsetDecoder, param3: java.nio.charset.CharsetEncoder, param4: com.esri.arcgisruntime.internal.d.d.c, param5: com.esri.arcgisruntime.internal.d.g.e, param6: com.esri.arcgisruntime.internal.d.g.e);
								public b(param0: com.esri.arcgisruntime.internal.d.p): com.esri.arcgisruntime.internal.d.k;
								public close(): void;
								public i(): javax.net.ssl.SSLSession;
								public a(param0: com.esri.arcgisruntime.internal.d.p): java.io.OutputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class i extends com.esri.arcgisruntime.internal.d.i.c.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.i>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.e.m);
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.n;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n);
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.m);
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e.a.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class j extends com.esri.arcgisruntime.internal.d.e.a.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.j>;
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.n;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.m);
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e.a.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class k extends com.esri.arcgisruntime.internal.d.e.m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.k>;
								public a(param0: com.esri.arcgisruntime.internal.d.n): number;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class l {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.l>;
								public read(param0: native.Array<number>): number;
								public constructor(param0: java.io.InputStream, param1: com.esri.arcgisruntime.internal.d.i.c.s);
								public skip(param0: number): number;
								public reset(): void;
								public mark(param0: number): void;
								public available(): number;
								public close(): void;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public markSupported(): boolean;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class m extends com.esri.arcgisruntime.internal.d.i.c.h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.m>;
								public a: com.esri.arcgisruntime.internal.d.h.e;
								public c(param0: number): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.s): void;
								public constructor(param0: string, param1: com.esri.arcgisruntime.internal.d.h.e, param2: com.esri.arcgisruntime.internal.d.h.e, param3: com.esri.arcgisruntime.internal.d.h.e, param4: number, param5: number, param6: java.nio.charset.CharsetDecoder, param7: java.nio.charset.CharsetEncoder, param8: com.esri.arcgisruntime.internal.d.d.c, param9: com.esri.arcgisruntime.internal.d.g.e, param10: com.esri.arcgisruntime.internal.d.g.e, param11: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param12: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>);
								public b(param0: com.esri.arcgisruntime.internal.d.s): void;
								public a(): com.esri.arcgisruntime.internal.d.s;
								public a(param0: string, param1: any): void;
								public b(param0: com.esri.arcgisruntime.internal.d.q): void;
								public g(): number;
								public e(): void;
								public a(param0: com.esri.arcgisruntime.internal.d.q): void;
								public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.g): java.io.InputStream;
								public f(): java.net.InetAddress;
								public constructor(param0: number, param1: number, param2: java.nio.charset.CharsetDecoder, param3: java.nio.charset.CharsetEncoder, param4: com.esri.arcgisruntime.internal.d.d.c, param5: com.esri.arcgisruntime.internal.d.g.e, param6: com.esri.arcgisruntime.internal.d.g.e, param7: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param8: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>);
								public constructor(param0: string, param1: number, param2: number, param3: java.nio.charset.CharsetDecoder, param4: java.nio.charset.CharsetEncoder, param5: com.esri.arcgisruntime.internal.d.d.c, param6: com.esri.arcgisruntime.internal.d.g.e, param7: com.esri.arcgisruntime.internal.d.g.e, param8: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param9: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>);
								public b(): void;
								public a(param0: number): boolean;
								public a(param0: java.net.Socket): void;
								public a(param0: string): any;
								public a(param0: com.esri.arcgisruntime.internal.d.l): void;
								public h(): java.net.Socket;
								public b(param0: java.net.Socket): java.io.InputStream;
								public c(param0: java.net.Socket): java.io.OutputStream;
								public a(param0: number, param1: com.esri.arcgisruntime.internal.d.j.h): java.io.OutputStream;
								public b(param0: number): void;
								public c(): boolean;
								public constructor(param0: number, param1: number, param2: java.nio.charset.CharsetDecoder, param3: java.nio.charset.CharsetEncoder, param4: com.esri.arcgisruntime.internal.d.d.c, param5: com.esri.arcgisruntime.internal.d.g.e, param6: com.esri.arcgisruntime.internal.d.g.e);
								public close(): void;
								public b(param0: com.esri.arcgisruntime.internal.d.p): com.esri.arcgisruntime.internal.d.k;
								public i(): javax.net.ssl.SSLSession;
								public a(param0: com.esri.arcgisruntime.internal.d.p): java.io.OutputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class n {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.n>;
								public flush(): void;
								public write(param0: number): void;
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public write(param0: native.Array<number>): void;
								public close(): void;
								public constructor(param0: java.io.OutputStream, param1: com.esri.arcgisruntime.internal.d.i.c.s);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class o extends com.esri.arcgisruntime.internal.d.e.j<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.o>;
								public b: com.esri.arcgisruntime.internal.d.h.e;
								public c: com.esri.arcgisruntime.internal.d.h.e;
								public d: com.esri.arcgisruntime.internal.d.h.e;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param1: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>, param2: com.esri.arcgisruntime.internal.d.g.e, param3: com.esri.arcgisruntime.internal.d.g.e);
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q>, param1: com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s>);
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.d.a): com.esri.arcgisruntime.internal.d.e.l;
								public a(param0: any, param1: com.esri.arcgisruntime.internal.d.d.a): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class p extends java.lang.Object {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.p>;
								public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
								public a(param0: java.util.concurrent.Future<com.esri.arcgisruntime.internal.d.i.c.b>, param1: number, param2: java.util.concurrent.TimeUnit): com.esri.arcgisruntime.internal.d.i;
								public a(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public b(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: com.esri.arcgisruntime.internal.d.n.d): void;
								public constructor();
								public constructor(param0: com.esri.arcgisruntime.internal.d.d.d<com.esri.arcgisruntime.internal.d.e.b.a>);
								public finalize(): void;
								public a(param0: com.esri.arcgisruntime.internal.d.i, param1: any, param2: number, param3: java.util.concurrent.TimeUnit): void;
								public a(param0: number): void;
								public b(param0: number): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: any): com.esri.arcgisruntime.internal.d.e.d;
								public constructor(param0: com.esri.arcgisruntime.internal.d.d.d<com.esri.arcgisruntime.internal.d.e.b.a>, param1: com.esri.arcgisruntime.internal.d.e.j<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l>, param2: com.esri.arcgisruntime.internal.d.e.e);
								public a(): void;
								public a(param0: com.esri.arcgisruntime.internal.d.d.f): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.d.d<com.esri.arcgisruntime.internal.d.e.b.a>, param1: com.esri.arcgisruntime.internal.d.e.j<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l>, param2: com.esri.arcgisruntime.internal.d.e.m, param3: com.esri.arcgisruntime.internal.d.e.e, param4: number, param5: java.util.concurrent.TimeUnit);
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.i, param1: com.esri.arcgisruntime.internal.d.e.j<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l>, param2: number, param3: java.util.concurrent.TimeUnit);
								public a(param0: com.esri.arcgisruntime.internal.d.i, param1: com.esri.arcgisruntime.internal.d.e.a.b, param2: number, param3: com.esri.arcgisruntime.internal.d.n.d): void;
								public a(param0: com.esri.arcgisruntime.internal.d.d.a): void;
								public close(): void;
								public b(): void;
							}
							export module p {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.p.a>;
									public b(): com.esri.arcgisruntime.internal.d.d.a;
									public a(param0: com.esri.arcgisruntime.internal.d.d.a): void;
									public a(param0: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.d.f;
									public a(param0: com.esri.arcgisruntime.internal.d.d.f): void;
									public a(): com.esri.arcgisruntime.internal.d.d.f;
									public b(param0: com.esri.arcgisruntime.internal.d.n): com.esri.arcgisruntime.internal.d.d.a;
								}
								export class b extends com.esri.arcgisruntime.internal.d.m.b<com.esri.arcgisruntime.internal.d.e.a.b,com.esri.arcgisruntime.internal.d.e.l> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.p.b>;
									public a(param0: any): any;
									public a(param0: com.esri.arcgisruntime.internal.d.e.a.b): com.esri.arcgisruntime.internal.d.e.l;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class q extends com.esri.arcgisruntime.internal.d.e.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.q>;
								public a(param0: string): native.Array<java.net.InetAddress>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class r extends com.esri.arcgisruntime.internal.d.i.c.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.r>;
								public constructor(param0: java.net.ProxySelector);
								public b(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.n;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.m, param1: java.net.ProxySelector);
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.m);
								public a(param0: com.esri.arcgisruntime.internal.d.n, param1: com.esri.arcgisruntime.internal.d.q, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.e.a.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module c {
							export class s {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.c.s>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.h.e, param1: string);
								public b(param0: native.Array<number>): void;
								public b(param0: native.Array<number>, param1: number, param2: number): void;
								public a(param0: string): void;
								public a(param0: native.Array<number>, param1: number, param2: number): void;
								public b(param0: string): void;
								public a(): boolean;
								public a(param0: native.Array<number>): void;
								public a(param0: number): void;
								public b(param0: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export class d extends com.esri.arcgisruntime.internal.d.t {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d>;
							public b: com.esri.arcgisruntime.internal.d.ad;
							public constructor();
							public constructor(param0: com.esri.arcgisruntime.internal.d.ad);
							public a(param0: com.esri.arcgisruntime.internal.d.af, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
							public a(param0: com.esri.arcgisruntime.internal.d.n.d): java.util.Locale;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export abstract class a extends com.esri.arcgisruntime.internal.d.f.d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.a>;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class aa extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.aa>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class ab extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ab>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
								public a(param0: string, param1: string): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class ac extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ac>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class ad extends com.esri.arcgisruntime.internal.d.i.d.x {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ad>;
								public constructor(param0: native.Array<string>, param1: boolean);
								public static a(param0: com.esri.arcgisruntime.internal.d.f.f): string;
								public toString(): string;
								public a(): number;
								public a(param0: string): com.esri.arcgisruntime.internal.d.f.d;
								public constructor(param0: boolean, param1: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: string, param2: string, param3: number): void;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.f>, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.f.c, param2: number): void;
								public static b(param0: com.esri.arcgisruntime.internal.d.f.f): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class ae extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ae>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class af extends com.esri.arcgisruntime.internal.d.f.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.af>;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class ag extends com.esri.arcgisruntime.internal.d.i.d.af {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ag>;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class ah extends com.esri.arcgisruntime.internal.d.f.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ah>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.d.ah.a, param1: com.esri.arcgisruntime.internal.d.e.d.e);
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.f.j;
								public constructor();
							}
							export module ah {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ah.a>;
									public static a: com.esri.arcgisruntime.internal.d.i.d.ah.a;
									public static b: com.esri.arcgisruntime.internal.d.i.d.ah.a;
									public static c: com.esri.arcgisruntime.internal.d.i.d.ah.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.i.d.ah.a>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.i.d.ah.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class ai extends com.esri.arcgisruntime.internal.d.i.d.ag {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.ai>;
								public toString(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class aj extends com.esri.arcgisruntime.internal.d.i.d.ag {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.aj>;
								public toString(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export abstract class b extends com.esri.arcgisruntime.internal.d.f.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.b>;
								public c(): java.util.Collection<com.esri.arcgisruntime.internal.d.f.d>;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public a(param0: string): com.esri.arcgisruntime.internal.d.f.d;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class c implements com.esri.arcgisruntime.internal.d.f.a, com.esri.arcgisruntime.internal.d.f.m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.c>;
								public a(): string;
								public f(): native.Array<number>;
								public toString(): string;
								public b(param0: java.util.Date): void;
								public a(param0: boolean): void;
								public a(param0: number): void;
								public e(param0: string): void;
								public clone(): any;
								public b(): string;
								public c(param0: java.util.Date): void;
								public constructor(param0: string, param1: string);
								public e(): string;
								public d(param0: string): void;
								public c(param0: string): void;
								public g(): boolean;
								public d(): string;
								public a(param0: string, param1: string): void;
								public c(): java.util.Date;
								public h(): number;
								public a(param0: java.util.Date): boolean;
								public b(param0: string): boolean;
								public a(param0: string): string;
								public i(): java.util.Date;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class d extends com.esri.arcgisruntime.internal.d.i.d.c implements com.esri.arcgisruntime.internal.d.f.n {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.d>;
								public a(): string;
								public f(): native.Array<number>;
								public b(param0: java.util.Date): void;
								public a(param0: boolean): void;
								public a_(param0: string): void;
								public a(param0: number): void;
								public e(param0: string): void;
								public clone(): any;
								public b(): string;
								public c(param0: java.util.Date): void;
								public constructor(param0: string, param1: string);
								public e(): string;
								public d(param0: string): void;
								public b(param0: boolean): void;
								public c(param0: string): void;
								public g(): boolean;
								public a(param0: string, param1: string): void;
								public d(): string;
								public c(): java.util.Date;
								public h(): number;
								public a(param0: java.util.Date): boolean;
								public b(param0: string): boolean;
								public a(param0: string): string;
								public a(param0: native.Array<number>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class e extends com.esri.arcgisruntime.internal.d.i.d.a implements com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.e>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class f extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.f>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class g extends com.esri.arcgisruntime.internal.d.i.d.a implements com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.g>;
								public a(): string;
								public constructor(param0: native.Array<string>);
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class h extends com.esri.arcgisruntime.internal.d.i.d.a implements com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.h>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class i extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.i>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class j extends com.esri.arcgisruntime.internal.d.i.d.a implements com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.j>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export abstract class k extends com.esri.arcgisruntime.internal.d.i.d.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.k>;
								public static a(param0: com.esri.arcgisruntime.internal.d.f.f): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.f>, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public a(param0: string): com.esri.arcgisruntime.internal.d.f.d;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public static b(param0: com.esri.arcgisruntime.internal.d.f.f): string;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class l extends com.esri.arcgisruntime.internal.d.f.j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.l>;
								public constructor(param0: native.Array<string>, param1: boolean);
								public toString(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class m extends com.esri.arcgisruntime.internal.d.f.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.m>;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.f.j;
								public constructor(param0: com.esri.arcgisruntime.internal.d.e.d.e);
								public constructor();
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.d.m.a, param1: com.esri.arcgisruntime.internal.d.e.d.e, param2: native.Array<string>, param3: boolean);
							}
							export module m {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.m.a>;
									public static a: com.esri.arcgisruntime.internal.d.i.d.m.a;
									public static b: com.esri.arcgisruntime.internal.d.i.d.m.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.d.i.d.m.a>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.d.i.d.m.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class n extends com.esri.arcgisruntime.internal.d.i.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.n>;
								public static a(param0: com.esri.arcgisruntime.internal.d.f.f): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(): number;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.f>, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public a(param0: string): com.esri.arcgisruntime.internal.d.f.d;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public static b(param0: com.esri.arcgisruntime.internal.d.f.f): string;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class o extends com.esri.arcgisruntime.internal.d.f.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.o>;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.f.j;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class p extends com.esri.arcgisruntime.internal.d.i.d.a implements com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.p>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class q extends com.esri.arcgisruntime.internal.d.i.d.a implements com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.q>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class r extends com.esri.arcgisruntime.internal.d.i.d.f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.r>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class s {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.s>;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.f;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class t extends com.esri.arcgisruntime.internal.d.i.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.t>;
								public static a(param0: com.esri.arcgisruntime.internal.d.f.f): string;
								public toString(): string;
								public a(): number;
								public constructor(param0: native.Array<string>);
								public a(param0: string): com.esri.arcgisruntime.internal.d.f.d;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.f>, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public static b(param0: com.esri.arcgisruntime.internal.d.f.f): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class u extends com.esri.arcgisruntime.internal.d.f.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.u>;
								public a(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.f.j;
								public constructor(param0: native.Array<string>);
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class v extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.v>;
								public a(): string;
								public constructor(param0: com.esri.arcgisruntime.internal.d.f.b, param1: com.esri.arcgisruntime.internal.d.e.d.e);
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public static a(param0: com.esri.arcgisruntime.internal.d.f.b, param1: com.esri.arcgisruntime.internal.d.e.d.e): com.esri.arcgisruntime.internal.d.f.b;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class w extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.w>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class x extends com.esri.arcgisruntime.internal.d.i.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.x>;
								public constructor(param0: native.Array<string>, param1: boolean);
								public static a(param0: com.esri.arcgisruntime.internal.d.f.f): string;
								public toString(): string;
								public a(): number;
								public a(param0: string): com.esri.arcgisruntime.internal.d.f.d;
								public constructor(param0: boolean, param1: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: string, param2: string, param3: number): void;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.f.b>);
								public a(param0: com.esri.arcgisruntime.internal.d.e, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.f.c>): java.util.List<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.f>, param1: com.esri.arcgisruntime.internal.d.f.f): java.util.List<com.esri.arcgisruntime.internal.d.f.c>;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public b(): com.esri.arcgisruntime.internal.d.e;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.f.c, param2: number): void;
								public static b(param0: com.esri.arcgisruntime.internal.d.f.f): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class y extends com.esri.arcgisruntime.internal.d.i.d.a implements com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.y>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module d {
							export class z extends com.esri.arcgisruntime.internal.d.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.d.z>;
								public a(): string;
								public b(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): boolean;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.f.c, param1: com.esri.arcgisruntime.internal.d.f.f): void;
								public a(param0: com.esri.arcgisruntime.internal.d.f.m, param1: string): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export class e extends com.esri.arcgisruntime.internal.d.ad {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.e>;
							public constructor();
							public a(param0: number, param1: java.util.Locale): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module e {
							export class a extends com.esri.arcgisruntime.internal.d.g.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.e.a>;
								public a(param0: com.esri.arcgisruntime.internal.d.p): number;
								public constructor(param0: number);
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module e {
							export class b extends com.esri.arcgisruntime.internal.d.g.e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.e.b>;
								public a(param0: com.esri.arcgisruntime.internal.d.p): number;
								public constructor(param0: number);
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f>;
							public constructor(param0: com.esri.arcgisruntime.internal.d.j.f, param1: com.esri.arcgisruntime.internal.d.j.f);
							public a(): void;
							public b(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class a extends com.esri.arcgisruntime.internal.d.i.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.a>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.f.b, param1: com.esri.arcgisruntime.internal.d.b.f, param2: com.esri.arcgisruntime.internal.d.b.c);
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.b>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.i.f.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
								});
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class c extends com.esri.arcgisruntime.internal.d.c.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.c>;
								public c(): void;
								public f(): void;
								public a(param0: any): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.h.e, param1: com.esri.arcgisruntime.internal.d.e.h, param2: com.esri.arcgisruntime.internal.d.i);
								public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
								public e(): void;
								public g(): boolean;
								public b(): boolean;
								public close(): void;
								public d(): void;
								public a(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class d extends com.esri.arcgisruntime.internal.d.b.d.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.d>;
								public c(param0: com.esri.arcgisruntime.internal.d.e): void;
								public toString(): string;
								public c(): com.esri.arcgisruntime.internal.d.ac;
								public a(param0: com.esri.arcgisruntime.internal.d.k): void;
								public b(): com.esri.arcgisruntime.internal.d.k;
								public a(): com.esri.arcgisruntime.internal.d.af;
								/** @deprecated */
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public c(param0: string): com.esri.arcgisruntime.internal.d.e;
								public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
								public a(param0: string): boolean;
								public f(): com.esri.arcgisruntime.internal.d.l.c;
								public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.e): void;
								public d(param0: string): void;
								public a(param0: string, param1: string): void;
								public b(param0: com.esri.arcgisruntime.internal.d.e): void;
								public e(param0: string): com.esri.arcgisruntime.internal.d.h;
								public constructor(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.i.f.c);
								public e(): com.esri.arcgisruntime.internal.d.h;
								public b(param0: string, param1: string): void;
								public close(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class e extends com.esri.arcgisruntime.internal.d.i.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
								public constructor(param0: com.esri.arcgisruntime.internal.d.n.h, param1: com.esri.arcgisruntime.internal.d.e.h, param2: com.esri.arcgisruntime.internal.d.b, param3: com.esri.arcgisruntime.internal.d.e.b, param4: com.esri.arcgisruntime.internal.d.n.f, param5: com.esri.arcgisruntime.internal.d.b.b, param6: com.esri.arcgisruntime.internal.d.b.b, param7: com.esri.arcgisruntime.internal.d.b.o);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class f extends com.esri.arcgisruntime.internal.d.i.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.f>;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.f.b, param1: com.esri.arcgisruntime.internal.d.n.f);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class g extends com.esri.arcgisruntime.internal.d.i.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.g>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.f.b, param1: com.esri.arcgisruntime.internal.d.e.a.d, param2: com.esri.arcgisruntime.internal.d.b.m);
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.h>;
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class i extends com.esri.arcgisruntime.internal.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.i>;
								public toString(): string;
								public c(): number;
								public g(): boolean;
								public a(param0: java.io.OutputStream): void;
								public h(): boolean;
								public b(): boolean;
								public f(): java.io.InputStream;
								public e(): com.esri.arcgisruntime.internal.d.e;
								public a(): boolean;
								public d(): com.esri.arcgisruntime.internal.d.e;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class j extends com.esri.arcgisruntime.internal.d.g.g implements com.esri.arcgisruntime.internal.d.e.g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.j>;
								public toString(): string;
								public b(): boolean;
								public h(): void;
								public a(): boolean;
								public static a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.i.f.c): void;
								public c(): number;
								public g(): boolean;
								public b(param0: java.io.InputStream): boolean;
								public a(param0: java.io.OutputStream): void;
								public c(param0: java.io.InputStream): boolean;
								public f(): java.io.InputStream;
								public e(): com.esri.arcgisruntime.internal.d.e;
								public a(param0: java.io.InputStream): boolean;
								public d(): com.esri.arcgisruntime.internal.d.e;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class k extends com.esri.arcgisruntime.internal.d.i.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.k>;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.f.b, param1: com.esri.arcgisruntime.internal.d.b.j);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class l extends com.esri.arcgisruntime.internal.d.i.f.b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.l>;
								public a(param0: com.esri.arcgisruntime.internal.d.e.a.b, param1: com.esri.arcgisruntime.internal.d.b.d.j, param2: com.esri.arcgisruntime.internal.d.b.f.a, param3: com.esri.arcgisruntime.internal.d.b.d.e): com.esri.arcgisruntime.internal.d.b.d.b;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.f.b, param1: com.esri.arcgisruntime.internal.d.b.n);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module f {
							export class m extends com.esri.arcgisruntime.internal.d.m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.f.m>;
								public constructor(param0: string, param1: com.esri.arcgisruntime.internal.d.s);
								public constructor(param0: string, param1: java.lang.Throwable);
								public a(): com.esri.arcgisruntime.internal.d.s;
								public constructor();
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export class g extends com.esri.arcgisruntime.internal.d.b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export abstract class a<T>  extends com.esri.arcgisruntime.internal.d.j.b<any> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.a<any>>;
								public a(): any;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.k.u, param2: com.esri.arcgisruntime.internal.d.d.c);
								public b(param0: com.esri.arcgisruntime.internal.d.j.g): any;
								public static a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.d.k.u): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public static a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.d.k.u, param4: java.util.List<com.esri.arcgisruntime.internal.d.p.d>): native.Array<com.esri.arcgisruntime.internal.d.e>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export abstract class b<T>  extends com.esri.arcgisruntime.internal.d.j.d<any> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.b<any>>;
								public c: com.esri.arcgisruntime.internal.d.k.t;
								public a(param0: any): void;
								public b(param0: any): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.h, param1: com.esri.arcgisruntime.internal.d.k.t);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.c>;
								public read(param0: native.Array<number>): number;
								public available(): number;
								public close(): void;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.d.c);
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.d>;
								public c(): void;
								public flush(): void;
								public write(param0: number): void;
								public constructor(param0: number, param1: com.esri.arcgisruntime.internal.d.j.h);
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public a(): void;
								public a(param0: native.Array<number>, param1: number, param2: number): void;
								public write(param0: native.Array<number>): void;
								public close(): void;
								public b(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.e>;
								public read(param0: native.Array<number>): number;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g, param1: number);
								public skip(param0: number): number;
								public available(): number;
								public close(): void;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.f>;
								public flush(): void;
								public write(param0: number): void;
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public write(param0: native.Array<number>): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.h, param1: number);
								public close(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class g extends com.esri.arcgisruntime.internal.d.i.g.b<com.esri.arcgisruntime.internal.d.q> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.g>;
								public a(param0: any): void;
								public b(param0: any): void;
								public a(param0: com.esri.arcgisruntime.internal.d.q): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.h, param1: com.esri.arcgisruntime.internal.d.k.t);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class h extends com.esri.arcgisruntime.internal.d.j.e<com.esri.arcgisruntime.internal.d.q> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.h>;
								public a(param0: com.esri.arcgisruntime.internal.d.j.h): com.esri.arcgisruntime.internal.d.j.d<com.esri.arcgisruntime.internal.d.q>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.k.t);
								public a(param0: com.esri.arcgisruntime.internal.d.j.h): com.esri.arcgisruntime.internal.d.j.d<any>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class i extends com.esri.arcgisruntime.internal.d.i.g.a<com.esri.arcgisruntime.internal.d.s> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.i>;
								public a(): any;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.k.u, param2: com.esri.arcgisruntime.internal.d.d.c);
								public static a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.d.k.u): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.k.u, param2: com.esri.arcgisruntime.internal.d.t, param3: com.esri.arcgisruntime.internal.d.d.c);
								public static a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.d.k.u, param4: java.util.List<com.esri.arcgisruntime.internal.d.p.d>): native.Array<com.esri.arcgisruntime.internal.d.e>;
								public a(param0: com.esri.arcgisruntime.internal.d.j.g): com.esri.arcgisruntime.internal.d.s;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class j extends com.esri.arcgisruntime.internal.d.j.c<com.esri.arcgisruntime.internal.d.s> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.j>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.k.u, param1: com.esri.arcgisruntime.internal.d.t);
								public a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.d.c): com.esri.arcgisruntime.internal.d.j.b<any>;
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.d.c): com.esri.arcgisruntime.internal.d.j.b<com.esri.arcgisruntime.internal.d.s>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.k>;
								public static a: com.esri.arcgisruntime.internal.d.i.g.k;
								public read(param0: native.Array<number>): number;
								public skip(param0: number): number;
								public reset(): void;
								public mark(param0: number): void;
								public available(): number;
								public close(): void;
								public markSupported(): boolean;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class l extends com.esri.arcgisruntime.internal.d.j.f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.l>;
								public constructor();
								public a(param0: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class m {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.m>;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.g);
								public available(): number;
								public close(): void;
								public read(param0: native.Array<number>, param1: number, param2: number): number;
								public read(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class n {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.n>;
								public flush(): void;
								public write(param0: number): void;
								public write(param0: native.Array<number>, param1: number, param2: number): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.j.h);
								public write(param0: native.Array<number>): void;
								public close(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class o implements com.esri.arcgisruntime.internal.d.j.a, com.esri.arcgisruntime.internal.d.j.g {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.o>;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d): number;
								public f(): number;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.g.l, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.d.d.c, param4: java.nio.charset.CharsetDecoder);
								public d(): boolean;
								public e(): void;
								public b(): number;
								public c(): number;
								public a(param0: java.io.InputStream): void;
								public a(param0: native.Array<number>, param1: number, param2: number): number;
								public a(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module i {
						export module g {
							export class p implements com.esri.arcgisruntime.internal.d.j.a, com.esri.arcgisruntime.internal.d.j.h {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.i.g.p>;
								public c(): void;
								public a(param0: string): void;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d): void;
								public b(): number;
								public a(param0: native.Array<number>, param1: number, param2: number): void;
								public a(param0: java.io.OutputStream): void;
								public constructor(param0: com.esri.arcgisruntime.internal.d.i.g.l, param1: number, param2: number, param3: java.nio.charset.CharsetEncoder);
								public a(): boolean;
								public a(param0: native.Array<number>): void;
								public a(param0: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class j {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							close(): void;
							c(): boolean;
							d(): boolean;
							b(param0: number): void;
							e(): void;
						});
						public constructor();
						public e(): void;
						public close(): void;
						public d(): boolean;
						public c(): boolean;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.a>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								b(): number;
							});
							public constructor();
							public b(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class b<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.b<any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.b<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): T;
							});
							public constructor();
							public a(): T;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class c<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.c<any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.c<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.d.c): com.esri.arcgisruntime.internal.d.j.b<T>;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.j.g, param1: com.esri.arcgisruntime.internal.d.d.c): com.esri.arcgisruntime.internal.d.j.b<T>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class d<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.d<any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.d<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								b(param0: T): void;
							});
							public constructor();
							public b(param0: T): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class e<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.e<any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.e<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.j.h): com.esri.arcgisruntime.internal.d.j.d<T>;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.j.h): com.esri.arcgisruntime.internal.d.j.d<T>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.f>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.f interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.g>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.g interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: native.Array<number>, param1: number, param2: number): number;
								f(): number;
								a(param0: com.esri.arcgisruntime.internal.d.p.d): number;
							});
							public constructor();
							public a(param0: native.Array<number>, param1: number, param2: number): number;
							public f(): number;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module j {
						export class h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.j.h>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.j.h interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: native.Array<number>, param1: number, param2: number): void;
								a(param0: number): void;
								a(param0: string): void;
								a(param0: com.esri.arcgisruntime.internal.d.p.d): void;
								c(): void;
							});
							public constructor();
							public a(param0: number): void;
							public a(param0: string): void;
							public c(): void;
							public a(param0: native.Array<number>, param1: number, param2: number): void;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class k {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.k interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): boolean;
							b(): boolean;
							c(): number;
							d(): com.esri.arcgisruntime.internal.d.e;
							e(): com.esri.arcgisruntime.internal.d.e;
							f(): java.io.InputStream;
							a(param0: java.io.OutputStream): void;
							g(): boolean;
						});
						public constructor();
						public g(): boolean;
						public f(): java.io.InputStream;
						public c(): number;
						public a(param0: java.io.OutputStream): void;
						public a(): boolean;
						public b(): boolean;
						public e(): com.esri.arcgisruntime.internal.d.e;
						public d(): com.esri.arcgisruntime.internal.d.e;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export abstract class a extends com.esri.arcgisruntime.internal.d.p {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.a>;
							public constructor();
							public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string): boolean;
							public a(param0: string, param1: string): void;
							public c(param0: com.esri.arcgisruntime.internal.d.e): void;
							/** @deprecated */
							public f(): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							public c(param0: string): com.esri.arcgisruntime.internal.d.e;
							public d(param0: string): void;
							/** @deprecated */
							public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
							public e(): com.esri.arcgisruntime.internal.d.h;
							public c(): com.esri.arcgisruntime.internal.d.ac;
							public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public b(param0: string, param1: string): void;
							public e(param0: string): com.esri.arcgisruntime.internal.d.h;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class b extends com.esri.arcgisruntime.internal.d.e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.b>;
							public c(): native.Array<com.esri.arcgisruntime.internal.d.f>;
							public clone(): any;
							public constructor(param0: string, param1: string);
							public d(): string;
							public e(): string;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class c extends com.esri.arcgisruntime.internal.d.f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.c>;
							public clone(): any;
							public c(): native.Array<com.esri.arcgisruntime.internal.d.y>;
							public hashCode(): number;
							public a(param0: string): com.esri.arcgisruntime.internal.d.y;
							public constructor(param0: string, param1: string, param2: native.Array<com.esri.arcgisruntime.internal.d.y>);
							public toString(): string;
							public equals(param0: any): boolean;
							public b(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class d extends com.esri.arcgisruntime.internal.d.g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.d>;
							public hasNext(): boolean;
							public remove(): void;
							public constructor(param0: com.esri.arcgisruntime.internal.d.h);
							public a(): com.esri.arcgisruntime.internal.d.f;
							public next(): any;
							public constructor(param0: com.esri.arcgisruntime.internal.d.h, param1: com.esri.arcgisruntime.internal.d.k.s);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class e extends com.esri.arcgisruntime.internal.d.h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.e>;
							public c: string;
							public hasNext(): boolean;
							public remove(): void;
							public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.e>, param1: string);
							public a(): com.esri.arcgisruntime.internal.d.e;
							public b(param0: number): boolean;
							public next(): any;
							public a(param0: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.f>;
							public constructor();
							public a(param0: native.Array<com.esri.arcgisruntime.internal.d.y>): number;
							public b(param0: string): boolean;
							public a(param0: string): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.y, param2: boolean): com.esri.arcgisruntime.internal.d.p.d;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: native.Array<com.esri.arcgisruntime.internal.d.y>, param2: boolean): com.esri.arcgisruntime.internal.d.p.d;
							public a(param0: com.esri.arcgisruntime.internal.d.y): number;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: string, param2: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class g extends com.esri.arcgisruntime.internal.d.k.s {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.g>;
							public constructor();
							public a(param0: string, param1: string): com.esri.arcgisruntime.internal.d.y;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): native.Array<com.esri.arcgisruntime.internal.d.f>;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.f;
							public c(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): native.Array<com.esri.arcgisruntime.internal.d.y>;
							public a(param0: string, param1: string, param2: native.Array<com.esri.arcgisruntime.internal.d.y>): com.esri.arcgisruntime.internal.d.f;
							public d(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.y;
							public static a(param0: string, param1: com.esri.arcgisruntime.internal.d.k.s): native.Array<com.esri.arcgisruntime.internal.d.f>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class h extends com.esri.arcgisruntime.internal.d.k.a implements com.esri.arcgisruntime.internal.d.q {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.h>;
							public constructor();
							public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string): boolean;
							public c(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string, param1: string): void;
							/** @deprecated */
							public f(): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public toString(): string;
							public g(): com.esri.arcgisruntime.internal.d.ae;
							public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.d.ac);
							public constructor(param0: com.esri.arcgisruntime.internal.d.ae);
							public c(param0: string): com.esri.arcgisruntime.internal.d.e;
							public d(param0: string): void;
							/** @deprecated */
							public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
							public c(): com.esri.arcgisruntime.internal.d.ac;
							public e(): com.esri.arcgisruntime.internal.d.h;
							public b(param0: string, param1: string): void;
							public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public e(param0: string): com.esri.arcgisruntime.internal.d.h;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class i extends com.esri.arcgisruntime.internal.d.k.a implements com.esri.arcgisruntime.internal.d.s {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.i>;
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(param0: string): boolean;
							public c(param0: com.esri.arcgisruntime.internal.d.e): void;
							/** @deprecated */
							public f(): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public toString(): string;
							public constructor(param0: com.esri.arcgisruntime.internal.d.af);
							public c(param0: string): com.esri.arcgisruntime.internal.d.e;
							public d(param0: string): void;
							/** @deprecated */
							public constructor(param0: com.esri.arcgisruntime.internal.d.l.c);
							public constructor(param0: com.esri.arcgisruntime.internal.d.ac, param1: number, param2: string);
							public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public e(param0: string): com.esri.arcgisruntime.internal.d.h;
							public constructor();
							public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public a(param0: string, param1: string): void;
							public constructor(param0: com.esri.arcgisruntime.internal.d.af, param1: com.esri.arcgisruntime.internal.d.ad, param2: java.util.Locale);
							public a(param0: com.esri.arcgisruntime.internal.d.k): void;
							public a(): com.esri.arcgisruntime.internal.d.af;
							public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							public b(): com.esri.arcgisruntime.internal.d.k;
							public c(): com.esri.arcgisruntime.internal.d.ac;
							public e(): com.esri.arcgisruntime.internal.d.h;
							public b(param0: string, param1: string): void;
							public a(param0: number): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class j extends com.esri.arcgisruntime.internal.d.k.t {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.j>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.ac): number;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d): com.esri.arcgisruntime.internal.d.p.d;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.ae): void;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.ae): com.esri.arcgisruntime.internal.d.p.d;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.af): void;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.af): com.esri.arcgisruntime.internal.d.p.d;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.e): com.esri.arcgisruntime.internal.d.p.d;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.ac): com.esri.arcgisruntime.internal.d.p.d;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.e): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class k extends com.esri.arcgisruntime.internal.d.k.u {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.k>;
							public constructor(param0: com.esri.arcgisruntime.internal.d.ac);
							public constructor();
							public a(param0: number, param1: number): com.esri.arcgisruntime.internal.d.ac;
							public d(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): void;
							public c(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.af;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.ac;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.ac, param1: number, param2: string): com.esri.arcgisruntime.internal.d.af;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class l extends com.esri.arcgisruntime.internal.d.h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.l>;
							public c: number;
							public d: string;
							public constructor(param0: java.util.List<com.esri.arcgisruntime.internal.d.e>, param1: string);
							public hasNext(): boolean;
							public remove(): void;
							public a(): com.esri.arcgisruntime.internal.d.e;
							public b(param0: number): boolean;
							public next(): any;
							public a(param0: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class m extends com.esri.arcgisruntime.internal.d.y {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.m>;
							public clone(): any;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public d(): string;
							public e(): string;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class n extends com.esri.arcgisruntime.internal.d.ae {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.n>;
							public b(): com.esri.arcgisruntime.internal.d.ac;
							public clone(): any;
							public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.d.ac);
							public toString(): string;
							public c(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class o extends com.esri.arcgisruntime.internal.d.af {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.o>;
							public clone(): any;
							public constructor(param0: com.esri.arcgisruntime.internal.d.ac, param1: number, param2: string);
							public b(): number;
							public a(): com.esri.arcgisruntime.internal.d.ac;
							public toString(): string;
							public c(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class p extends com.esri.arcgisruntime.internal.d.ag {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.p>;
							public a(param0: string, param1: number, param2: number): string;
							public a(param0: string): boolean;
							public hasNext(): boolean;
							public remove(): void;
							public c(param0: string): boolean;
							public a(): string;
							public a(param0: number): number;
							public b(param0: string): boolean;
							public d(param0: number): number;
							public b(param0: number): number;
							public constructor(param0: com.esri.arcgisruntime.internal.d.h);
							public next(): any;
							public c(param0: number): number;
							public d(param0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class q extends com.esri.arcgisruntime.internal.d.d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.q>;
							public c(): native.Array<com.esri.arcgisruntime.internal.d.f>;
							public a(): com.esri.arcgisruntime.internal.d.p.d;
							public clone(): any;
							public d(): string;
							public e(): string;
							public b(): number;
							public toString(): string;
							public constructor(param0: com.esri.arcgisruntime.internal.d.p.d);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class r {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.r>;
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.e): void;
							public a(): void;
							public c(param0: com.esri.arcgisruntime.internal.d.e): void;
							public d(param0: string): com.esri.arcgisruntime.internal.d.h;
							public a(param0: com.esri.arcgisruntime.internal.d.e): void;
							public toString(): string;
							public c(param0: string): boolean;
							public b(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public clone(): any;
							public a(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							public c(): com.esri.arcgisruntime.internal.d.h;
							public b(param0: string): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class s {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.s>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.k.s interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): native.Array<com.esri.arcgisruntime.internal.d.f>;
								b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.f;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): native.Array<com.esri.arcgisruntime.internal.d.f>;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.f;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class t {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.t>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.k.t interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.ae): com.esri.arcgisruntime.internal.d.p.d;
								a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.e): com.esri.arcgisruntime.internal.d.p.d;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.ae): com.esri.arcgisruntime.internal.d.p.d;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.e): com.esri.arcgisruntime.internal.d.p.d;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class u {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.u>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.k.u interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): boolean;
								c(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.af;
								a(param0: com.esri.arcgisruntime.internal.d.p.d): com.esri.arcgisruntime.internal.d.e;
							});
							public constructor();
							public c(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): com.esri.arcgisruntime.internal.d.af;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): boolean;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d): com.esri.arcgisruntime.internal.d.e;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class v {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.v>;
							public a(param0: number): void;
							public a(): number;
							public constructor(param0: number, param1: number);
							public c(): boolean;
							public b(): number;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module k {
						export class w {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.k.w>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet, param3: java.lang.StringBuilder): void;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.lang.StringBuilder): void;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet): string;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): void;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet): string;
							public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet, param3: java.lang.StringBuilder): void;
							public static a(param0: native.Array<number>): java.util.BitSet;
							public static a(param0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class l extends com.esri.arcgisruntime.internal.d.q {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.l>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.l interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): boolean;
							a(param0: com.esri.arcgisruntime.internal.d.k): void;
							b(): com.esri.arcgisruntime.internal.d.k;
							g(): com.esri.arcgisruntime.internal.d.ae;
							c(): com.esri.arcgisruntime.internal.d.ac;
							a(param0: string): boolean;
							b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							c(param0: string): com.esri.arcgisruntime.internal.d.e;
							d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							a(param0: com.esri.arcgisruntime.internal.d.e): void;
							a(param0: string, param1: string): void;
							b(param0: com.esri.arcgisruntime.internal.d.e): void;
							b(param0: string, param1: string): void;
							a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							c(param0: com.esri.arcgisruntime.internal.d.e): void;
							d(param0: string): void;
							e(): com.esri.arcgisruntime.internal.d.h;
							e(param0: string): com.esri.arcgisruntime.internal.d.h;
							f(): com.esri.arcgisruntime.internal.d.l.c;
						});
						public constructor();
						public g(): com.esri.arcgisruntime.internal.d.ae;
						public a(param0: com.esri.arcgisruntime.internal.d.e): void;
						public b(param0: com.esri.arcgisruntime.internal.d.e): void;
						public e(param0: string): com.esri.arcgisruntime.internal.d.h;
						public b(): com.esri.arcgisruntime.internal.d.k;
						public a(param0: string, param1: string): void;
						public d(param0: string): void;
						public b(param0: string, param1: string): void;
						/** @deprecated */
						public f(): com.esri.arcgisruntime.internal.d.l.c;
						public c(param0: com.esri.arcgisruntime.internal.d.e): void;
						public c(param0: string): com.esri.arcgisruntime.internal.d.e;
						public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
						public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public e(): com.esri.arcgisruntime.internal.d.h;
						public a(param0: com.esri.arcgisruntime.internal.d.k): void;
						public a(): boolean;
						public c(): com.esri.arcgisruntime.internal.d.ac;
						public a(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module l {
						export abstract class a implements com.esri.arcgisruntime.internal.d.l.c, com.esri.arcgisruntime.internal.d.l.d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.l.a>;
							public constructor();
							public a(): java.util.Set<string>;
							public a(param0: string, param1: any): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: string, param1: boolean): boolean;
							public b(): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: string): any;
							public a(param0: string, param1: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module l {
						export class b extends com.esri.arcgisruntime.internal.d.l.a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.l.b>;
							public constructor();
							public a(): java.util.Set<string>;
							public clone(): any;
							public a(param0: com.esri.arcgisruntime.internal.d.l.c): void;
							public a(param0: string, param1: any): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: string, param1: boolean): boolean;
							public b(): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: string): any;
							public a(param0: string, param1: number): number;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module l {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.l.c>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.l.c interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: string): any;
								a(param0: string, param1: any): com.esri.arcgisruntime.internal.d.l.c;
								b(): com.esri.arcgisruntime.internal.d.l.c;
								a(param0: string, param1: number): number;
								a(param0: string, param1: number): number;
								a(param0: string, param1: boolean): boolean;
							});
							public constructor();
							public a(param0: string, param1: any): com.esri.arcgisruntime.internal.d.l.c;
							public b(): com.esri.arcgisruntime.internal.d.l.c;
							public a(param0: string, param1: boolean): boolean;
							public a(param0: string): any;
							public a(param0: string, param1: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module l {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.l.d>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.l.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): java.util.Set<string>;
							});
							public constructor();
							public a(): java.util.Set<string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module l {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.l.e>;
							public static a(param0: com.esri.arcgisruntime.internal.d.l.c): com.esri.arcgisruntime.internal.d.ac;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class m {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.m>;
						public constructor();
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module m {
						export abstract class a<T, C, E>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.m.a<any,any,any>>;
							public a(param0: number): void;
							public a(param0: T, param1: any, param2: com.esri.arcgisruntime.internal.d.c.b<E>): java.util.concurrent.Future<E>;
							public a(): void;
							public b(): com.esri.arcgisruntime.internal.d.m.e;
							public c(param0: E): void;
							public c(): void;
							public toString(): string;
							public a(param0: com.esri.arcgisruntime.internal.d.m.d<T,C>): void;
							public a(param0: E): boolean;
							public constructor(param0: com.esri.arcgisruntime.internal.d.m.b<T,C>, param1: number, param2: number);
							public a(param0: T): com.esri.arcgisruntime.internal.d.m.e;
							public d(param0: E): void;
							public a(param0: T, param1: C): E;
							public c(param0: number): void;
							public b(param0: E): void;
							public a(param0: E, param1: boolean): void;
							public b(param0: number): void;
							public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module m {
						export class b<T, C>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.m.b<any,any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.m.b<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: T): C;
							});
							public constructor();
							public a(param0: T): C;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module m {
						export abstract class c<T, C>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.m.c<any,any>>;
							public a(param0: any): void;
							public l(): number;
							public h(): T;
							public g(): string;
							public toString(): string;
							public e(): boolean;
							public k(): number;
							public i(): C;
							public f(): void;
							public j(): any;
							public constructor(param0: string, param1: T, param2: C, param3: number, param4: java.util.concurrent.TimeUnit);
							public a(param0: number, param1: java.util.concurrent.TimeUnit): void;
							public a(param0: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module m {
						export class d<T, C>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.m.d<any,any>>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.m.d<any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.m.c<T,C>): void;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.m.c<T,C>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module m {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.m.e>;
							public a(): number;
							public c(): number;
							public b(): number;
							public toString(): string;
							public constructor(param0: number, param1: number, param2: number, param3: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module m {
						export abstract class f<T, C, E>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.m.f<any,any,any>>;
							public f(): java.util.concurrent.Future<E>;
							public g(): void;
							public c(param0: C): E;
							public e(): E;
							public b(): number;
							public toString(): string;
							public a(param0: java.util.concurrent.Future<E>): void;
							public a(param0: E): boolean;
							public a(): number;
							public b(param0: any): E;
							public d(): number;
							public b(param0: java.util.concurrent.Future<E>): void;
							public c(): number;
							public a(param0: C): E;
							public a(param0: E, param1: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class n {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n>;
						public f(): string;
						public a(): string;
						public clone(): any;
						public c(): string;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: string, param1: number, param2: string);
						public constructor(param0: java.net.InetAddress, param1: number, param2: string);
						public toString(): string;
						public d(): java.net.InetAddress;
						public constructor(param0: string, param1: number);
						public constructor(param0: java.net.InetAddress, param1: string, param2: number, param3: string);
						public e(): string;
						public b(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class a extends com.esri.arcgisruntime.internal.d.n.d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.a>;
							public constructor();
							public a(param0: string, param1: any): void;
							public a(param0: string): any;
							public toString(): string;
							public constructor(param0: com.esri.arcgisruntime.internal.d.n.d);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class b<E>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.b<any>>;
							public constructor();
							public a(): java.util.LinkedList<E>;
							public b(param0: E): com.esri.arcgisruntime.internal.d.n.b<E>;
							public a(param0: E): com.esri.arcgisruntime.internal.d.n.b<E>;
							public a(param0: native.Array<E>): com.esri.arcgisruntime.internal.d.n.b<E>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.c>;
							public static b: java.nio.charset.Charset;
							public static a(param0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.d>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.n.d interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: string): any;
								a(param0: string, param1: any): void;
							});
							public constructor();
							public a(param0: string, param1: any): void;
							public a(param0: string): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class e extends com.esri.arcgisruntime.internal.d.n.d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.e>;
							public constructor();
							public static b(param0: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.n.e;
							public a(param0: string, param1: java.lang.Class): any;
							public a(param0: string, param1: any): void;
							public r(): com.esri.arcgisruntime.internal.d.n;
							public a(param0: string): any;
							public o(): com.esri.arcgisruntime.internal.d.j;
							public p(): com.esri.arcgisruntime.internal.d.q;
							public constructor(param0: com.esri.arcgisruntime.internal.d.n.d);
							public q(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class f implements com.esri.arcgisruntime.internal.d.r, com.esri.arcgisruntime.internal.d.u {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.f>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.n.f interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
								a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): void;
							});
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): void;
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.g>;
							public c(param0: com.esri.arcgisruntime.internal.d.r): com.esri.arcgisruntime.internal.d.n.g;
							public b(param0: com.esri.arcgisruntime.internal.d.u): com.esri.arcgisruntime.internal.d.n.g;
							public b(): com.esri.arcgisruntime.internal.d.n.f;
							public b(param0: native.Array<com.esri.arcgisruntime.internal.d.r>): com.esri.arcgisruntime.internal.d.n.g;
							public b(param0: com.esri.arcgisruntime.internal.d.r): com.esri.arcgisruntime.internal.d.n.g;
							public a(param0: native.Array<com.esri.arcgisruntime.internal.d.r>): com.esri.arcgisruntime.internal.d.n.g;
							public static a(): com.esri.arcgisruntime.internal.d.n.g;
							public a(param0: com.esri.arcgisruntime.internal.d.r): com.esri.arcgisruntime.internal.d.n.g;
							public a(param0: com.esri.arcgisruntime.internal.d.u): com.esri.arcgisruntime.internal.d.n.g;
							public c(param0: com.esri.arcgisruntime.internal.d.u): com.esri.arcgisruntime.internal.d.n.g;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.h>;
							public constructor();
							public b(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.i, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
							public c(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.i, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
							public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.f, param2: com.esri.arcgisruntime.internal.d.n.d): void;
							public constructor(param0: number);
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.i, param2: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.f, param2: com.esri.arcgisruntime.internal.d.n.d): void;
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.s): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class i extends com.esri.arcgisruntime.internal.d.n.f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.i>;
							public constructor(param0: java.util.List<com.esri.arcgisruntime.internal.d.r>, param1: java.util.List<com.esri.arcgisruntime.internal.d.u>);
							public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): void;
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
							public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.r>);
							public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.r>, param1: native.Array<com.esri.arcgisruntime.internal.d.u>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class j extends com.esri.arcgisruntime.internal.d.r {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.j>;
							public constructor();
							public constructor(param0: boolean);
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class k extends com.esri.arcgisruntime.internal.d.r {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.k>;
							public constructor();
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module n {
						export class l extends com.esri.arcgisruntime.internal.d.r {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.n.l>;
							public constructor();
							public constructor(param0: string);
							public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class o extends com.esri.arcgisruntime.internal.d.j {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.o>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.o interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							f(): java.net.InetAddress;
							g(): number;
							close(): void;
							c(): boolean;
							d(): boolean;
							b(param0: number): void;
							e(): void;
						});
						public constructor();
						public e(): void;
						public close(): void;
						public d(): boolean;
						public c(): boolean;
						public g(): number;
						public f(): java.net.InetAddress;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module o {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.o.a>;
							public static a(): javax.net.ssl.SSLContext;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module o {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.o.b>;
							public constructor(param0: string, param1: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class p {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.p interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							c(): com.esri.arcgisruntime.internal.d.ac;
							a(param0: string): boolean;
							b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							c(param0: string): com.esri.arcgisruntime.internal.d.e;
							d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							a(param0: com.esri.arcgisruntime.internal.d.e): void;
							a(param0: string, param1: string): void;
							b(param0: com.esri.arcgisruntime.internal.d.e): void;
							b(param0: string, param1: string): void;
							a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							c(param0: com.esri.arcgisruntime.internal.d.e): void;
							d(param0: string): void;
							e(): com.esri.arcgisruntime.internal.d.h;
							e(param0: string): com.esri.arcgisruntime.internal.d.h;
							f(): com.esri.arcgisruntime.internal.d.l.c;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.d.e): void;
						public b(param0: com.esri.arcgisruntime.internal.d.e): void;
						public e(param0: string): com.esri.arcgisruntime.internal.d.h;
						public a(param0: string, param1: string): void;
						public d(param0: string): void;
						public b(param0: string, param1: string): void;
						/** @deprecated */
						public f(): com.esri.arcgisruntime.internal.d.l.c;
						public c(param0: com.esri.arcgisruntime.internal.d.e): void;
						public c(param0: string): com.esri.arcgisruntime.internal.d.e;
						public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
						public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public e(): com.esri.arcgisruntime.internal.d.h;
						public c(): com.esri.arcgisruntime.internal.d.ac;
						public a(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.a>;
							public static a(param0: string, param1: string): string;
							public static a(param0: boolean, param1: string): void;
							public static b(param0: number, param1: string): number;
							public static c(param0: string, param1: string): string;
							public static a(param0: java.util.Collection, param1: string): java.util.Collection;
							public static a(param0: any, param1: string): any;
							public static a(param0: number, param1: string): number;
							public static a(param0: boolean, param1: string, param2: native.Array<any>): void;
							public static b(param0: string, param1: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.b>;
							public static a(param0: boolean, param1: string): void;
							public static a(param0: boolean, param1: string, param2: any): void;
							public static a(param0: any, param1: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.c>;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number, param2: number): void;
							public a(param0: number): void;
							public b(): native.Array<number>;
							public a(): void;
							public constructor(param0: number);
							public a(param0: native.Array<number>, param1: number, param2: number): void;
							public e(): native.Array<number>;
							public f(): boolean;
							public d(): number;
							public b(param0: number): number;
							public g(): boolean;
							public c(): number;
							public a(param0: native.Array<string>, param1: number, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.d>;
							public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: number, param2: number): void;
							public charAt(param0: number): string;
							public a(param0: com.esri.arcgisruntime.internal.d.p.c, param1: number, param2: number): void;
							public a(param0: number): void;
							public a(): void;
							public a(param0: number, param1: number): string;
							public a(param0: string): void;
							public toString(): string;
							public constructor(param0: number);
							public a(param0: native.Array<number>, param1: number, param2: number): void;
							public length(): number;
							public a(param0: number, param1: number, param2: number): number;
							public c(): boolean;
							public b(param0: number): number;
							public b(param0: number, param1: number): string;
							public a(param0: native.Array<string>, param1: number, param2: number): void;
							public b(): native.Array<string>;
							public subSequence(param0: number, param1: number): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.e>;
							public static a(param0: string): native.Array<number>;
							public static a(param0: string, param1: string): native.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.f>;
							public static c(param0: com.esri.arcgisruntime.internal.d.k): native.Array<number>;
							public static a(param0: com.esri.arcgisruntime.internal.d.k): void;
							public static b(param0: com.esri.arcgisruntime.internal.d.k): void;
							public static d(param0: com.esri.arcgisruntime.internal.d.k): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.g>;
							public static a(param0: any, param1: any): boolean;
							public static a(param0: number, param1: boolean): number;
							public static a(param0: native.Array<any>, param1: native.Array<any>): boolean;
							public static a(param0: number, param1: number): number;
							public static a(param0: number, param1: any): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.h>;
							public static a(param0: java.lang.StringBuilder, param1: java.net.SocketAddress): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class i {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.i>;
							public static b(param0: string): boolean;
							public static c(param0: string): boolean;
							public static a(param0: string): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export module p {
						export class j {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.p.j>;
							public static a(param0: string, param1: java.util.Map<any,any>, param2: java.lang.ClassLoader): com.esri.arcgisruntime.internal.d.p.j;
							public static a(param0: string, param1: java.lang.ClassLoader): com.esri.arcgisruntime.internal.d.p.j;
							public static a(param0: string, param1: string, param2: java.lang.Class<any>): string;
							public constructor(param0: string, param1: string, param2: string, param3: string, param4: string);
							public toString(): string;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class q extends com.esri.arcgisruntime.internal.d.p {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.q>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.q interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							g(): com.esri.arcgisruntime.internal.d.ae;
							c(): com.esri.arcgisruntime.internal.d.ac;
							a(param0: string): boolean;
							b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							c(param0: string): com.esri.arcgisruntime.internal.d.e;
							d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							a(param0: com.esri.arcgisruntime.internal.d.e): void;
							a(param0: string, param1: string): void;
							b(param0: com.esri.arcgisruntime.internal.d.e): void;
							b(param0: string, param1: string): void;
							a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							c(param0: com.esri.arcgisruntime.internal.d.e): void;
							d(param0: string): void;
							e(): com.esri.arcgisruntime.internal.d.h;
							e(param0: string): com.esri.arcgisruntime.internal.d.h;
							f(): com.esri.arcgisruntime.internal.d.l.c;
						});
						public constructor();
						public g(): com.esri.arcgisruntime.internal.d.ae;
						public a(param0: com.esri.arcgisruntime.internal.d.e): void;
						public b(param0: com.esri.arcgisruntime.internal.d.e): void;
						public e(param0: string): com.esri.arcgisruntime.internal.d.h;
						public a(param0: string, param1: string): void;
						public d(param0: string): void;
						public b(param0: string, param1: string): void;
						/** @deprecated */
						public f(): com.esri.arcgisruntime.internal.d.l.c;
						public c(param0: com.esri.arcgisruntime.internal.d.e): void;
						public c(param0: string): com.esri.arcgisruntime.internal.d.e;
						public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
						public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public e(): com.esri.arcgisruntime.internal.d.h;
						public c(): com.esri.arcgisruntime.internal.d.ac;
						public a(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class r {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.r>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.r interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.d.q, param1: com.esri.arcgisruntime.internal.d.n.d): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class s extends com.esri.arcgisruntime.internal.d.p {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.s>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.s interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): com.esri.arcgisruntime.internal.d.af;
							b(): com.esri.arcgisruntime.internal.d.k;
							a(param0: com.esri.arcgisruntime.internal.d.k): void;
							c(): com.esri.arcgisruntime.internal.d.ac;
							a(param0: string): boolean;
							b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
							c(param0: string): com.esri.arcgisruntime.internal.d.e;
							d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							a(param0: com.esri.arcgisruntime.internal.d.e): void;
							a(param0: string, param1: string): void;
							b(param0: com.esri.arcgisruntime.internal.d.e): void;
							b(param0: string, param1: string): void;
							a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
							c(param0: com.esri.arcgisruntime.internal.d.e): void;
							d(param0: string): void;
							e(): com.esri.arcgisruntime.internal.d.h;
							e(param0: string): com.esri.arcgisruntime.internal.d.h;
							f(): com.esri.arcgisruntime.internal.d.l.c;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.d.e): void;
						public b(param0: com.esri.arcgisruntime.internal.d.e): void;
						public e(param0: string): com.esri.arcgisruntime.internal.d.h;
						public b(): com.esri.arcgisruntime.internal.d.k;
						public a(param0: string, param1: string): void;
						public d(param0: string): void;
						public b(param0: string, param1: string): void;
						/** @deprecated */
						public f(): com.esri.arcgisruntime.internal.d.l.c;
						public c(param0: com.esri.arcgisruntime.internal.d.e): void;
						public a(): com.esri.arcgisruntime.internal.d.af;
						public c(param0: string): com.esri.arcgisruntime.internal.d.e;
						public d(): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public a(param0: native.Array<com.esri.arcgisruntime.internal.d.e>): void;
						public b(param0: string): native.Array<com.esri.arcgisruntime.internal.d.e>;
						public e(): com.esri.arcgisruntime.internal.d.h;
						public a(param0: com.esri.arcgisruntime.internal.d.k): void;
						public c(): com.esri.arcgisruntime.internal.d.ac;
						public a(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class t {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.t>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.t interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.d.af, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.d.af, param1: com.esri.arcgisruntime.internal.d.n.d): com.esri.arcgisruntime.internal.d.s;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class u {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.u>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.u interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.d.s, param1: com.esri.arcgisruntime.internal.d.n.d): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class v extends com.esri.arcgisruntime.internal.d.ac {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.v>;
						public static b: com.esri.arcgisruntime.internal.d.v;
						public static c: com.esri.arcgisruntime.internal.d.v;
						public a(param0: number, param1: number): com.esri.arcgisruntime.internal.d.ac;
						public a(param0: com.esri.arcgisruntime.internal.d.ac): boolean;
						public a(): string;
						public constructor(param0: string, param1: number, param2: number);
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class w {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.w>;
						public constructor();
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class x {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.x>;
						public getMessage(): string;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class y {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.y>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.d.y interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							d(): string;
							e(): string;
						});
						public constructor();
						public d(): string;
						public e(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module d {
					export class z {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.d.z>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export class a extends com.esri.arcgisruntime.security.Credential {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a>;
						public constructor();
						public constructor(param0: string, param1: com.esri.arcgisruntime.security.Credential);
						public a(): string;
						public b(): com.esri.arcgisruntime.security.Credential;
						public toJson(): string;
						public c(): com.esri.arcgisruntime.internal.e.a;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a>;
							public static a(param0: com.esri.arcgisruntime.security.SelfSignedCertificateListener): void;
							public static a(param0: java.io.IOException): boolean;
							public static c(param0: java.io.IOException): boolean;
							public static a(param0: java.security.cert.X509Certificate): boolean;
							public static a(): com.esri.arcgisruntime.security.SelfSignedCertificateListener;
							public checkClientTrusted(param0: native.Array<java.security.cert.X509Certificate>, param1: string): void;
							public static b(param0: java.io.IOException): boolean;
							public checkServerTrusted(param0: native.Array<java.security.cert.X509Certificate>, param1: string): void;
							public static a(param0: boolean): void;
							public static b(): boolean;
							public static b(param0: java.security.cert.X509Certificate): java.lang.Boolean;
							public getAcceptedIssuers(): native.Array<java.security.cert.X509Certificate>;
							public static c(): void;
							public constructor(param0: java.security.KeyStore);
							public static a(param0: java.io.IOException, param1: com.esri.arcgisruntime.security.SelfSignedResponse): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class a extends com.esri.arcgisruntime.internal.e.a.a.c<native.Array<number>> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public a(): native.Array<number>;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: java.util.Map<string,string>, param3: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment);
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class a extends com.esri.arcgisruntime.internal.e.a.a.a.al {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.a>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: string);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class aa {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.aa>;
									public constructor();
									public a(): java.util.List<string>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class ab extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.m> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ab>;
									public a(param0: string): void;
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: java.util.List<java.util.Map.Entry<string,string>>, param1: java.util.List<com.esri.arcgisruntime.internal.d.y>): void;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
									public a(): com.esri.arcgisruntime.internal.e.a.a.a.m;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
									public q(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
									public a(param0: java.io.IOException): boolean;
									public a(param0: com.google.gson.Gson): void;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalItem, param2: string);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
									public a(param0: boolean): void;
									public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class ac extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.ad> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ac>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.util.List<java.util.Map.Entry<string,string>>, param2: string);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class ad {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ad>;
									public constructor();
									public a(): number;
									public b(): number;
									public c(): java.util.List<com.esri.arcgisruntime.portal.PortalItem>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export abstract class ae<T>  extends com.esri.arcgisruntime.internal.e.a.a.c<any> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ae<any>>;
									public i: com.esri.arcgisruntime.portal.Portal;
									public j: java.lang.Class<any>;
									public a(param0: string): void;
									public a(param0: java.util.List<java.util.Map.Entry<string,string>>, param1: java.util.List<com.esri.arcgisruntime.internal.d.y>): void;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
									public s(): string;
									public a(param0: java.io.IOException): boolean;
									public a(param0: com.google.gson.Gson): void;
									public r(): boolean;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
									public a(param0: boolean): void;
									public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
									public d(): any;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class af {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.af>;
									public static a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.portal.PortalItem, param2: boolean): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class ag extends com.esri.arcgisruntime.internal.e.a.a.a.al {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ag>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class ah extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.portal.PortalUserContent> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ah>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: string);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class ai extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.aj> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ai>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalItem);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class aj {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.aj>;
									public constructor();
									public a(): com.esri.arcgisruntime.internal.e.a.a.a.aj.a;
								}
								export module aj {
									export class a {
										public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.aj.a>;
										public b(): java.util.List<string>;
										public a(): com.esri.arcgisruntime.portal.PortalItem.Access;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class ak extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.portal.PortalUser> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.ak>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: com.esri.arcgisruntime.portal.PortalUser);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class al extends com.esri.arcgisruntime.internal.e.a.a.a.ae<native.Array<number>> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.al>;
									public k: string;
									public a(param0: string): void;
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: java.util.List<java.util.Map.Entry<string,string>>, param1: java.util.List<com.esri.arcgisruntime.internal.d.y>): void;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
									public a(param0: java.io.IOException): boolean;
									public a(param0: com.google.gson.Gson): void;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
									public a(param0: boolean): void;
									public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
									public a(): native.Array<number>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class am extends com.esri.arcgisruntime.internal.e.a.a.a.al {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.am>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: string);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class b extends com.esri.arcgisruntime.internal.e.a.a.a.al {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.b>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: string);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class c extends com.esri.arcgisruntime.internal.e.a.a.a.al {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.c>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class d extends com.esri.arcgisruntime.internal.e.a.a.a.ae<string> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.d>;
									public a(): string;
									public a(param0: string): void;
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: java.util.List<java.util.Map.Entry<string,string>>, param1: java.util.List<com.esri.arcgisruntime.internal.d.y>): void;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
									public a(param0: java.io.IOException): boolean;
									public a(param0: com.google.gson.Gson): void;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: boolean);
									public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
									public a(param0: boolean): void;
									public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class e {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.e>;
									public constructor();
									public a(): com.esri.arcgisruntime.portal.PortalFolder;
									public b(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class f extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.e> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.f>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: string);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class g extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.e> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.g>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: string);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class h extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.portal.PortalGroupUsers> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.h>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class i extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.j> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.i>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.util.List<java.util.Map.Entry<string,string>>);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class j {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.j>;
									public c(): java.util.List<com.esri.arcgisruntime.portal.PortalGroup>;
									public a(): number;
									public b(): number;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class k extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.portal.PortalInfo> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.k>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: boolean, param3: string);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class l extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.m> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.l>;
									public a(param0: string): void;
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: string, param3: com.esri.arcgisruntime.portal.PortalItem, param4: com.esri.arcgisruntime.portal.PortalItemContentParameters);
									public a(param0: java.util.List<java.util.Map.Entry<string,string>>, param1: java.util.List<com.esri.arcgisruntime.internal.d.y>): void;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
									public a(): com.esri.arcgisruntime.internal.e.a.a.a.m;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
									public q(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
									public a(param0: java.io.IOException): boolean;
									public a(param0: com.google.gson.Gson): void;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
									public a(param0: boolean): void;
									public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class m {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.m>;
									public constructor();
									public a(): string;
									public b(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class n {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.n>;
									public constructor();
									public a(): java.util.List<com.esri.arcgisruntime.portal.PortalItemComment>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class o extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.n> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.o>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class p extends com.esri.arcgisruntime.internal.e.a.a.a.ae<java.io.InputStream> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.p>;
									public a(param0: string): void;
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: java.util.List<java.util.Map.Entry<string,string>>, param1: java.util.List<com.esri.arcgisruntime.internal.d.y>): void;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
									public a(param0: java.io.IOException): boolean;
									public a(): java.io.InputStream;
									public a(param0: com.google.gson.Gson): void;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
									public a(param0: boolean): void;
									public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class q extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.u> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.q>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: com.esri.arcgisruntime.portal.PortalItem);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class r extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.portal.PortalItemGroups> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.r>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class s extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.t> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.s>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Iterable<com.esri.arcgisruntime.portal.PortalItem>, param3: string);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class t {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.t>;
									public a(): java.util.List<com.esri.arcgisruntime.internal.e.a.a.a.u>;
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class u {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.u>;
									public constructor();
									public a(): com.esri.arcgisruntime.portal.PortalItemMoveError;
									public b(): string;
									public c(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class v extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.u> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.v>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: com.esri.arcgisruntime.portal.PortalItem, param3: string);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class w extends com.esri.arcgisruntime.internal.e.a.a.a.ae<native.Array<number>> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.w>;
									public a(param0: string): void;
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: java.util.List<java.util.Map.Entry<string,string>>, param1: java.util.List<com.esri.arcgisruntime.internal.d.y>): void;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
									public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
									public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
									public a(param0: java.io.IOException): boolean;
									public a(param0: com.google.gson.Gson): void;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
									public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
									public a(param0: boolean): void;
									public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
									public a(): native.Array<number>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class x extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.y> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.x>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalItem, param2: boolean, param3: boolean);
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalItem, param2: java.lang.Iterable<string>);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class y {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.y>;
									public constructor();
									public a(): java.util.List<string>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export module a {
								export class z extends com.esri.arcgisruntime.internal.e.a.a.a.ae<com.esri.arcgisruntime.internal.e.a.a.a.aa> {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.a.z>;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: java.lang.Class<any>);
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: boolean, param3: java.lang.Class<any>);
									public b(): com.esri.arcgisruntime.internal.e.a.f;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string, param2: java.lang.Class<any>);
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalItem, param2: java.lang.Iterable<string>);
									public b(param0: boolean): void;
									public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class b extends com.esri.arcgisruntime.internal.e.a.a.c<com.esri.arcgisruntime.internal.e.a.a.e> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.b>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: java.util.Map<string,string>);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public a(): com.esri.arcgisruntime.internal.e.a.a.e;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export abstract class c<T>  extends java.lang.Object {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.c<any>>;
								public n(): boolean;
								public a(param0: boolean): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public j(): com.esri.arcgisruntime.internal.e.a.a.e;
								public c(): string;
								public p(): boolean;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public static f(): com.esri.arcgisruntime.internal.e.a.a.k;
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public d(): T;
								public g(): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public static m(): string;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public e(): com.esri.arcgisruntime.concurrent.ListenableFuture<T>;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public k(): string;
								public a(param0: string): void;
								public h(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public i(): native.Array<number>;
								public l(): com.esri.arcgisruntime.io.RequestConfiguration;
								public o(): string;
							}
							export module c {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.c.a>;
									public static a: com.esri.arcgisruntime.internal.e.a.a.c.a;
									public static b: com.esri.arcgisruntime.internal.e.a.a.c.a;
									public static c: com.esri.arcgisruntime.internal.e.a.a.c.a;
									public static d: com.esri.arcgisruntime.internal.e.a.a.c.a;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.e.a.a.c.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.e.a.a.c.a>;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class d extends com.esri.arcgisruntime.internal.e.a.a.c<java.io.InputStream> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.d>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: java.util.Map<string,string>, param3: boolean, param4: com.esri.arcgisruntime.internal.e.a.a.l);
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public a(): java.io.InputStream;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.e>;
								public constructor(param0: native.Array<com.esri.arcgisruntime.internal.d.e>, param1: native.Array<number>);
								public b(): native.Array<number>;
								public a(): native.Array<com.esri.arcgisruntime.internal.d.e>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class f extends com.esri.arcgisruntime.internal.d.k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.f>;
								public constructor(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>);
								public c(): number;
								public g(): boolean;
								public a(param0: java.io.OutputStream): void;
								public b(): boolean;
								public f(): java.io.InputStream;
								public a(param0: string, param1: string, param2: string, param3: native.Array<number>): void;
								public e(): com.esri.arcgisruntime.internal.d.e;
								public a(): boolean;
								public d(): com.esri.arcgisruntime.internal.d.e;
							}
							export module f {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.f.a>;
									public a(): string;
									public d(): native.Array<number>;
									public c(): string;
									public constructor(param0: string, param1: string, param2: string, param3: native.Array<number>);
									public b(): string;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class g extends com.esri.arcgisruntime.internal.e.a.a.c<java.lang.Boolean> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.g>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public a(param0: java.io.IOException): boolean;
								public a(): java.lang.Boolean;
								public b(param0: boolean): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: string, param3: com.esri.arcgisruntime.internal.e.a.a.g.a);
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
							export module g {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.g.a>;
									public static a: com.esri.arcgisruntime.internal.e.a.a.g.a;
									public static b: com.esri.arcgisruntime.internal.e.a.a.g.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.e.a.a.g.a>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.e.a.a.g.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class h extends com.esri.arcgisruntime.internal.e.a.a.c<com.esri.arcgisruntime.security.OAuthTokenCredential> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.h>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: string, param3: string, param4: com.esri.arcgisruntime.internal.e.a.a.h.a, param5: number);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public a(): com.esri.arcgisruntime.security.OAuthTokenCredential;
								public static a(param0: string, param1: string, param2: string, param3: number): string;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
							export module h {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.h.a>;
									public static a: com.esri.arcgisruntime.internal.e.a.a.h.a;
									public static b: com.esri.arcgisruntime.internal.e.a.a.h.a;
									public static c: com.esri.arcgisruntime.internal.e.a.a.h.a;
									public static values(): native.Array<com.esri.arcgisruntime.internal.e.a.a.h.a>;
									public static valueOf(param0: string): com.esri.arcgisruntime.internal.e.a.a.h.a;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class i extends com.esri.arcgisruntime.internal.e.a.a.c<native.Array<number>> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.i>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public a(): native.Array<number>;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public a(param0: java.io.IOException): boolean;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: native.Array<number>, param3: string);
								public b(param0: boolean): void;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class j {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.j>;
								public static a(): com.esri.arcgisruntime.io.JsonEmbeddedException;
								public static a(param0: java.lang.Exception): boolean;
								public static b(param0: java.io.IOException): boolean;
								public static g(param0: string): void;
								public static a(param0: java.net.URL): string;
								public static a(param0: java.io.IOException, param1: string): com.esri.arcgisruntime.security.AuthenticationType;
								public static c(param0: string): string;
								public static d(param0: string): com.esri.arcgisruntime.security.AuthenticationType;
								public static a(param0: string, param1: com.esri.arcgisruntime.io.HttpResponseException, param2: java.util.Map<string,string>): string;
								public static a(param0: number, param1: string): void;
								public static c(param0: java.lang.Exception): boolean;
								public static j(param0: string): boolean;
								public static e(param0: string): string;
								public static b(param0: java.lang.Exception): boolean;
								public static a(param0: com.esri.arcgisruntime.security.Credential, param1: com.esri.arcgisruntime.io.RequestConfiguration): string;
								public static a(param0: string, param1: boolean): com.esri.arcgisruntime.security.AuthenticationType;
								public static f(param0: string): void;
								public static a(param0: string, param1: string): boolean;
								public static k(param0: string): string;
								public static b(param0: string): string;
								public static a(param0: java.io.IOException): boolean;
								public static i(param0: string): string;
								public static h(param0: string): boolean;
								public static a(param0: com.esri.arcgisruntime.security.Credential): boolean;
								public static a(param0: string): string;
								public static a(param0: com.esri.arcgisruntime.security.AuthenticationType): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class k {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.k>;
								public a(param0: com.esri.arcgisruntime.internal.e.a.f): native.Array<number>;
								public c(param0: com.esri.arcgisruntime.internal.e.a.f): com.esri.arcgisruntime.internal.e.a.a.e;
								public constructor();
								public b(param0: com.esri.arcgisruntime.internal.e.a.f): string;
								public a(param0: com.esri.arcgisruntime.internal.e.a.f, param1: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class l {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.l>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.e.a.a.l interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									a(param0: com.esri.arcgisruntime.internal.d.s): void;
								});
								public constructor();
								public a(param0: com.esri.arcgisruntime.internal.d.s): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class m<V>  extends java.lang.Object {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.m<any>>;
								public c(param0: string): string;
								public a(param0: string): V;
								public constructor(param0: number, param1: number, param2: number);
								public a(): void;
								public b(): java.util.Set<java.util.Map.Entry<string,V>>;
								public a(param0: string, param1: V): V;
								public b(param0: string): V;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class n extends com.esri.arcgisruntime.internal.e.a.a.c<com.esri.arcgisruntime.internal.e.b> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.n>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public a(): com.esri.arcgisruntime.internal.e.b;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class o extends com.esri.arcgisruntime.internal.e.a.a.c<any> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.o>;
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public a(): com.esri.arcgisruntime.internal.m.h;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: string, param3: com.esri.arcgisruntime.internal.e.a);
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
							export module o {
								export class a {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.o.a>;
									public b(): boolean;
									public a(): boolean;
									public c(): string;
									public constructor(param0: com.esri.arcgisruntime.internal.e.a.a.o, param1: boolean, param2: boolean, param3: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export module a {
							export class p extends com.esri.arcgisruntime.internal.e.a.a.c<native.Array<number>> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.a.p>;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: java.util.Map<string,string>, param3: boolean);
								public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): string;
								public b(): com.esri.arcgisruntime.internal.e.a.f;
								public a(): native.Array<number>;
								public static a(param0: java.util.Map<string,string>): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: boolean): void;
								public a(param0: string): void;
								public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string);
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: com.esri.arcgisruntime.internal.jni.CoreRequestAttachment): com.esri.arcgisruntime.internal.e.a.f;
								public c(): string;
								public a(param0: java.util.List<com.esri.arcgisruntime.internal.d.y>, param1: boolean): com.esri.arcgisruntime.internal.e.a.f;
								public a(param0: java.io.IOException): boolean;
								public b(param0: boolean): void;
								public a(param0: com.esri.arcgisruntime.internal.e.a.a.l): java.io.InputStream;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.b>;
							public static a(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export class c extends com.esri.arcgisruntime.internal.d.e.c.j {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.c>;
							public constructor();
							public a(param0: string, param1: java.security.cert.X509Certificate): void;
							public static a(param0: java.security.cert.X509Certificate): native.Array<string>;
							public a(param0: string, param1: native.Array<string>, param2: native.Array<string>): void;
							public a(param0: string, param1: native.Array<string>, param2: native.Array<string>, param3: boolean): void;
							public verify(param0: string, param1: javax.net.ssl.SSLSession): boolean;
							public static c(param0: string): number;
						}
						export module c {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.c.a>;
								public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): java.util.List<com.esri.arcgisruntime.internal.d.y>;
								public a(param0: string): java.util.List<com.esri.arcgisruntime.internal.d.y>;
							}
							export module a {
								export class a extends com.esri.arcgisruntime.internal.e.a.c.b {
									public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.c.a.a>;
									public static a(param0: native.Array<number>): java.util.BitSet;
									public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): void;
									public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.lang.StringBuilder): void;
									public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet, param3: java.lang.StringBuilder): void;
									public static a(param0: string): boolean;
									public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet): string;
								}
							}
							export class b {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.c.b>;
								public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet): string;
								public static a(param0: native.Array<number>): java.util.BitSet;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v): void;
								public b(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet, param3: java.lang.StringBuilder): void;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet): string;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.util.BitSet, param3: java.lang.StringBuilder): void;
								public static a(param0: string): boolean;
								public a(param0: com.esri.arcgisruntime.internal.d.p.d, param1: com.esri.arcgisruntime.internal.d.k.v, param2: java.lang.StringBuilder): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.d>;
							public static a(param0: com.esri.arcgisruntime.internal.m.b): void;
							public static d(): void;
							public static a(param0: string, param1: java.security.Key, param2: native.Array<java.security.cert.Certificate>): void;
							public static d(param0: string): void;
							public static a(param0: com.esri.arcgisruntime.internal.e.a.f): com.esri.arcgisruntime.internal.d.s;
							public static a(param0: string): com.esri.arcgisruntime.internal.d.b.h;
							public static a(param0: string, param1: com.esri.arcgisruntime.security.Credential): boolean;
							public static b(param0: string): void;
							public static c(param0: string): void;
							public static b(): void;
							public static c(): void;
							public static a(param0: java.security.KeyStore, param1: string, param2: java.security.KeyStore): void;
							public static a(param0: string, param1: number, param2: string, param3: com.esri.arcgisruntime.security.UserCredential): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export class e {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.e>;
							public static a(): com.esri.arcgisruntime.internal.d.b.b.a;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export class f {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.f>;
							public constructor();
							public static a(param0: string): com.esri.arcgisruntime.internal.e.a.f;
							public a(): com.esri.arcgisruntime.internal.d.b.b.a;
							public static a(param0: string, param1: com.esri.arcgisruntime.internal.d.k): com.esri.arcgisruntime.internal.e.a.f;
							public a(param0: java.lang.Iterable<com.esri.arcgisruntime.internal.d.y>, param1: java.nio.charset.Charset): com.esri.arcgisruntime.internal.e.a.f;
							public a(param0: string, param1: string): com.esri.arcgisruntime.internal.e.a.f;
							public toString(): string;
							public static b(param0: string): com.esri.arcgisruntime.internal.e.a.f;
							public b(): com.esri.arcgisruntime.internal.d.b.d.k;
							public a(param0: java.lang.Iterable<com.esri.arcgisruntime.internal.d.y>): com.esri.arcgisruntime.internal.e.a.f;
							public a(param0: com.esri.arcgisruntime.io.RequestConfiguration): com.esri.arcgisruntime.internal.e.a.f;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module a {
						export class g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.a.g>;
							public static a(param0: java.security.KeyStore, param1: string, param2: java.security.KeyStore): javax.net.ssl.SSLContext;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.b>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.e.b.a;
						public a(): string;
						public b(): string;
						public a(param0: boolean): boolean;
					}
					export module b {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.b.a>;
							public a(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export module b {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.b.a>;
							public constructor(param0: com.esri.arcgisruntime.io.RemoteResource, param1: string, param2: java.util.Map<string,string>, param3: string);
							public a(): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
							public a(param0: com.esri.arcgisruntime.internal.e.b.a.a): void;
						}
						export module a {
							export class a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.b.a.a>;
								/**
								 * Constructs a new instance of the com.esri.arcgisruntime.internal.e.b.a$a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									reportProgress(param0: number, param1: number): void;
								});
								public constructor();
								public reportProgress(param0: number, param1: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module e {
					export class c extends com.esri.arcgisruntime.io.RemoteResource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.e.c>;
						public constructor(param0: string, param1: com.esri.arcgisruntime.security.Credential, param2: com.esri.arcgisruntime.io.RequestConfiguration);
						public getUri(): string;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module f {
					export class a extends com.esri.arcgisruntime.layers.LayerContent {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.f.a>;
						public canShowInLegend(): boolean;
						public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
						public constructor(param0: com.esri.arcgisruntime.layers.LayerContent, param1: com.esri.arcgisruntime.internal.jni.dr);
						public canChangeVisibility(): boolean;
						public isVisibleAtScale(param0: number): boolean;
						public isVisible(): boolean;
						public setCanShowInLegend(param0: boolean): void;
						public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
						public setVisible(param0: boolean): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module g {
					export abstract class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.g.a>;
						public constructor(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener);
						public a(): com.esri.arcgisruntime.loadable.LoadStatusChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module g {
					export class b extends com.esri.arcgisruntime.internal.g.a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.g.b>;
						public constructor(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module g {
					export class c extends com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.g.c>;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public constructor(param0: com.esri.arcgisruntime.loadable.Loadable, param1: com.esri.arcgisruntime.internal.jni.ee, param2: com.esri.arcgisruntime.internal.jni.gd);
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public loadAsync(): void;
						public retryLoadAsync(): void;
						public a(param0: java.lang.Runnable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module g {
					export class d {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.g.d>;
						public static a(param0: com.esri.arcgisruntime.ArcGISRuntimeException): java.lang.Throwable;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export abstract class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.a>;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedListener);
						public a(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedEvent): void;
						public a(): com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module a {
						export class a extends com.esri.arcgisruntime.internal.jni.ee {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.a.a>;
							public constructor();
							public g(): void;
							public a(): void;
							public a(param0: java.lang.Throwable): void;
							public j(): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
							public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
							public c(): void;
							public g_(): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
							public f(): void;
							public f_(): com.esri.arcgisruntime.internal.jni.ec;
							public b(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module a {
						export class b extends com.esri.arcgisruntime.internal.jni.CoreRequest {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.a.b>;
							public constructor();
							public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
							public c(): java.lang.Long;
							public onCancelRequest(): void;
							public b(): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export class b extends com.esri.arcgisruntime.internal.h.a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b>;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedListener);
						public a(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedEvent): void;
						public a(): com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.a>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener;
							public a(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedEvent): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class aa extends com.esri.arcgisruntime.internal.h.b.z {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.aa>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class ab {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.ab>;
							public c(): java.util.Map<string,any>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.Graphic);
							public hashCode(): number;
							public e(): number;
							public a(param0: com.esri.arcgisruntime.symbology.Symbol): void;
							public b(): com.esri.arcgisruntime.geometry.Point;
							public a(param0: boolean): void;
							public g(): com.esri.arcgisruntime.mapping.view.SketchVertex;
							public d(): number;
							public f(): number;
							public a(param0: com.esri.arcgisruntime.mapping.view.Graphic): boolean;
							public b(param0: boolean): void;
							public equals(param0: any): boolean;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.SketchVertex, param1: com.esri.arcgisruntime.mapping.view.Graphic);
							public a(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class ac extends com.esri.arcgisruntime.internal.h.b.y {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.ac>;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.internal.h.b.y.d>;
							public a(param0: number): void;
							public a(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number): com.esri.arcgisruntime.mapping.view.Graphic;
							public e(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: com.esri.arcgisruntime.internal.h.b.ab): boolean;
							public d(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public c(): void;
							public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							public c(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public a(param0: number, param1: number): void;
							public u(): com.esri.arcgisruntime.mapping.view.Graphic;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public c(param0: number, param1: number): void;
							public d(param0: number, param1: number): boolean;
							public b(param0: number, param1: number): void;
							public a(param0: number, param1: number, param2: number): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public a(param0: number, param1: number, param2: boolean): boolean;
							public e(): void;
							public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public d(): com.esri.arcgisruntime.geometry.Geometry;
							public a(): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public b(param0: number, param1: number): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.GeometryType): com.esri.arcgisruntime.symbology.Symbol;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): com.esri.arcgisruntime.mapping.view.Graphic;
							public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>, param1: native.Array<number>): com.esri.arcgisruntime.internal.h.b.y.d;
							public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
							public e(param0: number, param1: number): com.esri.arcgisruntime.geometry.Point;
							public b(): com.esri.arcgisruntime.geometry.GeometryType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class ad {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.ad>;
							public a(): number;
							public static a(param0: com.esri.arcgisruntime.internal.jni.CoreInsets): com.esri.arcgisruntime.internal.h.b.ad;
							public c(): number;
							public b(): number;
							public d(): com.esri.arcgisruntime.internal.jni.CoreInsets;
							public constructor(param0: number, param1: number, param2: number, param3: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class ae {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.ae>;
							public a(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedEvent): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.ViewpointChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class af extends com.esri.arcgisruntime.internal.h.b.ae {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.af>;
							public a(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedEvent): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.ViewpointChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class b extends com.esri.arcgisruntime.internal.h.b.a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.b>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener;
							public a(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedEvent): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.c>;
							public static b(param0: number, param1: number): number;
							public static a(param0: globalAndroid.content.Context, param1: number): globalAndroid.graphics.drawable.BitmapDrawable;
							public static a(param0: number, param1: number): number;
							public static b(param0: globalAndroid.content.Context): number;
							public static a(param0: globalAndroid.content.Context): globalAndroid.util.DisplayMetrics;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.d>;
							public a(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedEvent): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class e extends com.esri.arcgisruntime.internal.h.b.d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.e>;
							public a(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedEvent): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class f extends com.esri.arcgisruntime.internal.h.b.y {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.f>;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.internal.h.b.y.d>;
							public a(param0: number): void;
							public e(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: com.esri.arcgisruntime.internal.h.b.ab): boolean;
							public d(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public c(): void;
							public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public c(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: number, param1: number): void;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
							public a(param0: number, param1: number, param2: number): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public a(param0: number, param1: number, param2: boolean): boolean;
							public e(): void;
							public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(): void;
							public d(): com.esri.arcgisruntime.geometry.Geometry;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public b(param0: number, param1: number): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.GeometryType): com.esri.arcgisruntime.symbology.Symbol;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): com.esri.arcgisruntime.mapping.view.Graphic;
							public a(param0: java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>, param1: native.Array<number>): com.esri.arcgisruntime.internal.h.b.y.d;
							public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
							public e(param0: number, param1: number): com.esri.arcgisruntime.geometry.Point;
							public b(): com.esri.arcgisruntime.geometry.GeometryType;
						}
						export module f {
							export class a extends com.esri.arcgisruntime.internal.h.b.f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.f.a>;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
								public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
								public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
								public b(param0: number, param1: number): boolean;
								public b(): com.esri.arcgisruntime.geometry.GeometryType;
								public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
								public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							}
							export class b extends com.esri.arcgisruntime.internal.h.b.f {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.f.b>;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
								public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
								public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
								public b(param0: number, param1: number): boolean;
								public b(): com.esri.arcgisruntime.geometry.GeometryType;
								public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
								public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.g>;
							public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
							public i(): com.esri.arcgisruntime.mapping.TimeExtent;
							public a(param0: native.Array<number>): void;
							public b(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
							public a(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
							public a(param0: boolean): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): void;
							public k(): void;
							public a(param0: com.esri.arcgisruntime.layers.Layer): java.util.EnumSet<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
							public g(): boolean;
							public b(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): boolean;
							public a(): com.esri.arcgisruntime.mapping.view.DrawStatus;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint): void;
							public a(param0: com.esri.arcgisruntime.layers.Layer, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
							public b(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.TimeExtent): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.Bookmark): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): boolean;
							public l(): void;
							public b(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint.Type): com.esri.arcgisruntime.mapping.Viewpoint;
							public b(param0: boolean): void;
							public d(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
							public a(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public a(param0: number, param1: number): void;
							public e(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
							public h(): com.esri.arcgisruntime.internal.jni.CoreTask;
							public b(param0: native.Array<number>): void;
							public a(param0: com.esri.arcgisruntime.layers.Layer, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
							public a(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): void;
							public j(): com.esri.arcgisruntime.mapping.SelectionProperties;
							public a(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
							public d(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.jni.ao): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): boolean;
							public b(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
							public f(): string;
							public c(): boolean;
							public b(param0: com.esri.arcgisruntime.mapping.Viewpoint): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(): boolean;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView, param1: com.esri.arcgisruntime.internal.jni.CoreGeoView, param2: number);
							public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public c(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
						}
						export module g {
							export class a extends com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.GraphicsOverlay> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.g.a>;
								public removeAll(param0: java.util.Collection<any>): boolean;
								public toArray(): native.Array<any>;
								public size(): number;
								public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
								public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay): boolean;
								public b(param0: number, param1: com.esri.arcgisruntime.mapping.view.GraphicsOverlay): com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
								public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>): boolean;
								public remove(param0: any): boolean;
								public listIterator(): java.util.ListIterator<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
								public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
								public addAll(param0: number, param1: java.util.Collection<any>): boolean;
								public a(param0: number, param1: com.esri.arcgisruntime.mapping.view.GraphicsOverlay): void;
								public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>): void;
								public lastIndexOf(param0: any): number;
								public subList(param0: number, param1: number): java.util.List<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
								public listIterator(param0: number): java.util.ListIterator<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
								public addAll(param0: java.util.Collection<any>): boolean;
								public containsAll(param0: java.util.Collection<any>): boolean;
								public b(param0: number): com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
								public indexOf(param0: any): number;
								public iterator(): java.util.Iterator<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
								public clear(): void;
								public toArray(param0: native.Array<any>): native.Array<any>;
								public retainAll(param0: java.util.Collection<any>): boolean;
								public isEmpty(): boolean;
								public a(param0: number): com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
								public contains(param0: any): boolean;
							}
							export class b extends com.esri.arcgisruntime.internal.b.b<java.lang.Boolean> {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.g.b>;
								public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTask);
								public removeDoneListener(param0: java.lang.Runnable): boolean;
								public a(param0: java.lang.Runnable): void;
								public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): java.lang.Boolean;
								public addDoneListener(param0: java.lang.Runnable): void;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.g, param1: com.esri.arcgisruntime.internal.jni.CoreTask);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.h>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class i extends com.esri.arcgisruntime.internal.h.b.h {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.i>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class j<L, E>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.j<any,any>>;
							public constructor(param0: L);
							public a(): L;
							public static a(param0: java.util.List, param1: any): boolean;
							public a(param0: E): void;
							public b(param0: E): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.k>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.MapRotationChangedListener;
							public a(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedEvent): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class l extends com.esri.arcgisruntime.internal.h.b.k {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.l>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedListener);
							public a(): com.esri.arcgisruntime.mapping.view.MapRotationChangedListener;
							public a(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedEvent): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class m {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.m>;
							public a(): com.esri.arcgisruntime.mapping.view.MapScaleChangedListener;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedEvent): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class n extends com.esri.arcgisruntime.internal.h.b.m {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.n>;
							public a(): com.esri.arcgisruntime.mapping.view.MapScaleChangedListener;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedEvent): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class o extends com.esri.arcgisruntime.internal.h.b.g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.o>;
							public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
							public a(param0: com.esri.arcgisruntime.internal.jni.CoreImage, param1: com.esri.arcgisruntime.internal.jni.CoreImage): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.MapView, param1: com.esri.arcgisruntime.internal.jni.CoreMapView);
							public a(param0: native.Array<number>): void;
							public n(): com.esri.arcgisruntime.mapping.view.WrapAroundMode;
							public D(): com.esri.arcgisruntime.internal.jni.CoreMapView;
							public b(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
							public a(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedListener): void;
							public a(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
							public t(): boolean;
							public a(param0: boolean): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): void;
							public s(): com.esri.arcgisruntime.mapping.view.BackgroundGrid;
							public a(param0: number, param1: number, param2: number, param3: number): void;
							public B(): com.esri.arcgisruntime.mapping.view.Grid;
							public m(): com.esri.arcgisruntime.geometry.SpatialReference;
							public x(): boolean;
							public a(param0: com.esri.arcgisruntime.layers.Layer): java.util.EnumSet<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
							public b(param0: number, param1: number): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedListener): void;
							public a(): com.esri.arcgisruntime.mapping.view.DrawStatus;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): boolean;
							public p(): number;
							public a(param0: com.esri.arcgisruntime.layers.Layer, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
							public a(param0: com.esri.arcgisruntime.mapping.TimeExtent): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay): void;
							public a(param0: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): boolean;
							public d(param0: boolean): void;
							public a(param0: com.esri.arcgisruntime.mapping.Bookmark): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): void;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public v(): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.view.BackgroundGrid): void;
							public a(param0: com.esri.arcgisruntime.geometry.Point, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public l(): void;
							public u(): com.esri.arcgisruntime.mapping.ArcGISMap;
							public a(param0: number, param1: native.Array<number>): void;
							public b(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public e(param0: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public a(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): void;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint.Type): com.esri.arcgisruntime.mapping.Viewpoint;
							public b(param0: boolean): void;
							public a(param0: com.esri.arcgisruntime.mapping.ArcGISMap): void;
							public d(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public y(): com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
							public C(): com.esri.arcgisruntime.mapping.view.ViewLabelProperties;
							public b(param0: com.esri.arcgisruntime.geometry.Point): native.Array<number>;
							public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
							public a(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): void;
							public o(): number;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint, param1: number, param2: com.esri.arcgisruntime.mapping.view.AnimationCurve): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public a(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): void;
							public b(param0: number, param1: native.Array<number>): void;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public a(param0: number, param1: number): void;
							public r(): com.esri.arcgisruntime.geometry.Polygon;
							public w(): com.esri.arcgisruntime.internal.jni.CoreLocationDisplay;
							public e(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
							public b(param0: native.Array<number>): void;
							public a(param0: com.esri.arcgisruntime.layers.Layer, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
							public a(param0: com.esri.arcgisruntime.mapping.view.Grid): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): void;
							public a(param0: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public a(param0: com.esri.arcgisruntime.mapping.view.ViewLabelProperties): void;
							public d(param0: native.Array<number>): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.WrapAroundMode): void;
							public b(param0: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public a(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
							public d(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.jni.ao): void;
							public q(): number;
							public b(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): boolean;
							public b(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
							public c(param0: boolean): void;
							public c(param0: native.Array<number>): void;
							public c(): boolean;
							public b(param0: com.esri.arcgisruntime.mapping.Viewpoint): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(): boolean;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView, param1: com.esri.arcgisruntime.internal.jni.CoreGeoView, param2: number);
							public b(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedListener): boolean;
							public A(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public c(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public z(): com.esri.arcgisruntime.internal.h.b.ad;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class p extends com.esri.arcgisruntime.internal.h.b.ac {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.p>;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.internal.h.b.y.d>;
							public a(param0: number): void;
							public a(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number): com.esri.arcgisruntime.mapping.view.Graphic;
							public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: com.esri.arcgisruntime.internal.h.b.ab): boolean;
							public d(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public c(): void;
							public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							public c(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public a(param0: number, param1: number): void;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
							public c(param0: number, param1: number): void;
							public d(param0: number, param1: number): boolean;
							public b(param0: number, param1: number): void;
							public a(param0: number, param1: number, param2: number): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public a(param0: number, param1: number, param2: boolean): boolean;
							public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(): void;
							public d(): com.esri.arcgisruntime.geometry.Geometry;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public b(param0: number, param1: number): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.GeometryType): com.esri.arcgisruntime.symbology.Symbol;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): com.esri.arcgisruntime.mapping.view.Graphic;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(param0: java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>, param1: native.Array<number>): com.esri.arcgisruntime.internal.h.b.y.d;
							public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
							public b(): com.esri.arcgisruntime.geometry.GeometryType;
						}
						export module p {
							export class a extends com.esri.arcgisruntime.internal.h.b.p {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.p.a>;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
								public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
								public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
								public b(param0: number, param1: number): void;
								public b(param0: number, param1: number): boolean;
								public b(): com.esri.arcgisruntime.geometry.GeometryType;
								public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
								public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							}
							export class b extends com.esri.arcgisruntime.internal.h.b.p {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.p.b>;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
								public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
								public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
								public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
								public b(param0: number, param1: number): void;
								public b(param0: number, param1: number): boolean;
								public b(): com.esri.arcgisruntime.geometry.GeometryType;
								public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
								public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class q extends com.esri.arcgisruntime.internal.h.b.ac {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.q>;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.internal.h.b.y.d>;
							public a(param0: number): void;
							public a(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number): com.esri.arcgisruntime.mapping.view.Graphic;
							public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: com.esri.arcgisruntime.internal.h.b.ab): boolean;
							public d(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public c(): void;
							public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public c(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: number, param1: number): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public c(param0: number, param1: number): void;
							public d(param0: number, param1: number): boolean;
							public b(param0: number, param1: number): void;
							public a(param0: number, param1: number, param2: number): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public a(param0: number, param1: number, param2: boolean): boolean;
							public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(): void;
							public d(): com.esri.arcgisruntime.geometry.Geometry;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public b(param0: number, param1: number): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.GeometryType): com.esri.arcgisruntime.symbology.Symbol;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): com.esri.arcgisruntime.mapping.view.Graphic;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>, param1: native.Array<number>): com.esri.arcgisruntime.internal.h.b.y.d;
							public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
							public b(): com.esri.arcgisruntime.geometry.GeometryType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class r {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.r>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.NavigationChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class s extends com.esri.arcgisruntime.internal.h.b.r {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.s>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.NavigationChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class t<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.t<any>>;
							public a(): com.esri.arcgisruntime.internal.jni.al;
							public a(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<T>): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<T>): boolean;
							public b(): com.esri.arcgisruntime.internal.jni.ck;
							public constructor(param0: T);
							public b(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<T>): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<T>): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<T>): boolean;
							public c(): com.esri.arcgisruntime.internal.jni.fd;
							public a(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<T>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class u extends com.esri.arcgisruntime.internal.h.b.ac {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.u>;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.internal.h.b.y.d>;
							public a(param0: number): void;
							public a(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number): com.esri.arcgisruntime.mapping.view.Graphic;
							public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: com.esri.arcgisruntime.internal.h.b.ab): boolean;
							public d(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public c(): void;
							public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public c(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: number, param1: number): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public c(param0: number, param1: number): void;
							public d(param0: number, param1: number): boolean;
							public b(param0: number, param1: number): void;
							public a(param0: number, param1: number, param2: number): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public a(param0: number, param1: number, param2: boolean): boolean;
							public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(): void;
							public d(): com.esri.arcgisruntime.geometry.Geometry;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public b(param0: number, param1: number): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.GeometryType): com.esri.arcgisruntime.symbology.Symbol;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): com.esri.arcgisruntime.mapping.view.Graphic;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>, param1: native.Array<number>): com.esri.arcgisruntime.internal.h.b.y.d;
							public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
							public b(): com.esri.arcgisruntime.geometry.GeometryType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class v extends com.esri.arcgisruntime.internal.h.b.g {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.v>;
							public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
							public p(): com.esri.arcgisruntime.geometry.SpatialReference;
							public a(param0: native.Array<number>): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.SceneView, param1: com.esri.arcgisruntime.internal.jni.CoreSceneView);
							public b(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
							public a(param0: com.esri.arcgisruntime.mapping.view.CameraController): void;
							public a(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
							public e(param0: native.Array<number>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.geometry.Point>;
							public a(param0: boolean): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.Camera): void;
							public a(param0: com.esri.arcgisruntime.layers.Layer): java.util.EnumSet<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
							public b(param0: number, param1: number): void;
							public a(): com.esri.arcgisruntime.mapping.view.DrawStatus;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.layers.Layer, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
							public a(param0: com.esri.arcgisruntime.mapping.TimeExtent): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): boolean;
							public b(param0: com.esri.arcgisruntime.mapping.view.Camera): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public t(): com.esri.arcgisruntime.mapping.view.LightingMode;
							public b(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.Bookmark): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): boolean;
							public m(): com.esri.arcgisruntime.mapping.ArcGISScene;
							public a(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.ArcGISScene): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): boolean;
							public d(param0: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public l(): void;
							public b(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint.Type): com.esri.arcgisruntime.mapping.Viewpoint;
							public b(param0: boolean): void;
							public d(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public v(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.AnalysisOverlay>;
							public s(): java.util.Calendar;
							public a(param0: number): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
							public u(): com.esri.arcgisruntime.mapping.view.CameraController;
							public a(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): void;
							public r(): com.esri.arcgisruntime.mapping.view.AtmosphereEffect;
							public a(param0: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.mapping.view.LocationToScreenResult;
							public o(): void;
							public a(param0: com.esri.arcgisruntime.mapping.Viewpoint, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public a(param0: java.util.Calendar): void;
							public a(param0: number, param1: number): void;
							public e(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
							public b(param0: native.Array<number>): void;
							public n(): com.esri.arcgisruntime.mapping.view.Camera;
							public a(param0: com.esri.arcgisruntime.mapping.view.AtmosphereEffect): void;
							public a(param0: com.esri.arcgisruntime.layers.Layer, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
							public a(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): void;
							public w(): com.esri.arcgisruntime.mapping.view.SpaceEffect;
							public a(param0: com.esri.arcgisruntime.mapping.view.LightingMode): void;
							public a(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
							public d(): boolean;
							public a(param0: com.esri.arcgisruntime.internal.jni.ao): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.in): void;
							public q(): number;
							public b(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): boolean;
							public b(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
							public c(param0: native.Array<number>): void;
							public c(): boolean;
							public b(param0: com.esri.arcgisruntime.mapping.Viewpoint): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public b(): boolean;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView, param1: com.esri.arcgisruntime.internal.jni.CoreGeoView, param2: number);
							public a(param0: com.esri.arcgisruntime.mapping.view.Camera, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
							public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public c(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.SpaceEffect): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class w {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.w>;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.internal.h.b.y.d>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.SketchEditor);
							public a(param0: number): void;
							public e(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public n(): boolean;
							public h(): com.esri.arcgisruntime.mapping.view.SketchStyle;
							public l(): com.esri.arcgisruntime.mapping.view.SketchVertex;
							public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public o(): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchCreationMode, param1: com.esri.arcgisruntime.mapping.view.SketchEditConfiguration): void;
							public d(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public j(): com.esri.arcgisruntime.mapping.view.SketchEditConfiguration;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): void;
							public a(param0: boolean): void;
							public m(): com.esri.arcgisruntime.geometry.Geometry;
							public c(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public k(): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
							public r(): void;
							public g(): com.esri.arcgisruntime.mapping.view.SketchCreationMode;
							public d(): void;
							public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public p(): void;
							public a(param0: com.esri.arcgisruntime.internal.p.g.a): void;
							public a(): void;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.mapping.view.SketchCreationMode, param2: com.esri.arcgisruntime.mapping.view.SketchEditConfiguration): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SelectedVertexChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchStyle): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public e(): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchGeometryChangedListener): boolean;
							public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.mapping.view.SketchCreationMode): void;
							public a(param0: com.esri.arcgisruntime.internal.h.b.o): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchCreationMode): void;
							public c(): boolean;
							public f(): number;
							public s(): boolean;
							public b(): boolean;
							public t(): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.SelectedVertexChangedListener): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchGeometryChangedListener): void;
							public q(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export class x {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.x>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class y {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y>;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.internal.h.b.y.d>;
							public k(): com.esri.arcgisruntime.mapping.view.SketchVertex;
							public a(param0: number): void;
							public e(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: com.esri.arcgisruntime.internal.h.b.ab): boolean;
							public d(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public c(): void;
							public l(): boolean;
							public t(): boolean;
							public b(param0: com.esri.arcgisruntime.internal.h.b.ab): void;
							public o(): com.esri.arcgisruntime.geometry.MultipartBuilder;
							public c(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry, param1: native.Array<number>): com.esri.arcgisruntime.geometry.Point;
							public a(param0: number, param1: number): void;
							public f(): boolean;
							public b(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
							public a(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public m(): number;
							public h(): void;
							public g(): boolean;
							public a(param0: number, param1: number, param2: number): void;
							public n(): com.esri.arcgisruntime.mapping.view.Graphic;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.geometry.Point): void;
							public a(param0: number, param1: number, param2: boolean): boolean;
							public e(): void;
							public i(): boolean;
							public b(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public p(): void;
							public d(): com.esri.arcgisruntime.geometry.Geometry;
							public a(): void;
							public j(): void;
							public b(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.h.b.y.e): boolean;
							public b(param0: number, param1: number): boolean;
							public a(param0: com.esri.arcgisruntime.geometry.GeometryType): com.esri.arcgisruntime.symbology.Symbol;
							public a(param0: com.esri.arcgisruntime.geometry.Geometry): void;
							public a(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): com.esri.arcgisruntime.mapping.view.Graphic;
							public b(param0: com.esri.arcgisruntime.geometry.Point): boolean;
							public a(param0: java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>, param1: native.Array<number>): com.esri.arcgisruntime.internal.h.b.y.d;
							public constructor(param0: com.esri.arcgisruntime.internal.h.b.o, param1: com.esri.arcgisruntime.internal.h.b.w);
							public s(): boolean;
							public r(): boolean;
							public e(param0: number, param1: number): com.esri.arcgisruntime.geometry.Point;
							public b(): com.esri.arcgisruntime.geometry.GeometryType;
							public q(): boolean;
						}
						export module y {
							export class a extends com.esri.arcgisruntime.internal.p.g.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.a>;
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: com.esri.arcgisruntime.geometry.Geometry);
								public b(): void;
							}
							export class b extends com.esri.arcgisruntime.internal.p.g.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.b>;
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: number, param2: number, param3: com.esri.arcgisruntime.geometry.Point);
								public b(): void;
							}
							export class c {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.c>;
								public static a: com.esri.arcgisruntime.internal.h.b.y.c;
								public static b: com.esri.arcgisruntime.internal.h.b.y.c;
								public static c: com.esri.arcgisruntime.internal.h.b.y.c;
								public static values(): native.Array<com.esri.arcgisruntime.internal.h.b.y.c>;
								public static valueOf(param0: string): com.esri.arcgisruntime.internal.h.b.y.c;
							}
							export class d {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.d>;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: com.esri.arcgisruntime.internal.h.b.y.c, param2: com.esri.arcgisruntime.geometry.Point);
								public a(): com.esri.arcgisruntime.internal.h.b.y.c;
								public b(): com.esri.arcgisruntime.geometry.Point;
							}
							export class e {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.e>;
								public static a: com.esri.arcgisruntime.internal.h.b.y.e;
								public static b: com.esri.arcgisruntime.internal.h.b.y.e;
								public static valueOf(param0: string): com.esri.arcgisruntime.internal.h.b.y.e;
								public static values(): native.Array<com.esri.arcgisruntime.internal.h.b.y.e>;
							}
							export class f extends com.esri.arcgisruntime.internal.p.g.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.f>;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: com.esri.arcgisruntime.geometry.Geometry, param2: com.esri.arcgisruntime.geometry.Geometry);
								public a(): void;
								public b(): void;
							}
							export class g extends com.esri.arcgisruntime.internal.p.g.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.g>;
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: number, param2: number, param3: com.esri.arcgisruntime.geometry.Point, param4: number, param5: com.esri.arcgisruntime.geometry.Point);
								public b(): void;
							}
							export class h extends com.esri.arcgisruntime.internal.p.g.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.h>;
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: com.esri.arcgisruntime.geometry.Geometry);
								public b(): void;
							}
							export class i extends com.esri.arcgisruntime.internal.p.g.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.i>;
								public a(): void;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: number, param2: number, param3: com.esri.arcgisruntime.geometry.Point);
								public b(): void;
							}
							export class j extends com.esri.arcgisruntime.internal.p.g.a {
								public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.y.j>;
								public constructor(param0: com.esri.arcgisruntime.internal.h.b.y, param1: com.esri.arcgisruntime.geometry.Geometry, param2: com.esri.arcgisruntime.geometry.Geometry);
								public a(): void;
								public b(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export module b {
						export abstract class z {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.b.z>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export abstract class c {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.c>;
						public a(): com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedListener;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedListener);
						public a(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module h {
					export class d extends com.esri.arcgisruntime.internal.h.c {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.h.d>;
						public a(): com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedListener;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedListener);
						public a(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module i {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.i.a>;
						public constructor(param0: globalAndroid.content.Context);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module i {
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.i.b>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jy): com.esri.arcgisruntime.navigation.VoiceGuidance.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ae): com.esri.arcgisruntime.navigation.DestinationStatus;
						public static a(param0: com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy): com.esri.arcgisruntime.internal.jni.gj;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module i {
					export class c {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.i.c>;
						public constructor(param0: com.esri.arcgisruntime.internal.i.a);
						public a(): com.esri.arcgisruntime.internal.jni.CoreNavigationResources;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module j {
					export module a {
						export class a extends com.esri.arcgisruntime.internal.j.a.b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.j.a.a>;
							public g(): com.esri.arcgisruntime.internal.jni.CoreKMLAudioPlayer;
							public a(): void;
							public e(): number;
							public f(): number;
							public d(): string;
							public c(): void;
							public b(): void;
							public constructor(param0: globalAndroid.content.Context, param1: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module j {
					export module a {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.j.a.b>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.j.a.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): void;
								b(): void;
								c(): void;
								d(): string;
								e(): number;
								f(): number;
							});
							public constructor();
							public a(): void;
							public e(): number;
							public f(): number;
							public d(): string;
							public c(): void;
							public b(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module j {
					export module a {
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.j.a.c>;
							public a(param0: number): void;
							public a(): com.esri.arcgisruntime.internal.jni.CoreKMLAudioPlayer;
							public constructor(param0: com.esri.arcgisruntime.internal.j.a.b);
							public b(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module j {
					export module a {
						export abstract class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.j.a.d>;
							public d(): void;
							public a(param0: com.esri.arcgisruntime.ogc.kml.KmlTour): void;
							public b(): number;
							public a(param0: string): void;
							public a(): com.esri.arcgisruntime.ogc.kml.KmlTour;
							public a(param0: com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedListener): void;
							public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlTourController);
							public f(): void;
							public a(param0: com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedListener): void;
							public b(param0: com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedListener): boolean;
							public c(): number;
							public e(): void;
							public b(param0: com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedListener): boolean;
							public a(param0: com.esri.arcgisruntime.internal.j.a.b, param1: com.esri.arcgisruntime.internal.jni.CoreKMLAudioPlayer): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAddRastersParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAddRastersParameters>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(param0: string): void;
						public d(param0: string): void;
						public c(): string;
						public b(param0: string): void;
						public finalize(): void;
						public e(): number;
						public b(): string;
						public a(param0: string): void;
						public g(): string;
						public f(): number;
						public a(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAnalysis {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAnalysis>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): boolean;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAnalysisOverlay extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAnalysisOverlay>;
						public c(): java.lang.Long;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreAnalysisOverlay;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAngularUnit extends com.esri.arcgisruntime.internal.jni.CoreUnit {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAngularUnit>;
						public a(): com.esri.arcgisruntime.internal.jni.a;
						public constructor();
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public b(param0: number): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreAngularUnit, param1: number): number;
						public a(param0: number): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreAngularUnit;
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreAngularUnit, param1: number): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.a);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAnnotationLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAnnotationLayer>;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public d(param0: string): void;
						public d_(): number;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public d(param0: number): void;
						public f(): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreAnnotationLayer;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public d(): number;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem, param1: number);
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: string);
						public c_(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAnnotationSublayer implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.dr {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAnnotationSublayer>;
						public c(): java.lang.Long;
						public onSubLayerContentChanged(): void;
						public constructor();
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public g(): number;
						public e(): boolean;
						public i(): number;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public m(): number;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreAnnotationSublayer;
						public a(param0: number): boolean;
						public k(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): number;
						public b(): boolean;
						public j(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISFeature extends com.esri.arcgisruntime.internal.jni.CoreFeature implements com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISFeature>;
						public a(param0: string, param1: string, param2: native.Array<number>): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onLoadStatusChanged(param0: number): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public k(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreAttachment): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CoreMapView): com.esri.arcgisruntime.internal.jni.CorePoint;
						public a(): boolean;
						public b(): boolean;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreAttachment, param1: string, param2: string, param3: native.Array<number>): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature, param1: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo): void;
						public g_(): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public i(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISFeatureLayerInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureLayerInfo>;
						public B(): string;
						public v(): boolean;
						public w(): boolean;
						public r(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public k(): com.esri.arcgisruntime.internal.jni.CoreDrawingInfo;
						public x(): boolean;
						public d(): string;
						public m(): number;
						public l(): com.esri.arcgisruntime.internal.jni.CoreEditFieldsInfo;
						public finalize(): void;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreFeatureType;
						public G(): com.esri.arcgisruntime.internal.jni.ha;
						public constructor();
						public E(): number;
						public t(): com.esri.arcgisruntime.internal.jni.by;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public y(): number;
						public C(): com.esri.arcgisruntime.internal.jni.CoreOwnershipBasedAccessControlInfo;
						public p(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public u(): string;
						public e(): com.esri.arcgisruntime.internal.jni.CoreFeatureServiceCapabilities;
						public o(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public S(): number;
						public I(): string;
						public T(): boolean;
						public z(): number;
						public F(): string;
						public D(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public q(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public O(): boolean;
						public A(): number;
						public P(): com.esri.arcgisruntime.internal.jni.CoreLayerTimeInfo;
						public s(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public H(): com.esri.arcgisruntime.internal.jni.d;
						public h(): boolean;
						public Q(): string;
						public j(): string;
						public M(): boolean;
						public f(): boolean;
						public N(): boolean;
						public b(): string;
						public L(): boolean;
						public i(): string;
						public K(): boolean;
						public n(): number;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public R(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureLayerInfo;
						public J(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISFeatureServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureServiceInfo>;
						public x(): boolean;
						public d(): string;
						public w(): number;
						public u(): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public v(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureServiceInfo;
						public l(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public finalize(): void;
						public c(): boolean;
						public o(): string;
						public s(): boolean;
						public i(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public q(): boolean;
						public m(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public p(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public r(): com.esri.arcgisruntime.internal.jni.CoreSyncCapabilities;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreServiceDocumentInfo;
						public t(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.CoreEditorTrackingInfo;
						public h(): com.esri.arcgisruntime.internal.jni.CoreFeatureServiceCapabilities;
						public b(): string;
						public e(): string;
						public k(): boolean;
						public n(): number;
						public j(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISFeatureTable extends com.esri.arcgisruntime.internal.jni.CoreFeatureTable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public p(): number;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreFeatureType;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureType): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature, param1: com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public r(): string;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public l(): string;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public o(): string;
						public s(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public c(): java.lang.Long;
						public constructor();
						public c(param0: string): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g_(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public z(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: boolean): void;
						public x(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public u(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature, param1: com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public t(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public v(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public w(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public m(): boolean;
						public y(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public j(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureType, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public n(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureLayerInfo;
						public a(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public q(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISImageServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISImageServiceInfo>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISImageServiceInfo;
						public l(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public g(): number;
						public m(): com.esri.arcgisruntime.internal.jni.CoreLayerTimeInfo;
						public f(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public j(): com.esri.arcgisruntime.internal.jni.fe;
						public finalize(): void;
						public b(): string;
						public i(): string;
						public h(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISMapImageLayer extends com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer implements com.esri.arcgisruntime.internal.jni.ii {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageLayer>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageLayer;
						public u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public x(): void;
						public f(param0: string): void;
						public b(param0: boolean): void;
						public finalize(): void;
						public o(): boolean;
						public v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public s(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public constructor();
						public r(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public g_(): void;
						public a(param0: number): boolean;
						public p(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public c(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: string);
						public h(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public c(param0: boolean): void;
						public y(): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e(param0: string): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public w(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public t(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public onFullTimeExtentChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.em): void;
						public e(): boolean;
						public q(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo;
						public a(param0: string): void;
						public m(): com.esri.arcgisruntime.internal.jni.em;
						public i(): string;
						public j(): void;
						public k(): boolean;
						public a(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISMapImageSublayer extends com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageSublayer>;
						public p(): number;
						public a(): string;
						public h(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public m(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public q(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public r(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: boolean): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer): void;
						public t(): com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public d(param0: boolean): void;
						public e(): boolean;
						public o(): number;
						public s(): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public g_(): void;
						public a(param0: number): boolean;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSublayerSource);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageSublayer;
						public e(param0: boolean): void;
						public constructor(param0: number);
						public a(param0: string): void;
						public j(): void;
						public k(): boolean;
						public i(): boolean;
						public c(param0: number): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISMapServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo>;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo;
						public p(): number;
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public x(): boolean;
						public t(): com.esri.arcgisruntime.internal.jni.ha;
						public B(): com.esri.arcgisruntime.internal.jni.CoreServiceTimeInfo;
						public F(): string;
						public v(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public D(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public u(): boolean;
						public m(): number;
						public y(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
						public l(): string;
						public E(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public w(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public j(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public i(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public C(): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public s(): string;
						public f(): string;
						public g(): com.esri.arcgisruntime.internal.jni.CoreServiceDocumentInfo;
						public constructor();
						public r(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public h(): boolean;
						public c(): string;
						public o(): number;
						public q(): number;
						public A(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public e(): string;
						public z(): com.esri.arcgisruntime.internal.jni.CoreTileInfo;
						public n(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo;
						public d(): com.esri.arcgisruntime.internal.jni.CoreMapServiceCapabilities;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISMapServiceSublayerInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceSublayerInfo>;
						public C(): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public v(): boolean;
						public w(): boolean;
						public r(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): com.esri.arcgisruntime.internal.jni.CoreMapServiceCapabilities;
						public t(): boolean;
						public x(): boolean;
						public u(): boolean;
						public m(): number;
						public finalize(): void;
						public G(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public M(): string;
						public N(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceSublayerInfo;
						public constructor();
						public E(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public y(): number;
						public p(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public H(): com.esri.arcgisruntime.internal.jni.e;
						public L(): com.esri.arcgisruntime.internal.jni.CoreLayerTimeInfo;
						public o(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public k(): string;
						public I(): string;
						public O(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public z(): number;
						public F(): string;
						public D(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public q(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public A(): number;
						public P(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public d(): boolean;
						public h(): boolean;
						public c(): string;
						public Q(): string;
						public j(): string;
						public e(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceSublayerInfo;
						public b(): string;
						public B(): com.esri.arcgisruntime.internal.jni.CoreOwnershipBasedAccessControlInfo;
						public i(): string;
						public K(): boolean;
						public l(): com.esri.arcgisruntime.internal.jni.CoreDrawingInfo;
						public n(): number;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public R(): string;
						public s(): com.esri.arcgisruntime.internal.jni.by;
						public J(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISRuntimeEnvironment {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISRuntimeEnvironment>;
						public static a(param0: string): void;
						public static b(param0: string): void;
						public static c(param0: string): com.esri.arcgisruntime.internal.jni.CoreLicenseResult;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreLicenseInfo): com.esri.arcgisruntime.internal.jni.CoreLicenseResult;
						public static d(param0: string): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.gt): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePlatformHelpersProvider): void;
						public static a(): com.esri.arcgisruntime.internal.jni.CoreLicense;
						public static a(param0: boolean): void;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreLicenseResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISSceneLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISSceneLayer>;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public o(): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): void;
						public p(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public i(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISSceneLayer;
						public g(): number;
						public e(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): void;
						public g_(): void;
						public a(param0: number): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.hw): void;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public m(): com.esri.arcgisruntime.internal.jni.hw;
						public a(param0: boolean): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISSublayer implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.dr, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer>;
						public y(): com.esri.arcgisruntime.internal.jni.f;
						public onLoadStatusChanged(param0: number): void;
						public w(): boolean;
						public p(): number;
						public A(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public onRequestRequired(param0: number): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public b(param0: boolean): void;
						public m(): number;
						public finalize(): void;
						public B(): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public q(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public r(): boolean;
						public z(): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): boolean;
						public f(): void;
						public c(): java.lang.Long;
						public onSubLayerContentChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public u(): number;
						public static nativeDestroy(param0: number): void;
						public e(): boolean;
						public o(): number;
						public g_(): void;
						public a(param0: number): boolean;
						public x(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceSublayerInfo;
						public e(param0: boolean): void;
						public v(): number;
						public k(): boolean;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public i(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISTiledElevationSource extends com.esri.arcgisruntime.internal.jni.CoreElevationSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISTiledElevationSource>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISTiledElevationSource;
						public b(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreElevationSource;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: string): void;
						public j(): void;
						public f(): void;
						public a(param0: boolean): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISTiledLayer extends com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISTiledLayer>;
						public m(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public i(): number;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISTiledLayer;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public c(param0: string): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileCache);
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.ew): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArcGISVectorTiledLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArcGISVectorTiledLayer>;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreVectorTileSourceInfo;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISVectorTiledLayer;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public o(): com.esri.arcgisruntime.internal.jni.CoreVectorTileCache;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public m(): com.esri.arcgisruntime.internal.jni.CoreVectorTileStyle;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVectorTileCache, param1: com.esri.arcgisruntime.internal.jni.CoreItemResourceCache);
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreItemResourceCache;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVectorTileCache);
						public a(param0: boolean): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAreaUnit extends com.esri.arcgisruntime.internal.jni.CoreUnit {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAreaUnit>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.h);
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLinearUnit);
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public b(param0: number): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreAreaUnit, param1: number): number;
						public a(param0: number): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreAreaUnit, param1: number): number;
						public a(): com.esri.arcgisruntime.internal.jni.h;
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreAreaUnit;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArray {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArray>;
						public constructor();
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(param0: number): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): boolean;
						public b(): number;
						public finalize(): void;
						public d(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreArrayObservable extends com.esri.arcgisruntime.internal.jni.CoreArray {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreArrayObservable>;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArray;
						public onElementAdded(param0: number, param1: number): void;
						public onElementRemoved(param0: number, param1: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ay): void;
						public d(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.az): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAttachment {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAttachment>;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor();
						public d(): number;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): string;
						public c(): boolean;
						public f(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreAttachment;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreAttributeParameterValue {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreAttributeParameterValue>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreAttributeParameterValue;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: string): void;
						public c(): string;
						public b(param0: string): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreBackgroundGrid {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid>;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public f(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid;
						public finalize(): void;
						public e(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: number, param3: number);
						public a(param0: number): void;
						public b(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreBaseStretchRenderer extends com.esri.arcgisruntime.internal.jni.CoreRasterRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public a(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreBasemap implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreBasemap>;
						public onLoadStatusChanged(param0: number): void;
						public static x(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public static D(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static w(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public n(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public static F(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public static b(param0: string): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static y(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public finalize(): void;
						public static B(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public k(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static z(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public static o(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static p(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public static C(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public E(): string;
						public static A(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public H(): void;
						public f(): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public static r(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public l(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static s(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static q(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public g_(): void;
						public static u(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public static t(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public a(param0: string): void;
						public static G(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public i(): string;
						public m(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static v(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public j(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public onDoneLoading(param0: number): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreBingMapsLayer extends com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreBingMapsLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ig): void;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public finalize(): void;
						public onKeyPortalCreated(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public g(): string;
						public m(): com.esri.arcgisruntime.internal.jni.r;
						public i(): com.esri.arcgisruntime.internal.jni.CorePortal;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public y(): void;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTileKey, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreStringDictionary): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreBingMapsLayer;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.fm): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePortal, param1: com.esri.arcgisruntime.internal.jni.r);
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public a(param0: string): void;
						public j(): void;
						public k(): boolean;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.r);
						public a(param0: com.esri.arcgisruntime.internal.jni.ew): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreBlendRenderer extends com.esri.arcgisruntime.internal.jni.CoreHillshadeRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreBlendRenderer>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRaster, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: com.esri.arcgisruntime.internal.jni.CoreVector, param3: com.esri.arcgisruntime.internal.jni.CoreVector, param4: com.esri.arcgisruntime.internal.jni.CoreVector, param5: com.esri.arcgisruntime.internal.jni.CoreVector, param6: com.esri.arcgisruntime.internal.jni.CoreVector, param7: com.esri.arcgisruntime.internal.jni.CoreColorRamp, param8: number, param9: number, param10: number, param11: com.esri.arcgisruntime.internal.jni.hh, param12: number, param13: number, param14: number);
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.hh, param4: number, param5: number, param6: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreBookmark {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreBookmark>;
						public d(): com.esri.arcgisruntime.internal.jni.CoreBookmark;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: string): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreViewpoint);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreBookmark;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreByteArray {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreByteArray>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): void;
						public b(): native.Array<number>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreByteArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreCamera {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreCamera>;
						public constructor();
						public d(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix);
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public b(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public e(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
						public b(): number;
						public a(param0: number, param1: number, param2: number): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number, param4: number);
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreCamera;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreCameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreCameraController>;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.s;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreClassBreak extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreClassBreak>;
						public c(): java.lang.Long;
						public constructor();
						public j(): com.esri.arcgisruntime.internal.jni.CoreClassBreak;
						public k(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public b(param0: string): void;
						public constructor(param0: string, param1: string, param2: number, param3: number, param4: com.esri.arcgisruntime.internal.jni.CoreSymbol);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreClassBreak;
						public h(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
						public e(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: string): void;
						public static c(param0: string): com.esri.arcgisruntime.internal.jni.CoreClassBreak;
						public i(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public f(): number;
						public a(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreClassBreaksRenderer extends com.esri.arcgisruntime.internal.jni.CoreRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreClassBreaksRenderer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public d(param0: string): void;
						public b(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreClassBreaksRenderer;
						public static e(param0: string): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public g(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public h(): number;
						public k(): com.esri.arcgisruntime.internal.jni.gb;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gb): void;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public c(param0: string): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public d(): com.esri.arcgisruntime.internal.jni.ga;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: string): void;
						public e(): string;
						public i(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: number): void;
						public j(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreClosestFacilityParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreClosestFacilityParameters>;
						public a(param0: string, param1: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public b(param0: boolean): void;
						public finalize(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ak): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.iw): void;
						public f(): string;
						public x(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityParameters;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.is): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public d(param0: boolean): void;
						public r(): com.esri.arcgisruntime.internal.jni.CoreTravelMode;
						public s(): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public c(): number;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTravelMode): void;
						public e(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public b(param0: string): string;
						public p(): com.esri.arcgisruntime.internal.jni.hn;
						public t(): void;
						public w(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityParameters;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public e(): com.esri.arcgisruntime.internal.jni.iw;
						public c(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gn): void;
						public g(): com.esri.arcgisruntime.internal.jni.ak;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public v(): void;
						public n(): com.esri.arcgisruntime.internal.jni.gn;
						public q(): com.esri.arcgisruntime.internal.jni.is;
						public m(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public e(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public h(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public l(): boolean;
						public e(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hn): void;
						public a(param0: string): void;
						public k(): boolean;
						public i(): boolean;
						public a(param0: number): void;
						public j(): boolean;
						public o(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public u(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreClosestFacilityResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreClosestFacilityResult>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public h(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityResult;
						public a(param0: number, param1: number): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityRoute;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
						public a(param0: string, param1: number): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreClosestFacilityRoute {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreClosestFacilityRoute>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityRoute;
						public constructor();
						public h(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.fg;
						public i(): number;
						public k(): number;
						public finalize(): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public a(param0: string): number;
						public c(): com.esri.arcgisruntime.internal.jni.z;
						public b(): com.esri.arcgisruntime.internal.jni.z;
						public f(): number;
						public l(): number;
						public j(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreClosestFacilityTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreClosestFacilityTask>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public b(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityTaskInfo;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreResourceProvider): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreClosestFacilityParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(): com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset;
						public onDoneLoading(param0: number): void;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreClosestFacilityTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreClosestFacilityTaskInfo>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityTaskInfo;
						public r(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public h(): string;
						public i(): com.esri.arcgisruntime.internal.jni.ak;
						public q(): com.esri.arcgisruntime.internal.jni.hn;
						public finalize(): void;
						public l(): string;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public e(): number;
						public t(): com.esri.arcgisruntime.internal.jni.is;
						public s(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public j(): com.esri.arcgisruntime.internal.jni.eu;
						public f(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public k(): number;
						public n(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public m(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public o(): com.esri.arcgisruntime.internal.jni.gn;
						public p(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public g(): com.esri.arcgisruntime.internal.jni.iw;
						public u(): com.esri.arcgisruntime.internal.jni.CoreArray;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreCodedValue {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreCodedValue>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCodedValue;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreCodedValueDomain extends com.esri.arcgisruntime.internal.jni.CoreDomain {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreCodedValueDomain>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCodedValueDomain;
						public a(): com.esri.arcgisruntime.internal.jni.CoreArray;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreColor {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreColor>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreColor;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreColorRamp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreColorRamp>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreColorRamp;
						public constructor();
						public static a(param0: com.esri.arcgisruntime.internal.jni.fq, param1: number): com.esri.arcgisruntime.internal.jni.CoreColorRamp;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreColormap {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreColormap>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreColormap;
						public a(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreColormap;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreColormapRenderer extends com.esri.arcgisruntime.internal.jni.CoreRasterRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreColormapRenderer>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreColormap;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreColormap);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreCompositeSymbol extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreCompositeSymbol>;
						public c(): java.lang.Long;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCompositeSymbol;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreCoordinateFormatter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreCoordinateFormatter>;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static b(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): string;
						public static c(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param2: com.esri.arcgisruntime.internal.jni.ek): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.iu, param2: boolean): string;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.dp, param2: number): string;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.ek, param2: number, param3: boolean): string;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number): string;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param2: com.esri.arcgisruntime.internal.jni.br): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: boolean): string;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param2: com.esri.arcgisruntime.internal.jni.iu): com.esri.arcgisruntime.internal.jni.CorePoint;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreCostAttribute {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreCostAttribute>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCostAttribute;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.l;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDashGeometricEffect extends com.esri.arcgisruntime.internal.jni.CoreGeometricEffect {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDashGeometricEffect>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDashGeometricEffect;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDateTime {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDateTime>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public toString(): string;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDatumTransformation {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDatumTransformation>;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.ad;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDatumTransformation): boolean;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public h(): com.esri.arcgisruntime.internal.jni.CoreDatumTransformation;
						public g(): number;
						public finalize(): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public c(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDatumTransformation;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDevice {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDevice>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDevice;
						public static b(): com.esri.arcgisruntime.internal.jni.CoreDevice;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDictionary {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDictionary>;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public constructor();
						public d(): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreElement): boolean;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): com.esri.arcgisruntime.internal.jni.ba;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): com.esri.arcgisruntime.internal.jni.CoreElement;
						public g(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.ba, param1: com.esri.arcgisruntime.internal.jni.ba);
						public h(): void;
						public f(): boolean;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement, param1: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public b(): com.esri.arcgisruntime.internal.jni.ba;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreElement, param1: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDictionary;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDictionaryRenderer extends com.esri.arcgisruntime.internal.jni.CoreRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDictionaryRenderer>;
						public g(): boolean;
						public c(): java.lang.Long;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle);
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public d(param0: string): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static e(param0: string): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public e(): number;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDictionaryRenderer;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle, param1: com.esri.arcgisruntime.internal.jni.CoreDictionary, param2: com.esri.arcgisruntime.internal.jni.CoreDictionary);
						public d(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public f(): number;
						public a(param0: number): void;
						public b(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDictionarySymbolStyle extends com.esri.arcgisruntime.internal.jni.CoreSymbolStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public c(): string;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public g(): string;
						public j(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: string, param1: string);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDictionarySymbolStyleConfiguration {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyleConfiguration>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyleConfiguration;
						public e(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDirectionEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDirectionEvent>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDirectionEvent;
						public constructor();
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public e(): string;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDirectionManeuver {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDirectionManeuver>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDirectionManeuver;
						public c(): string;
						public g(): number;
						public i(): number;
						public k(): com.esri.arcgisruntime.internal.jni.ai;
						public finalize(): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public j(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public h(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public f(): number;
						public l(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDirectionMessage {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDirectionMessage>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDirectionMessage;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.aj;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDistance {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDistance>;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDistance;
						public finalize(): void;
						public d(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDistanceCompositeSceneSymbol extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDistanceCompositeSceneSymbol>;
						public c(): java.lang.Long;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDistanceCompositeSceneSymbol;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDistanceSymbolRange {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDistanceSymbolRange>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol, param1: number, param2: number);
						public d(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public finalize(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
						public c(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public b(): number;
						public a(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDistanceSymbolRange;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDomain {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDomain>;
						public a: number;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public c(): string;
						public b(): number;
						public d(): com.esri.arcgisruntime.internal.jni.am;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreDomain;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDownloadPreplannedOfflineMapJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public a(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob;
						public f(): com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea;
						public e(): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapParameters;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public h(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapTask;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreJob;
						public d(): com.esri.arcgisruntime.internal.jni.CoreMap;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapResult;
						public b(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDownloadPreplannedOfflineMapParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapParameters>;
						public f(): string;
						public g(): com.esri.arcgisruntime.internal.jni.fp;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.fp): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea): void;
						public static nativeDestroy(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea);
						public a(): number;
						public b(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapParameters;
						public b(param0: boolean): void;
						public d(): com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea;
						public finalize(): void;
						public a(param0: string): void;
						public e(): string;
						public c(): boolean;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDownloadPreplannedOfflineMapResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapResult>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): com.esri.arcgisruntime.internal.jni.CoreMap;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapResult;
						public f(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreMobileMapPackage;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreDrawingInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreDrawingInfo>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreDrawingInfo;
						public c(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public e(): boolean;
						public f(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCCell extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCCell>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCCell;
						public b(): com.esri.arcgisruntime.internal.jni.CoreENCDataset;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreENCDataset);
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCDataset {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCDataset>;
						public c(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public e(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCDataset;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCDisplayCategories {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCDisplayCategories>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCDisplayCategories;
						public c(): boolean;
						public c(param0: boolean): void;
						public b(param0: boolean): void;
						public b(): boolean;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCDisplaySettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCDisplaySettings>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreENCTextGroupVisibilitySettings;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreENCMarinerSettings;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCDisplaySettings;
						public d(): com.esri.arcgisruntime.internal.jni.CoreENCViewingGroupSettings;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCEnvironmentSettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCEnvironmentSettings>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCEnvironmentSettings;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: string): void;
						public d(): string;
						public b(param0: string): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreENCDisplaySettings;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCExchangeSet extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCExchangeSet>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public g(): string;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCFeature {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCFeature>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CoreMapView): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCFeature;
						public e(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: string): string;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCLayer>;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreENCFeature): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreENCCell;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCLayer;
						public g(): void;
						public static i(): com.esri.arcgisruntime.internal.jni.CoreENCEnvironmentSettings;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreENCCell);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCMarinerSettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCMarinerSettings>;
						public p(): number;
						public f(param0: boolean): void;
						public i(param0: boolean): void;
						public b(param0: boolean): void;
						public finalize(): void;
						public c(): com.esri.arcgisruntime.internal.jni.at;
						public e(): number;
						public g(param0: boolean): void;
						public n(): com.esri.arcgisruntime.internal.jni.av;
						public h(param0: boolean): void;
						public r(): boolean;
						public c(param0: boolean): void;
						public q(): boolean;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.av): void;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCMarinerSettings;
						public a(param0: com.esri.arcgisruntime.internal.jni.au): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public h(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.at): void;
						public d(param0: boolean): void;
						public m(): boolean;
						public o(): number;
						public s(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.as): void;
						public e(param0: boolean): void;
						public l(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.au;
						public k(): boolean;
						public f(): com.esri.arcgisruntime.internal.jni.CoreENCDisplayCategories;
						public b(): com.esri.arcgisruntime.internal.jni.as;
						public i(): boolean;
						public c(param0: number): void;
						public a(param0: number): void;
						public j(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCTextGroupVisibilitySettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCTextGroupVisibilitySettings>;
						public l(): void;
						public f(param0: boolean): void;
						public i(param0: boolean): void;
						public b(param0: boolean): void;
						public finalize(): void;
						public g(param0: boolean): void;
						public c(): boolean;
						public h(param0: boolean): void;
						public c(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCTextGroupVisibilitySettings;
						public b(): boolean;
						public g(): boolean;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public h(): boolean;
						public d(param0: boolean): void;
						public e(): boolean;
						public f(): boolean;
						public e(param0: boolean): void;
						public k(): boolean;
						public j(param0: boolean): void;
						public i(): boolean;
						public j(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreENCViewingGroupSettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreENCViewingGroupSettings>;
						public q(param0: boolean): void;
						public f(param0: boolean): void;
						public i(param0: boolean): void;
						public b(param0: boolean): void;
						public m(param0: boolean): void;
						public finalize(): void;
						public t(): void;
						public n(): boolean;
						public o(): boolean;
						public p(param0: boolean): void;
						public p(): boolean;
						public g(param0: boolean): void;
						public c(): boolean;
						public h(param0: boolean): void;
						public r(): boolean;
						public s(): boolean;
						public c(param0: boolean): void;
						public q(): boolean;
						public b(): boolean;
						public l(param0: boolean): void;
						public g(): boolean;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public h(): boolean;
						public k(param0: boolean): void;
						public d(param0: boolean): void;
						public e(): boolean;
						public o(param0: boolean): void;
						public m(): boolean;
						public f(): boolean;
						public r(param0: boolean): void;
						public e(param0: boolean): void;
						public l(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreENCViewingGroupSettings;
						public k(): boolean;
						public j(param0: boolean): void;
						public i(): boolean;
						public n(param0: boolean): void;
						public j(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreEditFieldsInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreEditFieldsInfo>;
						public f(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreEditFieldsInfo;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public e(): string;
						public c(): string;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreEditResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreEditResult>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.aw;
						public e(): string;
						public d(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f(): number;
						public b(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreEditResult;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreEditResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreEditorTrackingInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreEditorTrackingInfo>;
						public g(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreEditorTrackingInfo;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public c(): boolean;
						public e(): boolean;
						public b(): boolean;
						public f(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreElement {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreElement>;
						public bY(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkSource;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bw(): com.esri.arcgisruntime.internal.jni.CoreStatisticRecord;
						public F(): com.esri.arcgisruntime.internal.jni.CoreElevationSource;
						public bh(): com.esri.arcgisruntime.internal.jni.CoreRenderingRuleInfo;
						public bg(): com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo;
						public cf(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreLabelDefinition): com.esri.arcgisruntime.internal.jni.CoreElement;
						public L(): com.esri.arcgisruntime.internal.jni.CoreFacility;
						public ce(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunctionBarrier;
						public v(): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyleConfiguration;
						public I(): com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters;
						public bS(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType;
						public aB(): com.esri.arcgisruntime.internal.jni.CoreKMLGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePopupField): com.esri.arcgisruntime.internal.jni.CoreElement;
						public am(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameterInfo;
						public a(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreRelatedFeatureQueryResult): com.esri.arcgisruntime.internal.jni.CoreElement;
						public ak(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatureSet;
						public bm(): com.esri.arcgisruntime.internal.jni.CoreRouteResult;
						public bP(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreUniqueValue): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aH(): com.esri.arcgisruntime.internal.jni.CoreLegendInfo;
						public bH(): com.esri.arcgisruntime.internal.jni.CoreSyncLayerOption;
						public cl(): com.esri.arcgisruntime.internal.jni.CoreWMSSublayer;
						public d(): com.esri.arcgisruntime.internal.jni.CoreAnnotationSublayer;
						public bi(): com.esri.arcgisruntime.internal.jni.CoreRequestAttachment;
						public bI(): com.esri.arcgisruntime.internal.jni.CoreTileCache;
						public bA(): com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay): com.esri.arcgisruntime.internal.jni.CoreElement;
						public O(): com.esri.arcgisruntime.internal.jni.CoreFeatureEditResult;
						public br(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolyline;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePolygonBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
						public an(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameters;
						public az(): com.esri.arcgisruntime.internal.jni.CoreJob;
						public m(): native.Array<number>;
						public p(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityResult;
						public u(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public G(): com.esri.arcgisruntime.internal.jni.CoreError;
						public bO(): number;
						public bW(): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
						public bJ(): com.esri.arcgisruntime.internal.jni.ih;
						public ca(): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal;
						public h(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public q(): com.esri.arcgisruntime.internal.jni.CoreCodedValue;
						public al(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
						public aI(): com.esri.arcgisruntime.internal.jni.CoreLevelOfDetail;
						public Q(): com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype;
						public l(): boolean;
						public aq(): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreElement;
						public cm(): com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreNMEASatelliteInfo): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bq(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolygon;
						public s(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreElement;
						public be(): com.esri.arcgisruntime.internal.jni.CoreRelatedFeatureQueryResult;
						public bK(): com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLGeometry): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bz(): string;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aN(): com.esri.arcgisruntime.internal.jni.CoreNMEASatelliteInfo;
						public bf(): com.esri.arcgisruntime.internal.jni.fy;
						public aU(): com.esri.arcgisruntime.internal.jni.CorePointBarrier;
						public b(): com.esri.arcgisruntime.internal.jni.ba;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSyncLayerOption): com.esri.arcgisruntime.internal.jni.CoreElement;
						public ah(): com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep;
						public aA(): com.esri.arcgisruntime.internal.jni.CoreJobMessage;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreElement;
						public J(): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters;
						public bX(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public bQ(): com.esri.arcgisruntime.internal.jni.CoreUniqueValue;
						public aR(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncLayerResult;
						public ck(): com.esri.arcgisruntime.internal.jni.CoreWMSLayerInfo;
						public y(): com.esri.arcgisruntime.internal.jni.CoreDirectionMessage;
						public bU(): com.esri.arcgisruntime.internal.jni.CoreUtilityCategory;
						public ab(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters;
						public ay(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFacility): com.esri.arcgisruntime.internal.jni.CoreElement;
						public M(): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public aY(): com.esri.arcgisruntime.internal.jni.CorePopupExpression;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePopupExpression): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreStop): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters): com.esri.arcgisruntime.internal.jni.CoreElement;
						public as(): com.esri.arcgisruntime.internal.jni.CoreIdentifyLayerResult;
						public bC(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static a(param0: com.esri.arcgisruntime.internal.jni.js): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bt(): com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable;
						public ci(): com.esri.arcgisruntime.internal.jni.CoreWFSLayerInfo;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public aw(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreBookmark): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bj(): com.esri.arcgisruntime.internal.jni.CoreRestrictionAttribute;
						public bn(): com.esri.arcgisruntime.internal.jni.CoreScene;
						public cg(): com.esri.arcgisruntime.internal.jni.js;
						public ch(): com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolElement;
						public bL(): com.esri.arcgisruntime.internal.jni.CoreTravelMode;
						public aa(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameterOverrides;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePolylineBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aT(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdatesInfo;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreAttributeParameterValue): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aC(): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public cj(): com.esri.arcgisruntime.internal.jni.CoreWMSFeature;
						public V(): number;
						public ar(): com.esri.arcgisruntime.internal.jni.CoreIdentifyGraphicsOverlayResult;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreOrderBy): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticRecord): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bl(): com.esri.arcgisruntime.internal.jni.CoreRouteParameters;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.internal.jni.CoreElement;
						public at(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public B(): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapParameters;
						public bd(): com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionTable): com.esri.arcgisruntime.internal.jni.CoreElement;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable;
						public T(): com.esri.arcgisruntime.internal.jni.CoreFeatureType;
						public bV(): com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaFacility): com.esri.arcgisruntime.internal.jni.CoreElement;
						public au(): com.esri.arcgisruntime.internal.jni.CoreIncident;
						public aW(): com.esri.arcgisruntime.internal.jni.CorePolylineBarrier;
						public bv(): com.esri.arcgisruntime.internal.jni.CoreStatisticDefinition;
						public bs(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaResult;
						public Z(): com.esri.arcgisruntime.internal.jni.CoreGenerateLayerOption;
						public N(): com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionTable;
						public bp(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaParameters;
						public aF(): com.esri.arcgisruntime.internal.jni.CoreLayer;
						public bD(): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolElement): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aO(): com.esri.arcgisruntime.internal.jni.CoreOfflineCapability;
						public i(): com.esri.arcgisruntime.internal.jni.CoreAttachment;
						public ba(): com.esri.arcgisruntime.internal.jni.CorePopupMedia;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters): com.esri.arcgisruntime.internal.jni.CoreElement;
						public constructor();
						public bo(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaFacility;
						public ai(): com.esri.arcgisruntime.internal.jni.CoreGeometricEffect;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticDefinition): com.esri.arcgisruntime.internal.jni.CoreElement;
						public j(): com.esri.arcgisruntime.internal.jni.CoreAttributeParameterValue;
						public bb(): com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesSortOrder;
						public bG(): com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseParameters;
						public aL(): com.esri.arcgisruntime.internal.jni.CoreMap;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreLevelOfDetail): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aP(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapCapabilities;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunctionBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreAttachment): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDistanceSymbolRange): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public R(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public ax(): number;
						public af(): com.esri.arcgisruntime.internal.jni.CoreGeodatabase;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreIncident): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysis): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bu(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreElevationSource): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aX(): com.esri.arcgisruntime.internal.jni.CorePopup;
						public t(): com.esri.arcgisruntime.internal.jni.CoreDatumTransformation;
						public C(): com.esri.arcgisruntime.internal.jni.CoreENCDataset;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesSortOrder): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePopupMedia): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bB(): com.esri.arcgisruntime.internal.jni.CoreSuggestResult;
						public bT(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssociation;
						public ap(): com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay;
						public bM(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatureSet): com.esri.arcgisruntime.internal.jni.CoreElement;
						public H(): com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeResult;
						public aV(): com.esri.arcgisruntime.internal.jni.CorePolygonBarrier;
						public aS(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncParameters;
						public cb(): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminalConfiguration;
						public bE(): com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchParameters;
						public Y(): com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters;
						public z(): com.esri.arcgisruntime.internal.jni.CoreDistanceSymbolRange;
						public co(): com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet;
						public r(): com.esri.arcgisruntime.internal.jni.CoreCostAttribute;
						public bN(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aQ(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey;
						public A(): com.esri.arcgisruntime.internal.jni.CoreDomain;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreElement;
						public K(): com.esri.arcgisruntime.internal.jni.CoreExtensionLicense;
						public aj(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
						public n(): com.esri.arcgisruntime.internal.jni.CoreClassBreak;
						public cn(): com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrix;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode): com.esri.arcgisruntime.internal.jni.CoreElement;
						public E(): com.esri.arcgisruntime.internal.jni.CoreEditResult;
						public finalize(): void;
						public aJ(): com.esri.arcgisruntime.internal.jni.CoreLicenseInfo;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreField): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bZ(): com.esri.arcgisruntime.internal.jni.CoreUtilityPropagator;
						public bk(): com.esri.arcgisruntime.internal.jni.CoreRoute;
						public aZ(): com.esri.arcgisruntime.internal.jni.CorePopupField;
						public ac(): com.esri.arcgisruntime.internal.jni.CoreGeoPackageFeatureTable;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityElement): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aE(): com.esri.arcgisruntime.internal.jni.CoreLabelingInfo;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysisOverlay): com.esri.arcgisruntime.internal.jni.CoreElement;
						public by(): com.esri.arcgisruntime.internal.jni.CoreStop;
						public static nativeDestroy(param0: number): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateLayerOption): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: boolean): com.esri.arcgisruntime.internal.jni.CoreElement;
						public o(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityParameters;
						public bF(): com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchResult;
						public w(): com.esri.arcgisruntime.internal.jni.CoreDirectionEvent;
						public aM(): com.esri.arcgisruntime.internal.jni.em;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.internal.jni.CoreElement;
						public k(): com.esri.arcgisruntime.internal.jni.CoreBookmark;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDatumTransformation): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters): com.esri.arcgisruntime.internal.jni.CoreElement;
						public bR(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetGroup;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGUID): com.esri.arcgisruntime.internal.jni.CoreElement;
						public P(): com.esri.arcgisruntime.internal.jni.CoreFeatureQueryResult;
						public ad(): com.esri.arcgisruntime.internal.jni.CoreGeoPackageRaster;
						public ao(): com.esri.arcgisruntime.internal.jni.CoreGraphic;
						public U(): com.esri.arcgisruntime.internal.jni.CoreField;
						public aG(): com.esri.arcgisruntime.internal.jni.CoreLayer;
						public aK(): com.esri.arcgisruntime.internal.jni.CoreLocatorAttribute;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometricEffect): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreWMSLayerInfo): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityPropagator): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreClassBreak): com.esri.arcgisruntime.internal.jni.CoreElement;
						public ae(): com.esri.arcgisruntime.internal.jni.CoreGeocodeResult;
						public cc(): com.esri.arcgisruntime.internal.jni.CoreUtilityTier;
						public bc(): com.esri.arcgisruntime.internal.jni.CorePortalItem;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureQueryResult): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePointBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
						public cd(): com.esri.arcgisruntime.internal.jni.CoreUtilityTierGroup;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): com.esri.arcgisruntime.internal.jni.CoreElement;
						public aD(): com.esri.arcgisruntime.internal.jni.CoreLabelDefinition;
						public c(): com.esri.arcgisruntime.internal.jni.CoreAnalysisOverlay;
						public S(): com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate;
						public av(): number;
						public ag(): com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable;
						public D(): com.esri.arcgisruntime.internal.jni.CoreENCFeature;
						public bx(): com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryResult;
						public cp(): void;
						public X(): com.esri.arcgisruntime.internal.jni.CoreGUID;
						public W(): number;
						public x(): com.esri.arcgisruntime.internal.jni.CoreDirectionManeuver;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreElementReference {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreElementReference>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreElementReference;
						public a(): number;
						public b(): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreElevationSource implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreElevationSource>;
						public c(): java.lang.Long;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public k(): string;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public g(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreElevationSource;
						public finalize(): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: string): void;
						public j(): void;
						public l(): com.esri.arcgisruntime.internal.jni.bb;
						public onDoneLoading(param0: number): void;
						public i(): boolean;
						public f(): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreEnvelope extends com.esri.arcgisruntime.internal.jni.CoreGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreEnvelope>;
						public static a(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public i(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static a(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public e(): number;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public a(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public h(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number);
						public l(): number;
						public constructor();
						public d(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CorePoint);
						public static a(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public g(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): boolean;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number);
						public k(): number;
						public c(): number;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public b(): number;
						public f(): number;
						public j(): number;
						public static a(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreEnvelopeBuilder extends com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreEnvelopeBuilder>;
						public g(param0: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public i(param0: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public i(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public e(): number;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public a(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public h(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number);
						public l(): number;
						public a(param0: number, param1: number, param2: number, param3: number): void;
						public f(param0: number): void;
						public d(param0: number): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.by, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public b(param0: number): void;
						public h(param0: number): void;
						public constructor();
						public d(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreEnvelopeBuilder;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public g(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number): void;
						public k(): number;
						public a(param0: number, param1: number): void;
						public c(): number;
						public b(param0: number, param1: number): void;
						public c(param0: number, param1: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelope): void;
						public b(): number;
						public e(param0: number): void;
						public d(param0: number, param1: number): void;
						public f(): number;
						public c(param0: number): void;
						public a(param0: number): void;
						public j(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreError {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreError>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreError;
						public constructor();
						public c(): number;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.bd;
						public e(): string;
						public g(): void;
						public f(): any;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreEstimateTileCacheSizeJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeJob;
						public a(): com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreEstimateTileCacheSizeResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeResult>;
						public constructor();
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExpiration {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExpiration>;
						public e(): com.esri.arcgisruntime.internal.jni.bf;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreExpiration;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public d(): string;
						public c(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExportTileCacheJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExportTileCacheJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreExportTileCacheJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreTileCache;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExportTileCacheParameters extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public e(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public d(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters;
						public f(): com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters;
						public a(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExportTileCacheTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExportTileCacheTask>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters): com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapServiceInfo;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters, param1: string): com.esri.arcgisruntime.internal.jni.CoreExportTileCacheJob;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExportVectorTilesJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesJob;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public a(): string;
						public e(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreJob;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public d(): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesResult;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExportVectorTilesParameters extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters>;
						public c(): java.lang.Long;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters;
						public a(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExportVectorTilesResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesResult>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesResult;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreItemResourceCache;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVectorTileCache;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExportVectorTilesTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesTask>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters, param1: string, param2: string): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesJob;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesJob;
						public i(): com.esri.arcgisruntime.internal.jni.CoreVectorTileSourceInfo;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePortalItem);
						public g(): string;
						public c(): com.esri.arcgisruntime.internal.jni.CorePortalItem;
						public b(): boolean;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters, param1: string): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesJob;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreExtensionLicense {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreExtensionLicense>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public d(): com.esri.arcgisruntime.internal.jni.dv;
						public e(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreExtensionLicense;
						public c(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFacility {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFacility>;
						public a(param0: com.esri.arcgisruntime.internal.jni.z): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFacility;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreNetworkLocation): void;
						public finalize(): void;
						public e(): number;
						public m(): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
						public h(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint);
						public i(): com.esri.arcgisruntime.internal.jni.ei;
						public l(): number;
						public n(): com.esri.arcgisruntime.internal.jni.CoreFacility;
						public d(param0: number): void;
						public b(param0: string): number;
						public b(param0: number): void;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public j(): string;
						public k(): number;
						public c(): number;
						public a(param0: string): void;
						public e(param0: number): void;
						public b(): com.esri.arcgisruntime.internal.jni.z;
						public f(): number;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: string, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeature extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeature>;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public c(): java.lang.Long;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public q(): com.esri.arcgisruntime.internal.jni.bh;
						public n(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public k(): void;
						public p(): boolean;
						public o(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public m(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public r(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CoreMapView): com.esri.arcgisruntime.internal.jni.CorePoint;
						public l(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureCollection extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureCollection>;
						public onLoadStatusChanged(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public k(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreFeatureCollection;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public f(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g_(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public j(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureCollection;
						public onDoneLoading(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreItem): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureCollectionLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionLayer>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureCollection);
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreFeatureCollection;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionLayer;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureCollectionTable extends com.esri.arcgisruntime.internal.jni.CoreFeatureTable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionTable>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: com.esri.arcgisruntime.internal.jni.by, param2: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: com.esri.arcgisruntime.internal.jni.CoreVector);
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: com.esri.arcgisruntime.internal.jni.by, param2: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param3: boolean, param4: boolean);
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public g(): string;
						public i(): com.esri.arcgisruntime.internal.jni.CoreIterator;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer): void;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureLayerInfo;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public g_(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionTable;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElement);
						public a(param0: string): void;
						public j(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureEditResult extends com.esri.arcgisruntime.internal.jni.CoreEditResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureEditResult>;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): com.esri.arcgisruntime.internal.jni.aw;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureEditResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer implements com.esri.arcgisruntime.internal.jni.ii {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: boolean): void;
						public u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(): string;
						public x(): boolean;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public f(param0: string): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreLayer;
						public E(): void;
						public D(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(param0: boolean): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): void;
						public finalize(): void;
						public o(): boolean;
						public v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public s(): boolean;
						public H(): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public q(): boolean;
						public f(): void;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public z(): com.esri.arcgisruntime.internal.jni.CoreLayerSceneProperties;
						public constructor();
						public r(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.bi): void;
						public B(): number;
						public C(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public d(param0: boolean): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public g_(): void;
						public a(param0: number): boolean;
						public p(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public w(): com.esri.arcgisruntime.internal.jni.bi;
						public G(): void;
						public c(param0: number): void;
						public A(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters, param1: com.esri.arcgisruntime.internal.jni.gv): com.esri.arcgisruntime.internal.jni.CoreTask;
						public h(): string;
						public f(param0: boolean): void;
						public d(param0: string): void;
						public t(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public i(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
						public c(param0: boolean): void;
						public y(): void;
						public d(param0: number): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e(param0: string): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public onFullTimeExtentChanged(): void;
						public e(): boolean;
						public m(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): void;
						public F(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem, param1: number);
						public e(param0: boolean): void;
						public a(param0: string): void;
						public j(): void;
						public k(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureQueryResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureQueryResult>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public c(): com.esri.arcgisruntime.internal.jni.by;
						public f(): com.esri.arcgisruntime.internal.jni.CoreIterator;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureQueryResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureServiceCapabilities {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureServiceCapabilities>;
						public g(): boolean;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public c(): boolean;
						public e(): boolean;
						public b(): boolean;
						public f(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureServiceCapabilities;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureServiceLayerIdInfo extends com.esri.arcgisruntime.internal.jni.CoreIdInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureServiceLayerIdInfo>;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public d(): number;
						public c(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureServiceLayerIdInfo;
						public b(): com.esri.arcgisruntime.internal.jni.by;
						public a(): boolean;
						public e(): com.esri.arcgisruntime.internal.jni.d;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureSubtype {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public e(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureTable implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureTable>;
						public B(): string;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public E(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public D(): com.esri.arcgisruntime.internal.jni.CoreFeatureLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public c(): java.lang.Long;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public c(param0: string): void;
						public P(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public g_(): void;
						public C(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public F(): com.esri.arcgisruntime.internal.jni.by;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public e(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public T(): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public N(): com.esri.arcgisruntime.internal.jni.bk;
						public A(): number;
						public M(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public S(): boolean;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public R(): boolean;
						public G(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public H(): boolean;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public Q(): string;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public L(): com.esri.arcgisruntime.internal.jni.CoreLayer;
						public O(): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public K(): boolean;
						public j(): void;
						public d(param0: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public onDoneLoading(param0: number): void;
						public I(): boolean;
						public J(): boolean;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureTemplate {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate;
						public c(): com.esri.arcgisruntime.internal.jni.ar;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public e(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFeatureType {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFeatureType>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureType;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreField {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreField>;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreField;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public h(): boolean;
						public e(): com.esri.arcgisruntime.internal.jni.bl;
						public finalize(): void;
						public static a(param0: string, param1: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public static e(param0: string, param1: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public b(): string;
						public g(): string;
						public static b(param0: string, param1: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public i(): string;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDomain;
						public static d(param0: string, param1: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public f(): number;
						public static c(param0: string, param1: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public static a(param0: string, param1: string, param2: number): com.esri.arcgisruntime.internal.jni.CoreField;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFileRequest extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFileRequest>;
						public c(): java.lang.Long;
						public a(): string;
						public onIsPausedChanged(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFileRequest;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public b(): void;
						public c(param0: number): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
						public b(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFillSymbol extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFillSymbol>;
						public c(): java.lang.Long;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.CoreLineSymbol;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLineSymbol): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreFrameCameraAddRastersParameters extends com.esri.arcgisruntime.internal.jni.CoreAddRastersParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreFrameCameraAddRastersParameters>;
						public e(param0: string): void;
						public constructor();
						public e(): number;
						public h(): string;
						public f(param0: string): void;
						public a(): number;
						public a(param0: string): void;
						public i(): string;
						public f(): number;
						public j(): boolean;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGUID {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGUID>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGUID;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): void;
						public toString(): string;
						public constructor(param0: string);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGenerateGeodatabaseJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreGeodatabase;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGenerateGeodatabaseParameters extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters>;
						public c(): java.lang.Long;
						public g(): boolean;
						public constructor();
						public h(): com.esri.arcgisruntime.internal.jni.id;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public i(): com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters;
						public d(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public e(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public b(): com.esri.arcgisruntime.internal.jni.k;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.k): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public a(param0: com.esri.arcgisruntime.internal.jni.id): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGenerateLayerOption {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGenerateLayerOption>;
						public f(): string;
						public g(): com.esri.arcgisruntime.internal.jni.CoreGenerateLayerOption;
						public a(param0: com.esri.arcgisruntime.internal.jni.bs): void;
						public constructor();
						public constructor(param0: number, param1: string);
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.bs;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGenerateLayerOption;
						public e(): boolean;
						public b(param0: boolean): void;
						public finalize(): void;
						public constructor(param0: number, param1: boolean);
						public c(): number;
						public constructor(param0: number);
						public a(param0: string): void;
						public b(): boolean;
						public a(param0: boolean): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGenerateOfflineMapJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public a(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public f(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public e(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameterOverrides;
						public g(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapResult;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapJob;
						public h(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapTask;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreJob;
						public d(): com.esri.arcgisruntime.internal.jni.CoreMap;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGenerateOfflineMapParameterOverrides {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameterOverrides>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public d(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameterOverrides;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGenerateOfflineMapParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters>;
						public k(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapItemInfo): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gk): void;
						public i(): number;
						public b(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters;
						public finalize(): void;
						public l(): string;
						public n(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public c(param0: boolean): void;
						public b(param0: number): void;
						public e(): com.esri.arcgisruntime.internal.jni.af;
						public g(): boolean;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.k;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public m(): com.esri.arcgisruntime.internal.jni.gk;
						public d(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: number);
						public f(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.k): void;
						public a(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.af): void;
						public h(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapItemInfo;
						public a(param0: number): void;
						public j(): number;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGenerateOfflineMapResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapResult>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapResult;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): com.esri.arcgisruntime.internal.jni.CoreMap;
						public f(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreMobileMapPackage;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoElementLineOfSight extends com.esri.arcgisruntime.internal.jni.CoreLineOfSight {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoElementLineOfSight>;
						public constructor();
						public d(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(): number;
						public g(): number;
						public e(): number;
						public c(): number;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ie): void;
						public static a(param0: number): void;
						public e(param0: number): void;
						public h(): number;
						public c(param0: number): void;
						public f(): number;
						public f(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElement, param1: com.esri.arcgisruntime.internal.jni.CoreElement);
						public a(param0: number): void;
						public b(): boolean;
						public d(param0: number): void;
						public a(param0: boolean): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoElementViewshed extends com.esri.arcgisruntime.internal.jni.CoreViewshed {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoElementViewshed>;
						public constructor();
						public d(): number;
						public g(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElement, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public static c(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(): number;
						public g(): number;
						public b(param0: boolean): void;
						public e(): number;
						public c(): number;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public e(param0: number): void;
						public c(param0: number): void;
						public f(): number;
						public f(param0: number): void;
						public a(param0: number): void;
						public b(): boolean;
						public d(param0: number): void;
						public a(param0: boolean): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoPackage implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoPackage>;
						public c(): java.lang.Long;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public k(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoPackage;
						public i(): string;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoPackageFeatureTable extends com.esri.arcgisruntime.internal.jni.CoreFeatureTable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoPackageFeatureTable>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeoPackage;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoPackageFeatureTable;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: string): void;
						public g_(): void;
						public j(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoPackageRaster extends com.esri.arcgisruntime.internal.jni.CoreRaster {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoPackageRaster>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public g_(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoPackageRaster;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public j(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeoPackage;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoView {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoView>;
						public a(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onDrawRequested(): void;
						public l(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeExtent): void;
						public onSpatialReferenceChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ao): void;
						public b(param0: boolean): void;
						public c(): com.esri.arcgisruntime.internal.jni.ap;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice, param1: com.esri.arcgisruntime.internal.jni.cg): void;
						public onNavigationChanged(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay): void;
						public constructor();
						public i(): com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.jw): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hk): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(param0: native.Array<number>, param1: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): void;
						public a(param0: number, param1: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onAttributionChanged(): void;
						public b(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onDrawStatusChanged(param0: number): void;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.es): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public n(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.jx): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public g(): boolean;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
						public onViewpointChanged(): void;
						public b(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public d(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.dt): void;
						public a(param0: native.Array<number>, param1: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer): com.esri.arcgisruntime.internal.jni.CoreLayerViewState;
						public e(): boolean;
						public h(): com.esri.arcgisruntime.internal.jni.CoreSelectionProperties;
						public m(): boolean;
						public f(): boolean;
						public j(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBookmark): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.m): void;
						public a(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onLayerViewStateChanged(param0: number, param1: number): void;
						public k(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.aq): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeocodeParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeocodeParameters>;
						public k(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public c(): string;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public e(): number;
						public h(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public a(param0: string): void;
						public g(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public j(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public i(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public f(): number;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeocodeResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeocodeResult>;
						public f(): string;
						public e(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public c(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public h(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeocodeResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeodatabase implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeodatabase>;
						public onLoadStatusChanged(param0: number): void;
						public v(): boolean;
						public q(): com.esri.arcgisruntime.internal.jni.CoreGUID;
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeodatabase;
						public r(): com.esri.arcgisruntime.internal.jni.id;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public c(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable;
						public finalize(): void;
						public t(): void;
						public onTransactionStatusChanged(param0: boolean): void;
						public w(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public o(): string;
						public f(): void;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.iq): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public m(): boolean;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable;
						public p(): string;
						public s(): void;
						public g_(): void;
						public l(): boolean;
						public j(): void;
						public n(): number;
						public onDoneLoading(param0: number): void;
						public constructor(param0: string);
						public u(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeodatabaseFeatureTable extends com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureType): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature, param1: com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo);
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeodatabaseFeatureTable;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public U(): com.esri.arcgisruntime.internal.jni.CoreGeodatabase;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public j(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureType, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeodatabaseSyncTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeodatabaseSyncTask>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase, param1: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters, param1: string): com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseJob;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.ic, param1: boolean, param2: com.esri.arcgisruntime.internal.jni.CoreGeodatabase): com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGUID): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase, param1: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase, param1: com.esri.arcgisruntime.internal.jni.ic): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g_(): void;
						public b(): string;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseParameters, param1: com.esri.arcgisruntime.internal.jni.CoreGeodatabase): com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseJob;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureServiceInfo;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeodesicEllipseParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeodesicEllipseParameters>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreAngularUnit): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreAngularUnit;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public g(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.by): void;
						public i(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number);
						public finalize(): void;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreAngularUnit, param2: com.esri.arcgisruntime.internal.jni.CorePoint, param3: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param4: number, param5: number, param6: com.esri.arcgisruntime.internal.jni.by, param7: number, param8: number);
						public c(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLinearUnit): void;
						public d(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public h(): number;
						public c(param0: number): void;
						public a(param0: number): void;
						public e(): com.esri.arcgisruntime.internal.jni.by;
						public j(): number;
						public d(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeodesicSectorParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeodesicSectorParameters>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreAngularUnit): void;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreAngularUnit, param2: com.esri.arcgisruntime.internal.jni.CorePoint, param3: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param4: number, param5: number, param6: com.esri.arcgisruntime.internal.jni.by, param7: number, param8: number, param9: number, param10: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public i(): number;
						public finalize(): void;
						public h(): number;
						public l(): number;
						public f(param0: number): void;
						public e(): com.esri.arcgisruntime.internal.jni.by;
						public d(param0: number): void;
						public b(param0: number): void;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.CoreAngularUnit;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
						public g(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.by): void;
						public k(): number;
						public c(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLinearUnit): void;
						public d(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public e(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number, param4: number);
						public c(param0: number): void;
						public a(param0: number): void;
						public j(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeodeticDistanceResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeodeticDistanceResult>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeodeticDistanceResult;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreAngularUnit;
						public e(): number;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
						public b(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeographicTransformation extends com.esri.arcgisruntime.internal.jni.CoreDatumTransformation {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeographicTransformation>;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeographicTransformation;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep);
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeographicTransformationStep {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public c(): string;
						public g(): com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep;
						public finalize(): void;
						public constructor(param0: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep): boolean;
						public b(): number;
						public f(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeographicTransformationStep;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeometricEffect {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeometricEffect>;
						public a: number;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.bu;
						public static nativeDestroy(param0: number): void;
						public b(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreGeometricEffect;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometricEffect;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeometry>;
						public constructor();
						public w(): string;
						public t(): com.esri.arcgisruntime.internal.jni.by;
						public static nativeDestroy(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): boolean;
						public u(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public m(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public finalize(): void;
						public p(): boolean;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public v(): number;
						public n(): com.esri.arcgisruntime.internal.jni.bw;
						public r(): boolean;
						public s(): boolean;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public q(): boolean;
						public o(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeometryBuilder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder>;
						public constructor();
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public t(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public u(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static nativeDestroy(param0: number): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public m(): number;
						public finalize(): void;
						public o(): boolean;
						public p(): boolean;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public r(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public q(): boolean;
						public s(): com.esri.arcgisruntime.internal.jni.bv;
						public static a(param0: com.esri.arcgisruntime.internal.jni.by, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeometryEngine {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeometryEngine>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static d(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static e(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param2: com.esri.arcgisruntime.internal.jni.bt): number;
						public static k(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static f(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): number;
						public static c(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static n(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param3: com.esri.arcgisruntime.internal.jni.bt): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CorePoint, param2: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param3: com.esri.arcgisruntime.internal.jni.CoreAngularUnit, param4: com.esri.arcgisruntime.internal.jni.bt): com.esri.arcgisruntime.internal.jni.CoreGeodeticDistanceResult;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeodesicEllipseParameters): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static h(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public static m(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static i(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.internal.jni.CoreProximityResult;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fg, param1: number): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fg, param1: com.esri.arcgisruntime.internal.jni.fg, param2: number): com.esri.arcgisruntime.internal.jni.fg;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fg, param1: com.esri.arcgisruntime.internal.jni.CorePoint, param2: number): number;
						public static c(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static h(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreMultipart, param1: com.esri.arcgisruntime.internal.jni.fg): com.esri.arcgisruntime.internal.jni.CoreMultipart;
						public static j(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static e(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.fg): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static d(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param3: number, param4: com.esri.arcgisruntime.internal.jni.bt, param5: boolean): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static i(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: com.esri.arcgisruntime.internal.jni.bx, param3: number, param4: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static f(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static j(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry, param2: string): boolean;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreAreaUnit, param2: com.esri.arcgisruntime.internal.jni.bt): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePolygon): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): number;
						public static o(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static c(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.internal.jni.CoreProximityResult;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static d(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): com.esri.arcgisruntime.internal.jni.CorePolygon;
						public static g(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static g(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: number, param2: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param3: number, param4: com.esri.arcgisruntime.internal.jni.CoreAngularUnit, param5: com.esri.arcgisruntime.internal.jni.bt): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param2: com.esri.arcgisruntime.internal.jni.CoreDatumTransformation): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static l(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeodesicSectorParameters): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param3: number, param4: com.esri.arcgisruntime.internal.jni.bt): com.esri.arcgisruntime.internal.jni.CorePolygon;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometry;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingBoolean extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingBoolean>;
						public constructor();
						public constructor(param0: boolean);
						public a(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingBoolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingDataFile extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter implements com.esri.arcgisruntime.internal.jni.gg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public a(): string;
						public d(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onRequestRequired(param0: number): void;
						public c(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile;
						public b(param0: string): void;
						public c(): string;
						public finalize(): void;
						public b(): string;
						public a(param0: string): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingDate extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDate>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDate;
						public constructor();
						public a(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingDouble extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDouble>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDouble;
						public constructor(param0: number);
						public a(): number;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingFeatureSet {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatureSet>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public c(): com.esri.arcgisruntime.internal.jni.by;
						public f(): com.esri.arcgisruntime.internal.jni.CoreIterator;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatureSet;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingFeatures extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter implements com.esri.arcgisruntime.internal.jni.gg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatures>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatures;
						public a(): string;
						public onRequestRequired(param0: number): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public finalize(): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElement);
						public a(param0: string): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
						public b(): boolean;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameters;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreJob;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingResult;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingLinearUnit extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingLinearUnit>;
						public b(): com.esri.arcgisruntime.internal.jni.ca;
						public constructor();
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreLinearUnit);
						public a(param0: com.esri.arcgisruntime.internal.jni.ca): void;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.ca);
						public constructor(param0: number);
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.dz);
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingLinearUnit;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingLong extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingLong>;
						public constructor();
						public constructor(param0: number);
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingLong;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingMultiValue extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingMultiValue>;
						public constructor();
						public a(): com.esri.arcgisruntime.internal.jni.cc;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingMultiValue;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.cc);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter>;
						public a: number;
						public constructor();
						public e(): number;
						public static nativeDestroy(param0: number): void;
						public f(): com.esri.arcgisruntime.internal.jni.cc;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingParameterInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameterInfo>;
						public f(): string;
						public constructor();
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): com.esri.arcgisruntime.internal.jni.cb;
						public finalize(): void;
						public l(): string;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public d(): com.esri.arcgisruntime.internal.jni.cc;
						public k(): com.esri.arcgisruntime.internal.jni.cc;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameterInfo;
						public e(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
						public i(): boolean;
						public j(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameters>;
						public g(): boolean;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.bz);
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public b(param0: boolean): void;
						public f(): boolean;
						public finalize(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public e(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public b(): com.esri.arcgisruntime.internal.jni.bz;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameters;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingRaster extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingRaster>;
						public e(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public d(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): string;
						public d(): string;
						public c(param0: string): void;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingRaster;
						public e(): number;
						public a(param0: string): void;
						public constructor(param0: string, param1: string);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingResult>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageLayer;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingString extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingString>;
						public constructor();
						public a(): string;
						public a(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingString;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingTask>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameters): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingJob;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public b(): string;
						public c(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingTaskInfo;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGeoprocessingTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGeoprocessingTaskInfo>;
						public f(): com.esri.arcgisruntime.internal.jni.bz;
						public constructor();
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): string;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
						public b(): string;
						public g(): string;
						public e(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingTaskInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGlobeCameraController extends com.esri.arcgisruntime.internal.jni.CoreCameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGlobeCameraController>;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGlobeCameraController;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.s;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGraphic extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGraphic>;
						public c(): java.lang.Long;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreSymbol);
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public d(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGraphic;
						public e(): boolean;
						public b(param0: boolean): void;
						public f(): boolean;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public h(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CoreMapView): com.esri.arcgisruntime.internal.jni.CorePoint;
						public a(param0: number, param1: number, param2: number, param3: number, param4: boolean, param5: boolean, param6: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGraphicsOverlay extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay>;
						public q(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public r(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay;
						public i(): number;
						public b(param0: boolean): void;
						public finalize(): void;
						public o(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public c(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ch): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer): void;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public h(): boolean;
						public l(): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public n(): com.esri.arcgisruntime.internal.jni.ch;
						public d(param0: boolean): void;
						public e(): boolean;
						public f(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public k(): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public m(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public p(): com.esri.arcgisruntime.internal.jni.CoreLayerSceneProperties;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: number): void;
						public j(): number;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGrid {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGrid>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public e(): boolean;
						public b(param0: boolean): void;
						public finalize(): void;
						public d(): com.esri.arcgisruntime.internal.jni.ci;
						public c(): number;
						public b(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ci): void;
						public f(): number;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public b(): boolean;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreGroupLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreGroupLayer>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreGroupLayer;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: boolean): void;
						public f(): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public g(): boolean;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreHatchFillSymbolLayer extends com.esri.arcgisruntime.internal.jni.bm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreHatchFillSymbolLayer>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bm;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerPolylineSymbol, param1: number);
						public constructor();
						public a(): number;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public b(param0: boolean): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreMultilayerPolylineSymbol;
						public c(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerPolylineSymbol): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreHatchFillSymbolLayer;
						public a(param0: number): void;
						public a(param0: boolean): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreHillshadeRenderer extends com.esri.arcgisruntime.internal.jni.CoreRasterRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreHillshadeRenderer>;
						public constructor();
						public h(): number;
						public n(): number;
						public i(): number;
						public l(): number;
						public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.hh, param4: number, param5: number, param6: number);
						public j(): number;
						public m(): com.esri.arcgisruntime.internal.jni.hh;
						public k(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreHistogramEqualizationStretchParameters extends com.esri.arcgisruntime.internal.jni.CoreStretchParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreHistogramEqualizationStretchParameters>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreIdInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreIdInfo>;
						public a: number;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public constructor();
						public i(): com.esri.arcgisruntime.internal.jni.co;
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public g(): number;
						public f(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreIdentifyGraphicsOverlayResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreIdentifyGraphicsOverlayResult>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdentifyGraphicsOverlayResult;
						public d(): com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay;
						public b(): com.esri.arcgisruntime.internal.jni.CoreError;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreIdentifyLayerResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreIdentifyLayerResult>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdentifyLayerResult;
						public e(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreImage {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreImage>;
						public constructor();
						public constructor(param0: native.Array<number>);
						public c(): number;
						public d(): native.Array<number>;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreImage;
						public b(): number;
						public e(): com.esri.arcgisruntime.internal.jni.CoreByteArray;
						public constructor(param0: number, param1: number, param2: native.Array<number>);
						public f(): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreImageAdjustmentLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer>;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public z(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public A(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public B(): number;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreImageServiceRaster extends com.esri.arcgisruntime.internal.jni.CoreRaster {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreImageServiceRaster>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageServiceRaster;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderingRule): void;
						public g_(): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public b(): com.esri.arcgisruntime.internal.jni.CoreRenderingRule;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterFunction);
						public j(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArcGISImageServiceInfo;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreImageTiledLayer extends com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer>;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public finalize(): void;
						public o(): com.esri.arcgisruntime.internal.jni.ew;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public y(): void;
						public f(): void;
						public b(): boolean;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e(param0: string): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public c(param0: string): void;
						public e(): boolean;
						public p(): com.esri.arcgisruntime.internal.jni.CoreTileInfo;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ew): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreImmutablePart {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreImmutablePart>;
						public constructor();
						public d(): number;
						public g(param0: number): number;
						public b(param0: number): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public finalize(): void;
						public e(param0: number): number;
						public e(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreImmutablePart;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public c(): boolean;
						public c(param0: number): com.esri.arcgisruntime.internal.jni.CorePoint;
						public f(param0: number): number;
						public d(param0: number): com.esri.arcgisruntime.internal.jni.CoreSegment;
						public b(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreImmutablePartCollection {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreImmutablePartCollection>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreImmutablePartCollection;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreImmutablePart): number;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreImmutablePart;
						public b(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreImmutablePointCollection {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreImmutablePointCollection>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreImmutablePointCollection;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CorePoint;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreIncident {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreIncident>;
						public a(param0: com.esri.arcgisruntime.internal.jni.z): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreNetworkLocation): void;
						public finalize(): void;
						public e(): number;
						public m(): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
						public o(): com.esri.arcgisruntime.internal.jni.CoreIncident;
						public h(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint);
						public i(): com.esri.arcgisruntime.internal.jni.ei;
						public l(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public d(param0: number): void;
						public b(param0: string): number;
						public b(param0: number): void;
						public constructor();
						public d(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreIncident;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): number;
						public j(): string;
						public k(): number;
						public c(): number;
						public a(param0: string): void;
						public e(param0: number): void;
						public n(): number;
						public b(): com.esri.arcgisruntime.internal.jni.z;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: string, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreInsets {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreInsets>;
						public constructor();
						public d(): number;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreInsets;
						public constructor(param0: number, param1: number, param2: number, param3: number);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreIntegratedMeshLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreIntegratedMeshLayer>;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreIntegratedMeshLayer;
						public g(): number;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreItem extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreItem>;
						public t(): com.esri.arcgisruntime.internal.jni.CoreLoadableImage;
						public k(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public f(param0: string): void;
						public d(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreImage): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreItem;
						public n(): string;
						public finalize(): void;
						public l(): string;
						public o(): com.esri.arcgisruntime.internal.jni.cu;
						public r(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public s(): string;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public w(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(param0: string): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public p(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public m(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public b(): string;
						public a(param0: string): void;
						public i(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelope): void;
						public u(): string;
						public q(): string;
						public v(): com.esri.arcgisruntime.internal.jni.CoreVector;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreItemResourceCache extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreItemResourceCache>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreItemResourceCache;
						public b(): com.esri.arcgisruntime.internal.jni.CoreLocalItem;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreIterator {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreIterator>;
						public constructor();
						public e(): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreIterator;
						public b(): boolean;
						public d(): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreJob implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.gg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreJob>;
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public onRequestRequired(param0: number): void;
						public onProgressChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public i(): number;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public n(): string;
						public m(): number;
						public finalize(): void;
						public onJobDone(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public p(): boolean;
						public r(): boolean;
						public q(): boolean;
						public s(): string;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public o(): com.esri.arcgisruntime.internal.jni.cy;
						public onJobChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
						public l(): com.esri.arcgisruntime.internal.jni.cz;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreJob;
						public j(): com.esri.arcgisruntime.internal.jni.CoreError;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreJobMessage {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreJobMessage>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreJobMessage;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLAudioPlayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLAudioPlayer>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ff): void;
						public onPause(): void;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.il): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fc): void;
						public onDestroy(): void;
						public onGetTotalDuration(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ag): void;
						public onPlay(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.aa): void;
						public a(param0: number): void;
						public constructor(param0: string);
						public b(param0: number): void;
						public onGetCurrentPosition(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.dc): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public c(): com.esri.arcgisruntime.internal.jni.dc;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLContainer extends com.esri.arcgisruntime.internal.jni.CoreKMLNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLContainer>;
						public e(param0: string): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.df;
						public d(): boolean;
						public d(param0: string): void;
						public c(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public d(param0: boolean): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public e(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.df): void;
						public b(): boolean;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
						public b(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLDataset extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLDataset>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreOnKMLNetworkLinkMessageReceivedCallbackListener): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public onKMLNodeRefreshStatusChanged(param0: number, param1: number): void;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreOnKMLNodeBalloonVisibilityChangedCallbackListener): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreOnKMLNodeRefreshStatusChangedCallbackListener): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLDataset;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
						public g_(): void;
						public onKMLNetworkLinkMessageReceived(param0: number, param1: native.Array<number>): void;
						public b(): string;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public constructor(param0: string);
						public onKMLNodeBalloonVisibilityChanged(param0: number, param1: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLDocument extends com.esri.arcgisruntime.internal.jni.CoreKMLContainer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLDocument>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLDocument;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public constructor();
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.df): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLFolder extends com.esri.arcgisruntime.internal.jni.CoreKMLContainer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLFolder>;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public constructor();
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.df): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLFolder;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLGeometry>;
						public b(): com.esri.arcgisruntime.internal.jni.db;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLGeometry;
						public f(): com.esri.arcgisruntime.internal.jni.dd;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.db, param2: boolean, param3: boolean);
						public e(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLGroundOverlay extends com.esri.arcgisruntime.internal.jni.CoreKMLNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLGroundOverlay>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIcon): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreKMLIcon);
						public d(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public f(param0: string): void;
						public d(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRGBColor): void;
						public e(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public h(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public b(param0: number): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreKMLIcon;
						public e(param0: string): void;
						public c(): java.lang.Long;
						public constructor();
						public g(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.db): void;
						public c(param0: string): void;
						public d(param0: boolean): void;
						public b(): com.esri.arcgisruntime.internal.jni.db;
						public e(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLGroundOverlay;
						public a(param0: number): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLIcon {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLIcon>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLIcon;
						public a(param0: com.esri.arcgisruntime.internal.jni.dm): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): com.esri.arcgisruntime.internal.jni.dm;
						public finalize(): void;
						public d(): com.esri.arcgisruntime.internal.jni.di;
						public a(param0: com.esri.arcgisruntime.internal.jni.di): void;
						public c(): number;
						public b(): string;
						public f(): number;
						public c(param0: number): void;
						public constructor(param0: string);
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLIconStyle extends com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLIconStyle>;
						public constructor();
						public d(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIcon): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.dc): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIcon, param1: number);
						public g(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLIconStyle;
						public e(): com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public f(): com.esri.arcgisruntime.internal.jni.CoreKMLIcon;
						public a(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLImageCoordinate {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate>;
						public constructor();
						public d(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.dl;
						public b(): number;
						public e(): com.esri.arcgisruntime.internal.jni.dl;
						public constructor(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.jni.dl, param3: com.esri.arcgisruntime.internal.jni.dl);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLLabelStyle extends com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLLabelStyle>;
						public constructor();
						public d(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.dc): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLLabelStyle;
						public a(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer implements com.esri.arcgisruntime.internal.jni.ii {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLLayer>;
						public u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public finalize(): void;
						public o(): boolean;
						public v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public s(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: boolean): void;
						public y(): void;
						public f(): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLDataset);
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public onFullTimeExtentChanged(): void;
						public e(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public a(): com.esri.arcgisruntime.internal.jni.CoreKMLDataset;
						public c(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLLineStyle extends com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLLineStyle>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLLineStyle;
						public constructor();
						public d(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.dc): void;
						public a(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLNetworkLink extends com.esri.arcgisruntime.internal.jni.CoreKMLNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLNetworkLink>;
						public a(param0: com.esri.arcgisruntime.internal.jni.dm): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public a(): string;
						public h(): com.esri.arcgisruntime.internal.jni.df;
						public j(): com.esri.arcgisruntime.internal.jni.di;
						public f(param0: string): void;
						public d(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public i(): number;
						public b(param0: boolean): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public c(param0: boolean): void;
						public l(): number;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public b(param0: number): void;
						public e(param0: string): void;
						public c(): java.lang.Long;
						public g(): boolean;
						public constructor();
						public g(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLNetworkLink;
						public c(param0: string): void;
						public d(param0: boolean): void;
						public e(): boolean;
						public k(): com.esri.arcgisruntime.internal.jni.dm;
						public f(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.di): void;
						public e(param0: boolean): void;
						public a(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.df): void;
						public m(): void;
						public c(param0: number): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
						public constructor(param0: string);
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLNode extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLNode>;
						public o(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public onRefreshStatusChangedEvent(): void;
						public w(): com.esri.arcgisruntime.internal.jni.CoreKMLStyle;
						public f(param0: string): void;
						public G(): number;
						public d(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public F(): string;
						public I(): com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint;
						public r(): string;
						public finalize(): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public s(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public B(): com.esri.arcgisruntime.internal.jni.dg;
						public C(): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public E(): com.esri.arcgisruntime.internal.jni.dj;
						public A(): string;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public H(): com.esri.arcgisruntime.internal.jni.CoreKMLStyle;
						public g(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static nativeDestroy(param0: number): void;
						public v(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public c(param0: string): void;
						public J(): void;
						public d(param0: boolean): void;
						public D(): com.esri.arcgisruntime.internal.jni.CoreError;
						public t(): string;
						public q(): number;
						public x(): string;
						public e(param0: boolean): void;
						public p(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public n(): number;
						public u(): string;
						public z(): boolean;
						public y(): boolean;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public onIconUpdate(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLPlacemark extends com.esri.arcgisruntime.internal.jni.CoreKMLNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLPlacemark>;
						public e(param0: string): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.de;
						public d(param0: string): void;
						public c(param0: string): void;
						public b(param0: string): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public d(param0: boolean): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public e(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLPlacemark;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLGeometry);
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CoreMapView): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLPolygonStyle extends com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLPolygonStyle>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.dc): void;
						public a(): number;
						public d(): boolean;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public e(): boolean;
						public b(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLPolygonStyle;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreColor);
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLScreenOverlay extends com.esri.arcgisruntime.internal.jni.CoreKMLNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLScreenOverlay>;
						public h(): com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIcon): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate;
						public i(): com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIcon);
						public f(param0: string): void;
						public d(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreKMLIcon;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public b(param0: number): void;
						public e(param0: string): void;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate): void;
						public g(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate): void;
						public c(param0: string): void;
						public d(param0: boolean): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate): void;
						public e(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLScreenOverlay;
						public b(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public f(): number;
						public a(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: number): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLStyle>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLLabelStyle): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLStyle;
						public d(): com.esri.arcgisruntime.internal.jni.CoreKMLLineStyle;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLLineStyle): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLPolygonStyle): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreKMLPolygonStyle;
						public b(): com.esri.arcgisruntime.internal.jni.CoreKMLIconStyle;
						public c(): com.esri.arcgisruntime.internal.jni.CoreKMLLabelStyle;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIconStyle): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLTour extends com.esri.arcgisruntime.internal.jni.CoreKMLNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLTour>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLTour;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public onTourStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.io): void;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public J(): void;
						public a(): com.esri.arcgisruntime.internal.jni.dk;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLTourController {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLTourController>;
						public a(param0: com.esri.arcgisruntime.internal.jni.y): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public onCurrentPositionChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLAudioPlayer): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.im): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ab): void;
						public d(): void;
						public finalize(): void;
						public onCreateAudioPlayer(param0: native.Array<number>): void;
						public c(): number;
						public e(): void;
						public onTotalDurationChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLTour): void;
						public b(): number;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreKMLViewpoint {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): number;
						public h(): com.esri.arcgisruntime.internal.jni.dn;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint;
						public finalize(): void;
						public b(): com.esri.arcgisruntime.internal.jni.db;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.internal.jni.db): com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint;
						public e(): number;
						public c(): number;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.internal.jni.db): com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint;
						public d(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public f(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLabelDefinition {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLabelDefinition>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLabelDefinition;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreLabelDefinition;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLabelingInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLabelingInfo>;
						public f(): com.esri.arcgisruntime.internal.jni.CoreTextSymbol;
						public g(): boolean;
						public constructor();
						public d(): number;
						public e(): number;
						public b(): string;
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLabelingInfo;
						public c(): com.esri.arcgisruntime.internal.jni.do;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLatitudeLongitudeGrid extends com.esri.arcgisruntime.internal.jni.CoreGrid {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLatitudeLongitudeGrid>;
						public constructor();
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.dq): void;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ci): void;
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: number): void;
						public g(): com.esri.arcgisruntime.internal.jni.dq;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLayer implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.dr, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLayer>;
						public onLoadStatusChanged(param0: number): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public onRequestRequired(param0: number): void;
						public f(param0: string): void;
						public d(param0: string): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreLayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public R(): com.esri.arcgisruntime.internal.jni.ds;
						public b(param0: boolean): void;
						public finalize(): void;
						public U(): com.esri.arcgisruntime.internal.jni.CoreLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public M(): string;
						public T(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public I(): number;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public Q(): number;
						public y(): void;
						public b(): boolean;
						public d(param0: number): void;
						public f(): void;
						public e(param0: string): void;
						public c(): java.lang.Long;
						public onSubLayerContentChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public P(): number;
						public e(): boolean;
						public O(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public N(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public J(): string;
						public K(): string;
						public k(): boolean;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public c(param0: number): void;
						public L(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public a(param0: boolean): void;
						public S(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLayerSceneProperties {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLayerSceneProperties>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.hw): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): number;
						public a(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLayerSceneProperties;
						public c(): com.esri.arcgisruntime.internal.jni.hw;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLayerTimeInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLayerTimeInfo>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): number;
						public j(): string;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLayerTimeInfo;
						public f(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public b(): string;
						public d(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public e(): string;
						public c(): boolean;
						public h(): com.esri.arcgisruntime.internal.jni.CoreTimeReference;
						public i(): com.esri.arcgisruntime.internal.jni.ik;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLayerViewState {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLayerViewState>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLayerViewState;
						public constructor();
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreError;
						public finalize(): void;
						public d(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLegendInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLegendInfo>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLegendInfo;
						public c(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLevelOfDetail {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLevelOfDetail>;
						public constructor();
						public d(): number;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): number;
						public constructor(param0: number, param1: number, param2: number);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLevelOfDetail;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLicense {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLicense>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public e(): com.esri.arcgisruntime.internal.jni.du;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public d(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLicense;
						public g(): com.esri.arcgisruntime.internal.jni.dw;
						public f(): com.esri.arcgisruntime.internal.jni.dv;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLicenseInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLicenseInfo>;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreLicenseInfo;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLicenseInfo;
						public constructor(param0: string);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLicenseResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLicenseResult>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.dv;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLicenseResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLineOfSight extends com.esri.arcgisruntime.internal.jni.CoreAnalysis {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLineOfSight>;
						public constructor();
						public onTargetVisibilityChanged(param0: number): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(): number;
						public i(): com.esri.arcgisruntime.internal.jni.dy;
						public static j(): number;
						public finalize(): void;
						public static k(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public static l(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.ie): void;
						public static a(param0: number): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLineSegment extends com.esri.arcgisruntime.internal.jni.CoreSegment {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLineSegment>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CorePoint);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLineSegment;
						public a(): number;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number): com.esri.arcgisruntime.internal.jni.CoreLineSegment;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CorePoint, param2: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLineSymbol extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLineSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public d(): number;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(): boolean;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLinearUnit extends com.esri.arcgisruntime.internal.jni.CoreUnit {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLinearUnit>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAreaUnit);
						public constructor();
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public b(param0: number): number;
						public a(param0: number): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.dz);
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param1: number): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreLinearUnit, param1: number): number;
						public a(): com.esri.arcgisruntime.internal.jni.dz;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLoadSettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLoadSettings>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.bi): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.bi;
						public b(): com.esri.arcgisruntime.internal.jni.bi;
						public b(param0: com.esri.arcgisruntime.internal.jni.bi): void;
						public e(): boolean;
						public finalize(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.bi): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLoadSettings;
						public d(): com.esri.arcgisruntime.internal.jni.bi;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLoadableImage extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLoadableImage>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLoadableImage;
						public j(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public onDoneLoading(param0: number): void;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocalItem extends com.esri.arcgisruntime.internal.jni.CoreItem {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocalItem>;
						public e(param0: string): void;
						public f(): string;
						public c(): java.lang.Long;
						public h(): com.esri.arcgisruntime.internal.jni.ef;
						public b(): string;
						public d(): string;
						public f(param0: string): void;
						public d(param0: string): void;
						public e(): string;
						public c(param0: string): void;
						public b(param0: string): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocalItem;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocalizedResource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocalizedResource>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocalizedResource;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocalizedResources {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocalizedResources>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.cf): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public onGetSupportedLanguages(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocation {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocation>;
						public e(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public constructor();
						public i(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime, param1: com.esri.arcgisruntime.internal.jni.CorePoint, param2: number, param3: number, param4: number, param5: number, param6: boolean);
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public g(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocation;
						public c(): number;
						public b(): number;
						public h(): number;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocation;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocationDataSource extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocationDataSource>;
						public c(): java.lang.Long;
						public a(param0: java.lang.Throwable): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLocation): void;
						public finalize(): void;
						public d(): any;
						public e(): void;
						public onLocationDataSourceStart(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hq): void;
						public onLocationDataSourceStop(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hm): void;
						public b(): boolean;
						public f(): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocationDisplay extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocationDisplay>;
						public o(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public e(): com.esri.arcgisruntime.internal.jni.eg;
						public t(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public b(param0: boolean): void;
						public m(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLocationDataSource): void;
						public finalize(): void;
						public w(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public k(): com.esri.arcgisruntime.internal.jni.CoreLocation;
						public a(param0: com.esri.arcgisruntime.internal.jni.hp): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public e(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public p(): boolean;
						public l(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public h(): number;
						public r(): boolean;
						public s(): boolean;
						public c(param0: boolean): void;
						public onStatusChanged(param0: boolean): void;
						public q(): boolean;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public constructor();
						public u(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.n): void;
						public v(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.eg): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public onAutoPanModeChanged(param0: number): void;
						public d(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocationDisplay;
						public a(param0: com.esri.arcgisruntime.internal.jni.eh): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public onLocationChanged(param0: number): void;
						public n(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public c(param0: number): void;
						public j(): number;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocationDistanceMeasurement extends com.esri.arcgisruntime.internal.jni.CoreAnalysis {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocationDistanceMeasurement>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CorePoint);
						public b(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreDistance;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public onMeasurementChanged(param0: number, param1: number, param2: number): void;
						public f(): com.esri.arcgisruntime.internal.jni.CoreDistance;
						public a(param0: com.esri.arcgisruntime.internal.jni.en): void;
						public finalize(): void;
						public e(): com.esri.arcgisruntime.internal.jni.iw;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDistance;
						public a(param0: com.esri.arcgisruntime.internal.jni.iw): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocationLineOfSight extends com.esri.arcgisruntime.internal.jni.CoreLineOfSight {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocationLineOfSight>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CorePoint);
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ie): void;
						public static a(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocationToScreenResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocationToScreenResult>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocationToScreenResult;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): native.Array<number>;
						public c(): com.esri.arcgisruntime.internal.jni.gp;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocationViewshed extends com.esri.arcgisruntime.internal.jni.CoreViewshed {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocationViewshed>;
						public constructor();
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public static c(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreCamera, param1: number, param2: number);
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreCamera): void;
						public e(): number;
						public c(): number;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public d(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
						public a(param0: number): void;
						public b(): boolean;
						public a(param0: boolean): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocatorAttribute {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocatorAttribute>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocatorAttribute;
						public a(): number;
						public d(): boolean;
						public e(): com.esri.arcgisruntime.internal.jni.ba;
						public c(): string;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocatorInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocatorInfo>;
						public constructor();
						public m(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocatorInfo;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public e(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public h(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public b(): string;
						public l(): boolean;
						public k(): boolean;
						public i(): boolean;
						public j(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreLocatorTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreLocatorTask>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CoreReverseGeocodeParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSuggestResult): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(): com.esri.arcgisruntime.internal.jni.CoreLocatorInfo;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreGeocodeParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSuggestParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeocodeParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSuggestResult, param1: com.esri.arcgisruntime.internal.jni.CoreGeocodeParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public b(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreLocatorTask;
						public j(): void;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onDoneLoading(param0: number): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMGRSGrid extends com.esri.arcgisruntime.internal.jni.CoreGrid {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMGRSGrid>;
						public constructor();
						public g(): com.esri.arcgisruntime.internal.jni.el;
						public a(): number;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.el): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ci): void;
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMap implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMap>;
						public onLoadStatusChanged(param0: number): void;
						public B(): string;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.q, param1: number, param2: number, param3: number);
						public p(): number;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public s(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreBasemap);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreMap;
						public finalize(): void;
						public k(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public f(): void;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.p): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public m(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMap;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): void;
						public g_(): void;
						public u(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public z(): boolean;
						public i(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public c(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreItem): void;
						public constructor(param0: string);
						public y(): string;
						public t(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public onBasemapChanged(param0: number): void;
						public A(): com.esri.arcgisruntime.internal.jni.CoreMap;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBasemap): void;
						public q(): com.esri.arcgisruntime.internal.jni.CoreOfflineSettings;
						public x(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLoadSettings): void;
						public r(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public g(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public n(): com.esri.arcgisruntime.internal.jni.CoreLoadSettings;
						public v(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public o(): number;
						public w(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): string;
						public j(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public onDoneLoading(param0: number): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMapServiceCapabilities {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMapServiceCapabilities>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public c(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMapServiceCapabilities;
						public b(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMapServiceLayerIdInfo extends com.esri.arcgisruntime.internal.jni.CoreIdInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMapServiceLayerIdInfo>;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreIdInfo;
						public d(): number;
						public j(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): number;
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMapServiceLayerIdInfo;
						public a(): boolean;
						public e(): com.esri.arcgisruntime.internal.jni.e;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMapSublayerSource extends com.esri.arcgisruntime.internal.jni.CoreSublayerSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMapSublayerSource>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMapSublayerSource;
						public constructor();
						public a(): string;
						public constructor(param0: number);
						public a(param0: string): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public b(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMapView extends com.esri.arcgisruntime.internal.jni.CoreGeoView {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMapView>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ka): void;
						public a(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.go): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeExtent): void;
						public s(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ao): void;
						public v(): com.esri.arcgisruntime.internal.jni.CoreInsets;
						public b(param0: boolean): void;
						public c(): com.esri.arcgisruntime.internal.jni.ap;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice, param1: com.esri.arcgisruntime.internal.jni.cg): void;
						public x(): com.esri.arcgisruntime.internal.jni.ka;
						public A(): boolean;
						public b(param0: native.Array<number>): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay): void;
						public r(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint, param1: number, param2: com.esri.arcgisruntime.internal.jni.b): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.jw): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.hk): void;
						public a(): number;
						public b(param0: native.Array<number>, param1: number): void;
						public o(): com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid;
						public d(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): void;
						public a(param0: number, param1: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: number, param1: number): void;
						public a(param0: native.Array<number>): com.esri.arcgisruntime.internal.jni.CorePoint;
						public b(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreMap): void;
						public y(): boolean;
						public b(param0: number, param1: native.Array<number>): void;
						public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.fs);
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.es): void;
						public a(param0: number, param1: native.Array<number>): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gl): void;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public q(): com.esri.arcgisruntime.internal.jni.CoreLocationDisplay;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public n(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.jx): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreInsets): void;
						public t(): number;
						public c(param0: boolean): void;
						public onScaleChanged(): void;
						public w(): com.esri.arcgisruntime.internal.jni.CorePolygon;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreImage, param1: com.esri.arcgisruntime.internal.jni.CoreImage): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewLabelProperties): void;
						public u(): number;
						public b(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): native.Array<number>;
						public c(param0: native.Array<number>): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.dt): void;
						public a(param0: native.Array<number>, param1: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer): com.esri.arcgisruntime.internal.jni.CoreLayerViewState;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid): void;
						public z(): void;
						public onRotationChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBookmark): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): string;
						public b(param0: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.m): void;
						public a(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGrid): void;
						public p(): com.esri.arcgisruntime.internal.jni.CoreViewLabelProperties;
						public a(param0: com.esri.arcgisruntime.internal.jni.aq): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMarkerSceneSymbol extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMarkerSceneSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public g(): number;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public i(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public m(): number;
						public k(): number;
						public a(): com.esri.arcgisruntime.internal.jni.gr;
						public a(param0: com.esri.arcgisruntime.internal.jni.gr): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public n(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public l(): number;
						public c(param0: number): void;
						public a(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMarkerSymbol extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public a(): number;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g(): number;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public i(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public k(): number;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public m(): com.esri.arcgisruntime.internal.jni.gm;
						public a(param0: com.esri.arcgisruntime.internal.jni.hy): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public e(param0: number): void;
						public b(): com.esri.arcgisruntime.internal.jni.hy;
						public c(param0: number): void;
						public l(): number;
						public a(param0: number): void;
						public d(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMarkerSymbolLayer extends com.esri.arcgisruntime.internal.jni.CoreSymbolLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer>;
						public constructor();
						public g(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public i(): number;
						public b(param0: boolean): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer;
						public c(): number;
						public b(): number;
						public c(param0: number): void;
						public a(param0: number): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public d(param0: number): void;
						public a(param0: boolean): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMinMaxStretchParameters extends com.esri.arcgisruntime.internal.jni.CoreStretchParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMinMaxStretchParameters>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public a(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: com.esri.arcgisruntime.internal.jni.CoreVector);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMobileBasemapLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMobileBasemapLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public e(): boolean;
						public b(param0: boolean): void;
						public g_(): void;
						public a(param0: number): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMobileBasemapLayer;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public k(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: number): void;
						public f(): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMobileMapPackage extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMobileMapPackage>;
						public onLoadStatusChanged(param0: number): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public k(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public l(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMobileMapPackage;
						public g(): com.esri.arcgisruntime.internal.jni.CoreLocatorTask;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): com.esri.arcgisruntime.internal.jni.CoreExpiration;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g_(): void;
						public j(): void;
						public m(): void;
						public onDoneLoading(param0: number): void;
						public static a(param0: string, param1: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMobileScenePackage extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMobileScenePackage>;
						public onLoadStatusChanged(param0: number): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public l(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreLocatorTask;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): com.esri.arcgisruntime.internal.jni.CoreExpiration;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g_(): void;
						public i(): string;
						public j(): void;
						public m(): void;
						public onDoneLoading(param0: number): void;
						public static a(param0: string, param1: string): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreModelSceneSymbol extends com.esri.arcgisruntime.internal.jni.CoreMarkerSceneSymbol implements com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreModelSceneSymbol>;
						public onLoadStatusChanged(param0: number): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public o(): com.esri.arcgisruntime.internal.jni.ia;
						public finalize(): void;
						public a(): com.esri.arcgisruntime.internal.jni.gr;
						public constructor(param0: string, param1: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(param0: com.esri.arcgisruntime.internal.jni.ia): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.gr): void;
						public g_(): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreModelSceneSymbol;
						public j(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public onDoneLoading(param0: number): void;
						public c(param0: number): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMosaicDatasetRaster extends com.esri.arcgisruntime.internal.jni.CoreRaster {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMosaicDatasetRaster>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMosaicDatasetRaster;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase, param1: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreAddRastersParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeodatabase, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreMosaicDatasetRaster;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterFunction);
						public j(): void;
						public static a(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreMosaicDatasetRaster;
						public constructor(param0: string, param1: string);
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultilayerPointSymbol extends com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultilayerPointSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public d(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMultilayerPointSymbol;
						public a(): number;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.hy): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public b(): com.esri.arcgisruntime.internal.jni.hy;
						public a(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultilayerPolygonSymbol extends com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultilayerPolygonSymbol>;
						public c(): java.lang.Long;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMultilayerPolygonSymbol;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultilayerPolylineSymbol extends com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultilayerPolylineSymbol>;
						public c(): java.lang.Long;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public a(): number;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMultilayerPolylineSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultilayerSymbol extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol>;
						public c(): java.lang.Long;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public f(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public constructor();
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public e(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultipart extends com.esri.arcgisruntime.internal.jni.CoreGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultipart>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreImmutablePartCollection;
						public constructor();
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): boolean;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultipartBuilder extends com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreMutablePartCollection;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public a(param0: number, param1: number): number;
						public a(param0: number, param1: number, param2: number): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.by, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultipoint extends com.esri.arcgisruntime.internal.jni.CoreGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultipoint>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreImmutablePointCollection;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMultipoint;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): boolean;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMultipointBuilder extends com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMultipointBuilder>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMultipointBuilder;
						public a(): com.esri.arcgisruntime.internal.jni.CoreMutablePointCollection;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultipoint);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public static a(param0: com.esri.arcgisruntime.internal.jni.by, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMutablePart {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMutablePart>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public g(param0: number): number;
						public i(param0: number): void;
						public a(param0: number, param1: number, param2: number): void;
						public a(param0: number, param1: number): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public finalize(): void;
						public b(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSegment): void;
						public e(param0: number): number;
						public e(): number;
						public c(): boolean;
						public c(param0: number): com.esri.arcgisruntime.internal.jni.CorePoint;
						public f(param0: number): number;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSegment): void;
						public a(param0: number, param1: number, param2: number, param3: number): void;
						public b(param0: number, param1: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public h(param0: number): void;
						public constructor();
						public d(): number;
						public b(param0: number): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public b(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public a(param0: number, param1: number, param2: number): number;
						public h(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMutablePart;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public d(param0: number): com.esri.arcgisruntime.internal.jni.CoreSegment;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSegment): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMutablePartCollection {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMutablePartCollection>;
						public b(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreMutablePart): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreMutablePart;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreMutablePart): number;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreMutablePart): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public finalize(): void;
						public c(): number;
						public e(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreMutablePart): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMutablePartCollection;
						public c(param0: number): void;
						public b(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreMutablePointCollection {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreMutablePointCollection>;
						public b(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreMutablePointCollection): void;
						public a(param0: number, param1: number, param2: number): void;
						public a(param0: number, param1: number): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMutablePointCollection;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public a(param0: number, param1: number, param2: number): number;
						public finalize(): void;
						public c(): number;
						public e(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreImmutablePointCollection): void;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public a(param0: number, param1: number, param2: number, param3: number): void;
						public c(param0: number): void;
						public b(param0: number, param1: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public b(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CorePoint;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreNMEADataSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreNMEADataSource>;
						public constructor();
						public onOnLocationChanged(param0: number): void;
						public a(param0: native.Array<number>): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ep): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreNMEALocation extends com.esri.arcgisruntime.internal.jni.CoreLocation {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreNMEALocation>;
						public constructor();
						public p(): number;
						public r(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime, param1: com.esri.arcgisruntime.internal.jni.CorePoint, param2: number, param3: number, param4: number, param5: number, param6: boolean);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime, param1: com.esri.arcgisruntime.internal.jni.CorePoint, param2: number, param3: number, param4: number, param5: number, param6: boolean, param7: number, param8: number, param9: number, param10: number, param11: number, param12: com.esri.arcgisruntime.internal.jni.eq, param13: com.esri.arcgisruntime.internal.jni.CoreVector, param14: com.esri.arcgisruntime.internal.jni.eo, param15: number);
						public n(): com.esri.arcgisruntime.internal.jni.eo;
						public m(): number;
						public k(): number;
						public o(): com.esri.arcgisruntime.internal.jni.eq;
						public q(): number;
						public c(): number;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreNMEALocation;
						public l(): number;
						public j(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreNMEASatelliteInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreNMEASatelliteInfo>;
						public constructor();
						public d(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreNMEASatelliteInfo;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): number;
						public constructor(param0: number, param1: number, param2: number, param3: boolean, param4: com.esri.arcgisruntime.internal.jni.er);
						public e(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreNavigationResources {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreNavigationResources>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ea): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public onLoadAbbreviationDictionary(param0: native.Array<number>, param1: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreNetworkLocation {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreNetworkLocation>;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreSourceObjectPosition;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: string): void;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSourceObjectPosition): void;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineCapability {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineCapability>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineCapability;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): boolean;
						public b(): com.esri.arcgisruntime.internal.jni.CoreError;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapCapabilities {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapCapabilities>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapCapabilities;
						public d(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapItemInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapItemInfo>;
						public f(): string;
						public e(param0: string): void;
						public constructor();
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(param0: string): void;
						public d(param0: string): void;
						public c(): string;
						public b(param0: string): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreImage): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapItemInfo;
						public finalize(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public b(): string;
						public a(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapParametersKey extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey>;
						public c(): java.lang.Long;
						public d(): com.esri.arcgisruntime.internal.jni.ey;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey): boolean;
						public finalize(): void;
						public b(): string;
						public e(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
						public f(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapSyncJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncJob;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public d(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapSyncLayerResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncLayerResult>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncLayerResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapSyncParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncParameters>;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.fo;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ic): void;
						public c(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncParameters;
						public a(param0: com.esri.arcgisruntime.internal.jni.fo): void;
						public a(param0: boolean): void;
						public d(): com.esri.arcgisruntime.internal.jni.ic;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapSyncResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncResult>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncResult;
						public c(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): boolean;
						public e(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapSyncTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncTask>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMap);
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public g(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdateCapabilities;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreMap;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncParameters): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncJob;
						public k(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapTask>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onLoadStatusChanged(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMap);
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapParameters, param1: string): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePortalItem);
						public a(param0: com.esri.arcgisruntime.internal.jni.bc): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapTask;
						public c(): com.esri.arcgisruntime.internal.jni.CorePortalItem;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters, param1: string): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapJob;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameterOverrides): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea, param1: string): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onEnsureOnlineMapHasRequestHandler(): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea, param1: string, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob;
						public b(): com.esri.arcgisruntime.internal.jni.CoreMap;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapUpdateCapabilities {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdateCapabilities>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdateCapabilities;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): boolean;
						public b(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineMapUpdatesInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdatesInfo>;
						public e(): com.esri.arcgisruntime.internal.jni.ez;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdatesInfo;
						public c(): boolean;
						public b(): com.esri.arcgisruntime.internal.jni.ez;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOfflineSettings {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOfflineSettings>;
						public d(): com.esri.arcgisruntime.internal.jni.gk;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public e(): boolean;
						public b(): com.esri.arcgisruntime.internal.jni.k;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOfflineSettings;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOnKMLNetworkLinkMessageReceivedCallbackListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOnKMLNetworkLinkMessageReceivedCallbackListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.CoreOnKMLNetworkLinkMessageReceivedCallbackListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNetworkLink, param1: string): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNetworkLink, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOnKMLNodeBalloonVisibilityChangedCallbackListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOnKMLNodeBalloonVisibilityChangedCallbackListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.CoreOnKMLNodeBalloonVisibilityChangedCallbackListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onKMLNodeBalloonVisibilityChanged(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode, param1: boolean): void;
						});
						public constructor();
						public onKMLNodeBalloonVisibilityChanged(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode, param1: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOnKMLNodeRefreshStatusChangedCallbackListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOnKMLNodeRefreshStatusChangedCallbackListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.CoreOnKMLNodeRefreshStatusChangedCallbackListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode, param1: com.esri.arcgisruntime.internal.jni.dj): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode, param1: com.esri.arcgisruntime.internal.jni.dj): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOpenStreetMapLayer extends com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOpenStreetMapLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ig): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param3: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static e(param0: number): com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): boolean;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTileKey, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreStringDictionary): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
						public e(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOpenStreetMapLayer;
						public g_(): void;
						public a(param0: number): boolean;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreVector);
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param2: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public j(): void;
						public k(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.ew): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOrbitGeoElementCameraController extends com.esri.arcgisruntime.internal.jni.CoreCameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOrbitGeoElementCameraController>;
						public p(): number;
						public i(param0: number): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreOrbitGeoElementCameraController;
						public s(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElement, param1: number);
						public b(param0: boolean): void;
						public m(): number;
						public finalize(): void;
						public e(): number;
						public a(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public l(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public f(param0: number): void;
						public b(param0: number): void;
						public h(param0: number): void;
						public constructor();
						public d(): number;
						public b(): com.esri.arcgisruntime.internal.jni.s;
						public a(): number;
						public d(param0: boolean): void;
						public q(): number;
						public c(): number;
						public k(param0: number): void;
						public c(param0: number): void;
						public a(param0: boolean): void;
						public g(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.al): void;
						public onCameraHeadingOffsetChanged(): void;
						public f(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ck): void;
						public onCameraPitchOffsetChanged(): void;
						public t(): number;
						public j(param0: number): void;
						public c(param0: boolean): void;
						public l(): number;
						public d(param0: number): void;
						public g(): boolean;
						public r(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public u(): number;
						public h(): boolean;
						public onCameraDistanceChanged(): void;
						public o(): number;
						public f(): boolean;
						public e(param0: boolean): void;
						public v(): number;
						public k(): boolean;
						public e(param0: number): void;
						public n(): number;
						public b(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.fd): void;
						public i(): boolean;
						public a(param0: number): void;
						public j(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOrbitLocationCameraController extends com.esri.arcgisruntime.internal.jni.CoreCameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOrbitLocationCameraController>;
						public g(param0: number): void;
						public i(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.al): void;
						public onCameraHeadingOffsetChanged(): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreOrbitLocationCameraController;
						public i(): number;
						public b(param0: boolean): void;
						public m(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ck): void;
						public finalize(): void;
						public e(): number;
						public a(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onCameraPitchOffsetChanged(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public c(param0: boolean): void;
						public l(): number;
						public f(param0: number): void;
						public d(param0: number): void;
						public b(param0: number): void;
						public g(): boolean;
						public h(param0: number): void;
						public constructor();
						public d(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CorePoint);
						public b(): com.esri.arcgisruntime.internal.jni.s;
						public a(): number;
						public h(): boolean;
						public o(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public onCameraDistanceChanged(): void;
						public f(): boolean;
						public k(): number;
						public c(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number);
						public e(param0: number): void;
						public n(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.fd): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public j(): number;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOrderBy {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOrderBy>;
						public c(): com.esri.arcgisruntime.internal.jni.hi;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOrderBy;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.hi);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreOwnershipBasedAccessControlInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreOwnershipBasedAccessControlInfo>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreOwnershipBasedAccessControlInfo;
						public a(): number;
						public d(): boolean;
						public c(): boolean;
						public e(): boolean;
						public b(): boolean;
						public f(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePercentClipStretchParameters extends com.esri.arcgisruntime.internal.jni.CoreStretchParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePercentClipStretchParameters>;
						public constructor();
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePictureFillSymbol extends com.esri.arcgisruntime.internal.jni.CoreFillSymbol implements com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePictureFillSymbol>;
						public onLoadStatusChanged(param0: number): void;
						public p(): number;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public i(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public m(): number;
						public finalize(): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreLineSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public g(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePictureFillSymbol;
						public f(): void;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public o(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLineSymbol): void;
						public k(): number;
						public g_(): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public j(): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public n(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImage);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public onDoneLoading(param0: number): void;
						public c(param0: number): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: number): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePictureFillSymbolLayer extends com.esri.arcgisruntime.internal.jni.bm implements com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePictureFillSymbolLayer>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bm;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public b(param0: boolean): void;
						public finalize(): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CorePictureFillSymbolLayer;
						public j(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImage);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePictureMarkerSymbol extends com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol implements com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbol>;
						public onLoadStatusChanged(param0: number): void;
						public g(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public n(): string;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbol;
						public p(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public f(param0: number): void;
						public f(): void;
						public h(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public r(): number;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(): number;
						public g(): number;
						public o(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public q(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.hy): void;
						public j(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImage);
						public onDoneLoading(param0: number): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePictureMarkerSymbolLayer extends com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer implements com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbolLayer>;
						public onLoadStatusChanged(param0: number): void;
						public k(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public b(param0: boolean): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbolLayer;
						public m(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public g_(): void;
						public j(): void;
						public b(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImage);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public onDoneLoading(param0: number): void;
						public a(param0: number): void;
						public constructor(param0: string);
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePlatformHelpersProvider {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePlatformHelpersProvider>;
						public constructor();
						public onConvertDateTime(param0: number, param1: number, param2: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.w): void;
						public onConvertNumber(param0: number, param1: number, param2: boolean, param3: boolean, param4: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.x): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePoint extends com.esri.arcgisruntime.internal.jni.CoreGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePoint>;
						public static a(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CorePoint;
						public constructor();
						public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public d(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePoint;
						public a(): number;
						public constructor(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): boolean;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
						public c(): number;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public b(): number;
						public static a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CorePoint;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePointBarrier {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePointBarrier>;
						public f(): string;
						public e(): com.esri.arcgisruntime.internal.jni.ei;
						public g(): com.esri.arcgisruntime.internal.jni.o;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.o): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.z): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public finalize(): void;
						public c(): com.esri.arcgisruntime.internal.jni.z;
						public a(param0: string): void;
						public b(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public h(): com.esri.arcgisruntime.internal.jni.CorePointBarrier;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint);
						public a(param0: number): void;
						public b(param0: string): number;
						public a(param0: string, param1: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePointBarrier;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePointBuilder extends com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePointBuilder>;
						public constructor();
						public d(): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public a(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public a(param0: number, param1: number): void;
						public c(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePointBuilder;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public b(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint);
						public c(param0: number): void;
						public a(param0: number): void;
						public d(param0: number): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.by, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePointCloudLayer extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePointCloudLayer>;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePointCloudLayer;
						public g(): number;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePolygon extends com.esri.arcgisruntime.internal.jni.CoreMultipart {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePolygon>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreImmutablePartCollection;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePolygon;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): boolean;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public b(): com.esri.arcgisruntime.internal.jni.fg;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePolygonBarrier {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePolygonBarrier>;
						public e(): com.esri.arcgisruntime.internal.jni.o;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.o): void;
						public c(): com.esri.arcgisruntime.internal.jni.CorePolygon;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CorePolygonBarrier;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePolygonBarrier;
						public a(param0: string): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePolygon);
						public b(): number;
						public a(param0: number): void;
						public b(param0: string): number;
						public a(param0: string, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePolygonBuilder extends com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePolygonBuilder>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public constructor();
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public a(param0: number, param1: number): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public a(param0: number, param1: number, param2: number): number;
						public b(): com.esri.arcgisruntime.internal.jni.fg;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePolygonBuilder;
						public a(): com.esri.arcgisruntime.internal.jni.CoreMutablePartCollection;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePolygon);
						public static a(param0: com.esri.arcgisruntime.internal.jni.by, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePolylineBarrier {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePolylineBarrier>;
						public c(): com.esri.arcgisruntime.internal.jni.fg;
						public e(): com.esri.arcgisruntime.internal.jni.o;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.fg);
						public a(param0: com.esri.arcgisruntime.internal.jni.o): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePolylineBarrier;
						public finalize(): void;
						public f(): com.esri.arcgisruntime.internal.jni.CorePolylineBarrier;
						public a(param0: string): void;
						public b(): number;
						public a(param0: number): void;
						public b(param0: string): number;
						public a(param0: string, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePolylineBuilder extends com.esri.arcgisruntime.internal.jni.CoreMultipartBuilder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePolylineBuilder>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreMutablePartCollection;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.fg);
						public a(param0: number, param1: number): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePolylineBuilder;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference);
						public a(param0: number, param1: number, param2: number): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.by, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopup {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopup>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopup;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupField): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: string): string;
						public finalize(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElement, param1: com.esri.arcgisruntime.internal.jni.CorePopupDefinition);
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): com.esri.arcgisruntime.internal.jni.CorePopup;
						public c(): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public e(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupDefinition extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupDefinition>;
						public i(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public h(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public f(param0: boolean): void;
						public b(param0: string): void;
						public b(param0: boolean): void;
						public n(): string;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesDefinition): void;
						public c(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public b(): boolean;
						public f(): string;
						public c(): java.lang.Long;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public d(param0: boolean): void;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreElement): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public e(): boolean;
						public m(): boolean;
						public l(): boolean;
						public e(param0: boolean): void;
						public a(param0: string): void;
						public k(): boolean;
						public j(): com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesDefinition;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupExpression {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupExpression>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupExpression;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(param0: string): void;
						public c(): string;
						public b(param0: string): void;
						public finalize(): void;
						public d(): com.esri.arcgisruntime.internal.jni.fi;
						public b(): string;
						public a(param0: string): void;
						public e(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.fi): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupField {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupField>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupFieldFormat): void;
						public f(): string;
						public constructor();
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.fk;
						public c(param0: string): void;
						public b(param0: string): void;
						public e(): boolean;
						public b(param0: boolean): void;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupField;
						public b(): string;
						public a(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fk): void;
						public c(): com.esri.arcgisruntime.internal.jni.CorePopupFieldFormat;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupFieldFormat {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupFieldFormat>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupFieldFormat;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.fh): void;
						public b(): com.esri.arcgisruntime.internal.jni.fh;
						public b(param0: number): void;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupMedia {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupMedia>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupMediaValue): void;
						public finalize(): void;
						public d(): com.esri.arcgisruntime.internal.jni.fj;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupMedia;
						public b(): string;
						public a(param0: string): void;
						public e(): com.esri.arcgisruntime.internal.jni.CorePopupMediaValue;
						public a(param0: com.esri.arcgisruntime.internal.jni.fj): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupMediaValue {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupMediaValue>;
						public f(): string;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(param0: string): void;
						public d(param0: string): void;
						public c(): string;
						public b(param0: string): void;
						public finalize(): void;
						public a(param0: string): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public e(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupMediaValue;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupRelatedFeaturesDefinition {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesDefinition>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesDefinition;
						public b(): boolean;
						public a(param0: boolean): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePopupRelatedFeaturesSortOrder {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesSortOrder>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesSortOrder;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreOrderBy): void;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.CoreOrderBy;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePortal implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePortal>;
						public c(): java.lang.Long;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public i(): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePortal;
						public a(param0: com.esri.arcgisruntime.internal.jni.cq): void;
						public finalize(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePortalInfo, param1: java.lang.Throwable): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
						public onPortalInfoRequest(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePortalInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePortalInfo>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public constructor(param0: string);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePortalItem extends com.esri.arcgisruntime.internal.jni.CoreItem implements com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePortalItem>;
						public onLoadStatusChanged(param0: number): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public f(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreImage): void;
						public M(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fl): void;
						public z(): string;
						public E(): string;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CorePortalItem;
						public P(): string;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePortal, param1: string);
						public C(): boolean;
						public N(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public f(): void;
						public c(): java.lang.Long;
						public constructor();
						public B(): number;
						public g(param0: string): void;
						public a(): number;
						public c(param0: string): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public g_(): void;
						public y(): com.esri.arcgisruntime.internal.jni.fl;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreEnvelope): void;
						public G(): com.esri.arcgisruntime.internal.jni.CorePortal;
						public I(): string;
						public L(): string;
						public J(): number;
						public F(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreItem;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public A(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePortal, param1: com.esri.arcgisruntime.internal.jni.fn);
						public h(param0: string): void;
						public K(): com.esri.arcgisruntime.internal.jni.fn;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public D(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public x(): string;
						public H(): number;
						public b(): string;
						public a(param0: string): void;
						public i(): string;
						public j(): void;
						public O(): number;
						public i(param0: string): void;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CorePortal);
						public onDoneLoading(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CorePreplannedMapArea implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea>;
						public c(): java.lang.Long;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public k(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdateCapabilities;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public l(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePortalItem);
						public j(): void;
						public i(): com.esri.arcgisruntime.internal.jni.CorePortalItem;
						public onDoneLoading(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreProximityResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreProximityResult>;
						public constructor();
						public d(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreProximityResult;
						public e(): number;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreQueryParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreQueryParameters>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor();
						public d(): number;
						public j(): com.esri.arcgisruntime.internal.jni.hl;
						public k(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeExtent): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public finalize(): void;
						public l(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public c(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public a(param0: string): void;
						public h(): number;
						public i(): boolean;
						public a(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hl): void;
						public b(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRGBColor extends com.esri.arcgisruntime.internal.jni.CoreColor {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRGBColor>;
						public constructor();
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRGBColor;
						public b(): number;
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRGBRenderer extends com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRGBRenderer>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public e(): com.esri.arcgisruntime.internal.jni.fb;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreStretchParameters, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: com.esri.arcgisruntime.internal.jni.CoreVector, param3: boolean, param4: com.esri.arcgisruntime.internal.jni.fb, param5: com.esri.arcgisruntime.internal.jni.CoreRaster, param6: com.esri.arcgisruntime.internal.jni.CoreVector);
						public d(): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreStretchParameters, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: com.esri.arcgisruntime.internal.jni.CoreVector, param3: boolean);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRangeDomain extends com.esri.arcgisruntime.internal.jni.CoreDomain {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRangeDomain>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRangeDomain;
						public e(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public a(): com.esri.arcgisruntime.internal.jni.CoreElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRaster extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRaster>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public k(): com.esri.arcgisruntime.internal.jni.fv;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public g(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public l(): string;
						public g_(): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterFunction);
						public j(): void;
						public onDoneLoading(param0: number): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreRasterFunction;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRasterElevationSource extends com.esri.arcgisruntime.internal.jni.CoreElevationSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRasterElevationSource>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public b(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRasterElevationSource;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreElevationSource;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: string): void;
						public j(): void;
						public f(): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRasterFunction {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRasterFunction>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRasterFunction;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreRasterFunction;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public constructor(param0: string);
						public b(): com.esri.arcgisruntime.internal.jni.CoreRasterFunctionArguments;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRasterFunctionArguments {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRasterFunctionArguments>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: string, param1: string): void;
						public a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreRaster): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRasterFunctionArguments;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRasterLayer extends com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer implements com.esri.arcgisruntime.internal.jni.ii {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRasterLayer>;
						public u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public finalize(): void;
						public o(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer): void;
						public v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public s(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: boolean): void;
						public y(): void;
						public f(): void;
						public b(): boolean;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public a(): com.esri.arcgisruntime.internal.jni.CoreRaster;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public onFullTimeExtentChanged(): void;
						public e(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public g_(): void;
						public a(param0: number): boolean;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRaster);
						public j(): void;
						public k(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRasterLayer;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRasterRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRasterRenderer>;
						public a: number;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public o(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRasterSublayerSource extends com.esri.arcgisruntime.internal.jni.CoreSublayerSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRasterSublayerSource>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRasterSublayerSource;
						public a(): string;
						public b(): string;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public constructor(param0: string, param1: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRelatedFeatureQueryResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRelatedFeatureQueryResult>;
						public constructor();
						public g(): com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable;
						public d(): com.esri.arcgisruntime.internal.jni.by;
						public e(): boolean;
						public finalize(): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public h(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public i(): com.esri.arcgisruntime.internal.jni.CoreIterator;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRelatedFeatureQueryResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRelatedQueryParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters>;
						public d(): com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public f(): boolean;
						public finalize(): void;
						public e(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo);
						public g(): string;
						public a(param0: string): void;
						public b(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo): void;
						public a(param0: number): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public b(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRelationshipInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo>;
						public f(): string;
						public constructor();
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public e(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo;
						public g(): number;
						public h(): com.esri.arcgisruntime.internal.jni.fz;
						public b(): com.esri.arcgisruntime.internal.jni.fx;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRenderer extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRenderer>;
						public c(): java.lang.Long;
						public constructor();
						public m(): com.esri.arcgisruntime.internal.jni.gc;
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public static nativeDestroy(param0: number): void;
						public d(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public n(): string;
						public p(): com.esri.arcgisruntime.internal.jni.CoreRendererSceneProperties;
						public t(): string;
						public q(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
						public static e(param0: string): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public r(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public o(): com.esri.arcgisruntime.internal.jni.gm;
						public l(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public s(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRendererSceneProperties {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRendererSceneProperties>;
						public f(): string;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.bg;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(param0: string): void;
						public d(param0: string): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.bg): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRendererSceneProperties;
						public finalize(): void;
						public b(): string;
						public a(param0: string): void;
						public e(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRenderingRule {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRenderingRule>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRenderingRule;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRenderingRuleInfo);
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreRenderingRuleInfo;
						public c(): string;
						public constructor(param0: string);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRenderingRuleInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRenderingRuleInfo>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRenderingRuleInfo;
						public constructor(param0: string);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRequest extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRequest>;
						public f(): string;
						public c(): java.lang.Long;
						public constructor();
						public d(): number;
						public g(): com.esri.arcgisruntime.internal.jni.cj;
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public m(): com.esri.arcgisruntime.internal.jni.ge;
						public l(): com.esri.arcgisruntime.internal.jni.CoreStringDictionary;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public k(): com.esri.arcgisruntime.internal.jni.gf;
						public onCancelRequest(): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreByteArray;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreRequest;
						public static e(param0: number): com.esri.arcgisruntime.internal.jni.CoreRequest;
						public b(): void;
						public j(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRequestAttachment {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRequestAttachment>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreByteArray;
						public d(): string;
						public e(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRequestAttachment;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreResourceProvider {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreResourceProvider>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public onGetResourceString(param0: native.Array<number>, param1: native.Array<number>, param2: number, param3: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ce): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRestrictionAttribute {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRestrictionAttribute>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRestrictionAttribute;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public c(): string;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreReverseGeocodeParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreReverseGeocodeParameters>;
						public f(): string;
						public constructor();
						public d(): number;
						public h(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public finalize(): void;
						public e(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public a(param0: string): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public c(): boolean;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRoute {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRoute>;
						public f(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public d(): number;
						public e(): com.esri.arcgisruntime.internal.jni.fg;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRoute;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public m(): number;
						public k(): number;
						public finalize(): void;
						public a(param0: string): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public h(): number;
						public n(): number;
						public l(): number;
						public j(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRouteParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRouteParameters>;
						public d(): string;
						public a(param0: string, param1: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public q(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public p(): com.esri.arcgisruntime.internal.jni.gn;
						public b(param0: boolean): void;
						public finalize(): void;
						public n(): boolean;
						public o(): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public g(param0: boolean): void;
						public h(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ak): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.iw): void;
						public w(): com.esri.arcgisruntime.internal.jni.CoreRouteParameters;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public d(param0: boolean): void;
						public r(): com.esri.arcgisruntime.internal.jni.CoreTravelMode;
						public c(): com.esri.arcgisruntime.internal.jni.iw;
						public s(): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRouteParameters;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTravelMode): void;
						public f(param0: boolean): void;
						public i(param0: boolean): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public b(param0: string): string;
						public e(): com.esri.arcgisruntime.internal.jni.ak;
						public t(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public c(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gn): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public h(): boolean;
						public v(): void;
						public m(): boolean;
						public f(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public e(param0: boolean): void;
						public l(): boolean;
						public a(param0: string): void;
						public k(): boolean;
						public i(): boolean;
						public j(): boolean;
						public u(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRouteResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRouteResult>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRouteResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRouteTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRouteTask>;
						public onLoadStatusChanged(param0: number): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureCollection): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CorePortalItem): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePortalItem): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g(): com.esri.arcgisruntime.internal.jni.CoreRouteTaskInfo;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRouteParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureCollection): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreResourceProvider): void;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g_(): void;
						public j(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onDoneLoading(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRouteTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRouteTaskInfo>;
						public k(): string;
						public r(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public t(): boolean;
						public d(): string;
						public l(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public q(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public p(): com.esri.arcgisruntime.internal.jni.gn;
						public finalize(): void;
						public n(): boolean;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public e(): com.esri.arcgisruntime.internal.jni.iw;
						public s(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public o(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public f(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.ak;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public m(): boolean;
						public h(): com.esri.arcgisruntime.internal.jni.eu;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreRouteTaskInfo;
						public i(): boolean;
						public j(): number;
						public u(): com.esri.arcgisruntime.internal.jni.CoreArray;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreRouteTracker {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreRouteTracker>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.ip): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLocation): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onTrackingStatusChanged(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRouteTask, param1: com.esri.arcgisruntime.internal.jni.CoreRouteParameters, param2: com.esri.arcgisruntime.internal.jni.gj, param3: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public h(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onRerouteCompleted(param0: number, param1: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRouteResult, param1: number, param2: com.esri.arcgisruntime.internal.jni.CoreNavigationResources);
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gi): void;
						public onRerouteStarted(): void;
						public e(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVoiceGuidance;
						public c(): com.esri.arcgisruntime.internal.jni.CoreTrackingStatus;
						public onNewVoiceGuidance(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.iw): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreResourceProvider): void;
						public d(): com.esri.arcgisruntime.internal.jni.iw;
						public a(param0: com.esri.arcgisruntime.internal.jni.ev): void;
						public b(): boolean;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gh): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreScene extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreScene>;
						public c(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
						public onLoadStatusChanged(param0: number): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreLoadSettings;
						public s(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public onBasemapChanged(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreBasemap);
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public n(): com.esri.arcgisruntime.internal.jni.gs;
						public q(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreScene;
						public r(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSurface): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBasemap): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.gs);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLoadSettings): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreSurface;
						public k(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.p): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public m(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public t(): string;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.q);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): void;
						public g_(): void;
						public p(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public o(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreScene;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSceneView extends com.esri.arcgisruntime.internal.jni.CoreGeoView {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSceneView>;
						public a(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeExtent): void;
						public q(): com.esri.arcgisruntime.internal.jni.j;
						public s(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ao): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.j): void;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice, param1: com.esri.arcgisruntime.internal.jni.cg): void;
						public c(): com.esri.arcgisruntime.internal.jni.ap;
						public finalize(): void;
						public w(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreCamera): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.dx): void;
						public b(param0: number): void;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.jw): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hk): void;
						public a(): number;
						public b(param0: native.Array<number>, param1: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): void;
						public a(param0: number, param1: number): void;
						public p(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public v(): com.esri.arcgisruntime.internal.jni.dx;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: number, param1: number): void;
						public u(): com.esri.arcgisruntime.internal.jni.hj;
						public c(param0: number, param1: number): void;
						public b(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreCamera): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.fs);
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): void;
						public a(param0: native.Array<number>): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.es): void;
						public a(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.internal.jni.ah): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreCamera, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onTotalMemory(): void;
						public n(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay, param1: native.Array<number>, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public onUsedMemory(): void;
						public o(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.jx): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public t(): number;
						public y(): void;
						public b(param0: native.Array<number>): com.esri.arcgisruntime.internal.jni.CorePoint;
						public a(param0: com.esri.arcgisruntime.internal.jni.hj): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreDevice): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreScene): void;
						public x(): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public b(param0: native.Array<number>, param1: number, param2: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.dt): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreCameraController): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.in): void;
						public a(param0: native.Array<number>, param1: number): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer): com.esri.arcgisruntime.internal.jni.CoreLayerViewState;
						public c(param0: native.Array<number>): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.internal.jni.CoreLocationToScreenResult;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBookmark): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.m): void;
						public r(): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public a(param0: native.Array<number>, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.aq): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSegment {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSegment>;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public static nativeDestroy(param0: number): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSegment;
						public a(): number;
						public c(): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.gu;
						public b(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public f(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSelectionProperties {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSelectionProperties>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSelectionProperties;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceAreaFacility {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceAreaFacility>;
						public a(param0: com.esri.arcgisruntime.internal.jni.z): void;
						public h(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreNetworkLocation): void;
						public finalize(): void;
						public e(): number;
						public m(): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint);
						public i(): com.esri.arcgisruntime.internal.jni.ei;
						public l(): number;
						public d(param0: number): void;
						public b(param0: string): number;
						public b(param0: number): void;
						public constructor();
						public d(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceAreaFacility;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public j(): string;
						public k(): number;
						public c(): number;
						public a(param0: string): void;
						public b(): com.esri.arcgisruntime.internal.jni.z;
						public f(): number;
						public c(param0: number): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaFacility;
						public a(param0: number): void;
						public a(param0: string, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceAreaParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceAreaParameters>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTravelMode): void;
						public r(): void;
						public p(): com.esri.arcgisruntime.internal.jni.CoreTravelMode;
						public a(param0: string, param1: string): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public b(param0: boolean): void;
						public a(param0: string): string;
						public finalize(): void;
						public t(): void;
						public q(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public e(): com.esri.arcgisruntime.internal.jni.gw;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.gy): void;
						public c(param0: boolean): void;
						public o(): com.esri.arcgisruntime.internal.jni.is;
						public u(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaParameters;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.gw): void;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.gx;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceAreaParameters;
						public a(param0: com.esri.arcgisruntime.internal.jni.gx): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.is): void;
						public g(): number;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): void;
						public d(param0: boolean): void;
						public m(): boolean;
						public s(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public h(): com.esri.arcgisruntime.internal.jni.gy;
						public l(): boolean;
						public e(param0: boolean): void;
						public k(): boolean;
						public i(): boolean;
						public a(param0: number): void;
						public j(): boolean;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceAreaPolygon {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolygon>;
						public constructor();
						public d(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CorePolygon;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolygon;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceAreaPolyline {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolyline>;
						public c(): com.esri.arcgisruntime.internal.jni.fg;
						public a(param0: string): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolyline;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
						public b(param0: string): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceAreaResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceAreaResult>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceAreaResult;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreArray;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceAreaTask extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceAreaTask>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaTaskInfo;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public g(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public j(): void;
						public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreLocalizedResources);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreResourceProvider): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset;
						public onDoneLoading(param0: number): void;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceAreaTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceAreaTaskInfo>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public l(): com.esri.arcgisruntime.internal.jni.gy;
						public j(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public f(): com.esri.arcgisruntime.internal.jni.gx;
						public k(): number;
						public q(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
						public n(): boolean;
						public o(): boolean;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceAreaTaskInfo;
						public e(): string;
						public s(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public i(): string;
						public m(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public h(): number;
						public p(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public g(): com.esri.arcgisruntime.internal.jni.gw;
						public r(): com.esri.arcgisruntime.internal.jni.is;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceDocumentInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceDocumentInfo>;
						public h(): com.esri.arcgisruntime.internal.jni.if;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceDocumentInfo;
						public b(): com.esri.arcgisruntime.internal.jni.c;
						public g(): string;
						public e(): string;
						public i(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceFeatureTable extends com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureType): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature, param1: com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public c(): java.lang.Long;
						public Z(): com.esri.arcgisruntime.internal.jni.CoreItem;
						public constructor();
						public g(param0: string): void;
						public c(param0: string): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public U(): string;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature, param1: com.esri.arcgisruntime.internal.jni.CoreRelatedQueryParameters, param2: com.esri.arcgisruntime.internal.jni.ft): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable;
						public X(): com.esri.arcgisruntime.internal.jni.bj;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters, param1: boolean, param2: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: boolean): void;
						public constructor(param0: string);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreServiceFeatureTable, param1: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public aa(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public e(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public W(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public ab(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRelationshipInfo): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.bj): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTemplate): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public V(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters, param1: com.esri.arcgisruntime.internal.jni.ft): com.esri.arcgisruntime.internal.jni.CoreTask;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public Y(): string;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem, param1: number);
						public j(): void;
						public d(param0: string): com.esri.arcgisruntime.internal.jni.CoreField;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureType, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreArcGISFeature;
						public a(param0: number): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceImageTiledLayer extends com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ig): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public y(): void;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public onGenerateRequest(param0: number): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTileKey, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreStringDictionary): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public j(): void;
						public k(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.ew): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreServiceTimeInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreServiceTimeInfo>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public f(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public finalize(): void;
						public i(): com.esri.arcgisruntime.internal.jni.ij;
						public e(): number;
						public c(): number;
						public d(): com.esri.arcgisruntime.internal.jni.ik;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceTimeInfo;
						public h(): com.esri.arcgisruntime.internal.jni.CoreTimeReference;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreShapefileFeatureTable extends com.esri.arcgisruntime.internal.jni.CoreFeatureTable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreShapefileFeatureTable>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public i(): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreShapefileFeatureTable;
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public g(): boolean;
						public c(): java.lang.Long;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: string): void;
						public g_(): void;
						public b(): string;
						public j(): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreShapefileInfo;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: string);
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreShapefileInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreShapefileInfo>;
						public g(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreShapefileInfo;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public e(): string;
						public c(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSimpleFillSymbol extends com.esri.arcgisruntime.internal.jni.CoreFillSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSimpleFillSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.hb): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.hb, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: com.esri.arcgisruntime.internal.jni.CoreLineSymbol);
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLineSymbol): void;
						public d(): com.esri.arcgisruntime.internal.jni.hb;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSimpleFillSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreMultilayerPolygonSymbol;
						public a(): com.esri.arcgisruntime.internal.jni.CoreColor;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSimpleLineSymbol extends com.esri.arcgisruntime.internal.jni.CoreLineSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSimpleLineSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public f(): com.esri.arcgisruntime.internal.jni.hd;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.hc): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSimpleLineSymbol;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.hd): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.he, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: number);
						public g(): com.esri.arcgisruntime.internal.jni.he;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.he, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: number, param3: com.esri.arcgisruntime.internal.jni.hd, param4: com.esri.arcgisruntime.internal.jni.hc);
						public h(): com.esri.arcgisruntime.internal.jni.CoreMultilayerPolylineSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.he): void;
						public e(): com.esri.arcgisruntime.internal.jni.hc;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(): boolean;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSimpleMarkerSceneSymbol extends com.esri.arcgisruntime.internal.jni.CoreMarkerSceneSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSimpleMarkerSceneSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.hf, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: number, param3: number, param4: number, param5: com.esri.arcgisruntime.internal.jni.gr);
						public d(): com.esri.arcgisruntime.internal.jni.hf;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSimpleMarkerSceneSymbol;
						public a(): com.esri.arcgisruntime.internal.jni.gr;
						public a(param0: com.esri.arcgisruntime.internal.jni.gr): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.hf): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public c(param0: number): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSimpleMarkerSymbol extends com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSimpleMarkerSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(): number;
						public h(): com.esri.arcgisruntime.internal.jni.hg;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSimpleMarkerSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.hg, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: number);
						public j(): com.esri.arcgisruntime.internal.jni.CoreMultilayerPointSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSimpleLineSymbol): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.hy): void;
						public e(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hg): void;
						public f(): number;
						public c(param0: number): void;
						public f(param0: number): void;
						public a(param0: number): void;
						public d(param0: number): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreSimpleLineSymbol;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSimpleRenderer extends com.esri.arcgisruntime.internal.jni.CoreRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSimpleRenderer>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public a(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public d(param0: string): void;
						public b(param0: string): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSimpleRenderer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSolidFillSymbolLayer extends com.esri.arcgisruntime.internal.jni.bm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSolidFillSymbolLayer>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bm;
						public constructor();
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSolidFillSymbolLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public b(param0: boolean): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreColor);
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSolidStrokeSymbolLayer extends com.esri.arcgisruntime.internal.jni.CoreStrokeSymbolLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSolidStrokeSymbolLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ht): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hs): void;
						public constructor();
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreStrokeSymbolLayer;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: com.esri.arcgisruntime.internal.jni.CoreVector);
						public b(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSolidStrokeSymbolLayer;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: com.esri.arcgisruntime.internal.jni.CoreVector, param3: com.esri.arcgisruntime.internal.jni.ht);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: number): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSourceObjectPosition {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSourceObjectPosition>;
						public constructor();
						public d(): number;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSourceObjectPosition;
						public b(): number;
						public constructor(param0: number, param1: number, param2: number);
						public a(param0: number): void;
						public b(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSpatialReference {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSpatialReference>;
						public g(): boolean;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): number;
						public k(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public e(): boolean;
						public i(): number;
						public f(): boolean;
						public finalize(): void;
						public h(): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public constructor(param0: number);
						public b(): number;
						public constructor(param0: number, param1: number);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): boolean;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public j(): number;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStandardDeviationStretchParameters extends com.esri.arcgisruntime.internal.jni.CoreStretchParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStandardDeviationStretchParameters>;
						public constructor();
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStatisticDefinition {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStatisticDefinition>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ho): void;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: string): void;
						public c(): string;
						public b(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreStatisticDefinition;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.ho, param2: string);
						public d(): com.esri.arcgisruntime.internal.jni.ho;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStatisticRecord {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStatisticRecord>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreStatisticRecord;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStatisticsQueryParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public e(): com.esri.arcgisruntime.internal.jni.hl;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeExtent): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public finalize(): void;
						public f(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public a(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hl): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStatisticsQueryResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryResult>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryResult;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreIterator;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStop {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStop>;
						public q(): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
						public p(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.z): void;
						public b(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public s(): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): void;
						public h(): com.esri.arcgisruntime.internal.jni.z;
						public n(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreNetworkLocation): void;
						public r(): string;
						public finalize(): void;
						public w(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public v(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public x(): number;
						public l(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public t(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint);
						public i(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public d(param0: number): void;
						public z(): com.esri.arcgisruntime.internal.jni.CoreStop;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.hr): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreStop;
						public constructor();
						public d(): number;
						public c(param0: string): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public y(): number;
						public g(): number;
						public m(): com.esri.arcgisruntime.internal.jni.ei;
						public o(): number;
						public d(param0: string): number;
						public k(): number;
						public e(): com.esri.arcgisruntime.internal.jni.z;
						public a(param0: string): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public b(): com.esri.arcgisruntime.internal.jni.z;
						public f(): number;
						public c(param0: number): void;
						public u(): com.esri.arcgisruntime.internal.jni.hr;
						public a(param0: number): void;
						public j(): number;
						public a(param0: string, param1: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStretchParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStretchParameters>;
						public a: number;
						public constructor();
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStretchRenderer extends com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStretchRenderer>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreStretchParameters, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: boolean, param3: com.esri.arcgisruntime.internal.jni.CoreColorRamp);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStringDictionary {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStringDictionary>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreStringDictionary;
						public a(param0: string): string;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreStrokeSymbolLayer extends com.esri.arcgisruntime.internal.jni.CoreSymbolLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreStrokeSymbolLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ht): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreStrokeSymbolLayer;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.hs): void;
						public e(): number;
						public d(): com.esri.arcgisruntime.internal.jni.ht;
						public c(): com.esri.arcgisruntime.internal.jni.hs;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public b(param0: boolean): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSublayerSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSublayerSource>;
						public a: number;
						public constructor();
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public d(): com.esri.arcgisruntime.internal.jni.hv;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSubtypeFeatureLayer extends com.esri.arcgisruntime.internal.jni.CoreFeatureLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSubtypeFeatureLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: boolean): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreSubtypeFeatureLayer;
						public u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public f(param0: string): void;
						public V(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public b(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable);
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): void;
						public v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public o(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer;
						public s(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.bi): void;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public g_(): void;
						public a(param0: number): boolean;
						public c(param0: number): void;
						public a(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters, param1: com.esri.arcgisruntime.internal.jni.gv): com.esri.arcgisruntime.internal.jni.CoreTask;
						public h(): string;
						public f(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public c(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer): void;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e(param0: string): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public e(): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem, param1: number);
						public e(param0: boolean): void;
						public a(param0: string): void;
						public j(): void;
						public k(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureLayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSubtypeSublayer extends com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer>;
						public p(): number;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
						public s(): com.esri.arcgisruntime.internal.jni.CoreFeatureSubtype;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public m(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public q(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer;
						public b(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer): void;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public e(): boolean;
						public o(): number;
						public g_(): void;
						public a(param0: number): boolean;
						public e(param0: boolean): void;
						public j(): void;
						public k(): boolean;
						public i(): boolean;
						public c(param0: number): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSuggestParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSuggestParameters>;
						public e(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): void;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public a(param0: string): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public f(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSuggestResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSuggestResult>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSuggestResult;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public b(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSurface extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSurface>;
						public onLoadStatusChanged(param0: number): void;
						public k(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public l(): com.esri.arcgisruntime.internal.jni.et;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.et): void;
						public m(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid): void;
						public g_(): void;
						public c(): number;
						public a(param0: string): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSurface;
						public i(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSymbol extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSymbol>;
						public c(): java.lang.Long;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public t(): com.esri.arcgisruntime.internal.jni.ib;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public s(): number;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public u(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public x(): string;
						public w(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public v(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSymbolAnchor {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor>;
						public constructor();
						public d(): number;
						public b(): com.esri.arcgisruntime.internal.jni.hx;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public constructor(param0: number, param1: number, param2: com.esri.arcgisruntime.internal.jni.hx);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSymbolLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSymbolLayer>;
						public o(): boolean;
						public constructor();
						public q(): com.esri.arcgisruntime.internal.jni.hz;
						public r(): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public p(): boolean;
						public static nativeDestroy(param0: number): void;
						public n(): number;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public b(param0: boolean): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSymbolStyle extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSymbolStyle>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public m(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public l(): number;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSymbolStyleSearchParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchParameters>;
						public constructor();
						public i(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public h(): boolean;
						public e(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public d(param0: boolean): void;
						public b(param0: boolean): void;
						public f(): boolean;
						public finalize(): void;
						public k(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public l(): boolean;
						public e(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchParameters;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public c(): boolean;
						public c(param0: boolean): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public j(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSymbolStyleSearchResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchResult>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public f(): string;
						public constructor();
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchResult;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSyncCapabilities {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSyncCapabilities>;
						public g(): boolean;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSyncCapabilities;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public h(): boolean;
						public e(): boolean;
						public f(): boolean;
						public finalize(): void;
						public c(): boolean;
						public i(): boolean;
						public b(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSyncGeodatabaseJob extends com.esri.arcgisruntime.internal.jni.CoreJob {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseJob>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseJob;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.cv): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cw): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreJob;
						public a(param0: com.esri.arcgisruntime.internal.jni.fr): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSyncGeodatabaseParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseParameters>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseParameters;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.ic;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ic): void;
						public d(): boolean;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSyncLayerOption {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSyncLayerOption>;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreSyncLayerOption;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.ic);
						public static nativeDestroy(param0: number): void;
						public constructor(param0: number);
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.ic): void;
						public b(): number;
						public c(): com.esri.arcgisruntime.internal.jni.ic;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSyncLayerOption;
						public b(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreSyncLayerResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreSyncLayerResult>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTableJoinSublayerSource extends com.esri.arcgisruntime.internal.jni.CoreSublayerSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTableJoinSublayerSource>;
						public f(): string;
						public constructor();
						public a(): com.esri.arcgisruntime.internal.jni.da;
						public b(): string;
						public e(): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTableJoinSublayerSource;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSublayerSource, param2: string, param3: com.esri.arcgisruntime.internal.jni.CoreSublayerSource, param4: com.esri.arcgisruntime.internal.jni.da);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTableQuerySublayerSource extends com.esri.arcgisruntime.internal.jni.CoreSublayerSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTableQuerySublayerSource>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public a(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public g(): string;
						public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreVector);
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public b(): com.esri.arcgisruntime.internal.jni.by;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTableQuerySublayerSource;
						public a(param0: com.esri.arcgisruntime.internal.jni.by): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTableSublayerSource extends com.esri.arcgisruntime.internal.jni.CoreSublayerSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTableSublayerSource>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTableSublayerSource;
						public constructor();
						public a(): string;
						public b(): string;
						public a(param0: string): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
						public e(): string;
						public constructor(param0: string, param1: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTask extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTask>;
						public c(): java.lang.Long;
						public g(): boolean;
						public onTaskCompleted(): void;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.v): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public f(): boolean;
						public finalize(): void;
						public b(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTextSymbol extends com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTextSymbol>;
						public p(): number;
						public g(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public d(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public h(): string;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTextSymbol;
						public b(param0: string): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public z(): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public r(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.bo): void;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreColor, param2: number, param3: com.esri.arcgisruntime.internal.jni.cm, param4: com.esri.arcgisruntime.internal.jni.jv);
						public f(): com.esri.arcgisruntime.internal.jni.bn;
						public o(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: com.esri.arcgisruntime.internal.jni.bn): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public j(): com.esri.arcgisruntime.internal.jni.bo;
						public a(param0: com.esri.arcgisruntime.internal.jni.bp): void;
						public f(param0: number): void;
						public d(param0: number): void;
						public A(): string;
						public b(param0: number): void;
						public c(): java.lang.Long;
						public h(param0: number): void;
						public n(): com.esri.arcgisruntime.internal.jni.bp;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.jv): void;
						public a(): number;
						public y(): number;
						public c(param0: string): void;
						public d(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public q(): com.esri.arcgisruntime.internal.jni.cm;
						public g(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public B(): com.esri.arcgisruntime.internal.jni.jv;
						public a(param0: com.esri.arcgisruntime.internal.jni.hy): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cm): void;
						public e(param0: number): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public b(): com.esri.arcgisruntime.internal.jni.hy;
						public c(param0: number): void;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTileCache implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTileCache>;
						public c(): java.lang.Long;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public l(): com.esri.arcgisruntime.internal.jni.CoreTileInfo;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public m(): com.esri.arcgisruntime.internal.jni.CoreTileCache;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTileCache;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public i(): string;
						public j(): void;
						public k(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public onDoneLoading(param0: number): void;
						public b(): boolean;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTileInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTileInfo>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTileInfo;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public i(): number;
						public finalize(): void;
						public c(): number;
						public d(): com.esri.arcgisruntime.internal.jni.ih;
						public g(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public b(): number;
						public h(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.ih, param2: com.esri.arcgisruntime.internal.jni.CoreVector, param3: com.esri.arcgisruntime.internal.jni.CorePoint, param4: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param5: number, param6: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTileKey {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTileKey>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTileKey;
						public constructor();
						public d(): number;
						public c(): number;
						public e(): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): number;
						public constructor(param0: number, param1: number, param2: number);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTileRequest extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTileRequest>;
						public c(): java.lang.Long;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTileKey;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTileRequest;
						public a(): boolean;
						public o(): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTimeExtent {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTimeExtent>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime, param1: com.esri.arcgisruntime.internal.jni.CoreDateTime);
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTimeReference {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTimeReference>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTimeReference;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public b(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTimeValue {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTimeValue>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.ik;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public b(): number;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.ik);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTrackingDistance {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTrackingDistance>;
						public constructor();
						public d(): number;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreLinearUnit;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTrackingDistance;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTrackingProgress {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTrackingProgress>;
						public c(): com.esri.arcgisruntime.internal.jni.fg;
						public constructor();
						public d(): number;
						public e(): com.esri.arcgisruntime.internal.jni.fg;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTrackingProgress;
						public b(): com.esri.arcgisruntime.internal.jni.CoreTrackingDistance;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTrackingStatus extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTrackingStatus>;
						public f(): com.esri.arcgisruntime.internal.jni.CoreLocation;
						public c(): java.lang.Long;
						public g(): boolean;
						public e(): com.esri.arcgisruntime.internal.jni.ae;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreTrackingProgress;
						public j(): com.esri.arcgisruntime.internal.jni.CoreTrackingProgress;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public h(): boolean;
						public k(): number;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTrackingStatus;
						public n(): void;
						public m(): com.esri.arcgisruntime.internal.jni.CoreRouteResult;
						public b(): number;
						public l(): com.esri.arcgisruntime.internal.jni.CoreTrackingProgress;
						public i(): com.esri.arcgisruntime.internal.jni.CoreLocation;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTransformationCatalog {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTransformationCatalog>;
						public static a(param0: string): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param2: com.esri.arcgisruntime.internal.jni.CoreEnvelope): com.esri.arcgisruntime.internal.jni.CoreDatumTransformation;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param2: com.esri.arcgisruntime.internal.jni.CoreEnvelope): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(): string;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreDatumTransformation;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreArray;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTransformationMatrix {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix>;
						public static a(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public g(): number;
						public static i(): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public finalize(): void;
						public e(): number;
						public c(): number;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public b(): number;
						public h(): number;
						public f(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTransformationMatrixCameraController extends com.esri.arcgisruntime.internal.jni.CoreCameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTransformationMatrixCameraController>;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.s;
						public a(): number;
						public onOriginCameraChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ir): void;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrixCameraController;
						public d(): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public a(param0: com.esri.arcgisruntime.internal.jni.fa): void;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreCamera): void;
						public c(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix): void;
						public onTranslationFactorChanged(): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreCamera);
						public f(): number;
						public a(param0: number): void;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTransportationNetworkDataset {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset>;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTransportationNetworkDataset;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public c(): com.esri.arcgisruntime.internal.jni.CoreGeodatabase;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreTravelMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreTravelMode>;
						public h(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public d(): string;
						public f(param0: string): void;
						public d(param0: string): void;
						public b(param0: string): void;
						public k(): com.esri.arcgisruntime.internal.jni.iv;
						public finalize(): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.iv): void;
						public f(): string;
						public e(param0: string): void;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(param0: string): void;
						public c(): string;
						public g(): number;
						public j(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreTravelMode;
						public l(): boolean;
						public a(param0: string): void;
						public e(): string;
						public i(): string;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUSNGGrid extends com.esri.arcgisruntime.internal.jni.CoreGrid {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUSNGGrid>;
						public g(): com.esri.arcgisruntime.internal.jni.it;
						public constructor();
						public a(): number;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ci): void;
						public a(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.it): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUTMGrid extends com.esri.arcgisruntime.internal.jni.CoreGrid {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUTMGrid>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUniqueValue extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUniqueValue>;
						public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreSymbol, param3: com.esri.arcgisruntime.internal.jni.CoreVector);
						public c(): java.lang.Long;
						public e(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public i(): com.esri.arcgisruntime.internal.jni.CoreUniqueValue;
						public constructor();
						public h(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public b(param0: string): void;
						public j(): string;
						public finalize(): void;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static c(param0: string): com.esri.arcgisruntime.internal.jni.CoreUniqueValue;
						public a(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUniqueValue;
						public f(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUniqueValueRenderer extends com.esri.arcgisruntime.internal.jni.CoreRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUniqueValueRenderer>;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUniqueValueRenderer;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public a(): string;
						public d(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public d(param0: string): void;
						public e(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static e(param0: string): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreRenderer;
						public b(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): void;
						public a(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUnit {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUnit>;
						public constructor();
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public static nativeDestroy(param0: number): void;
						public d(): string;
						public g(): string;
						public e(): string;
						public c(): string;
						public b(): number;
						public f(): com.esri.arcgisruntime.internal.jni.ix;
						public h(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUnit;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityAssetGroup extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityAssetGroup>;
						public c(): java.lang.Long;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public d(): number;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetGroup;
						public a(): number;
						public e(): string;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityAssetType extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType>;
						public c(): java.lang.Long;
						public constructor();
						public e(): number;
						public b(): com.esri.arcgisruntime.internal.jni.jd;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): string;
						public h(): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminalConfiguration;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityAssociation {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityAssociation>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityAssociation;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.je;
						public f(): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
						public c(): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
						public d(): com.esri.arcgisruntime.internal.jni.CoreGUID;
						public e(): boolean;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityCategory {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityCategory>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityCategory;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityCategoryComparison extends com.esri.arcgisruntime.internal.jni.jp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityCategoryComparison>;
						public b(): com.esri.arcgisruntime.internal.jni.jg;
						public a(): com.esri.arcgisruntime.internal.jni.CoreUtilityCategory;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityCategory, param1: com.esri.arcgisruntime.internal.jni.jg);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityCategoryComparison;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityDomainNetwork extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork>;
						public c(): java.lang.Long;
						public f(): string;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityTier;
						public constructor();
						public d(): number;
						public j(): com.esri.arcgisruntime.internal.jni.jn;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork;
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public h(): com.esri.arcgisruntime.internal.jni.jl;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityTierGroup;
						public i(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public e(): boolean;
						public finalize(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityElement {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityElement>;
						public constructor();
						public d(): number;
						public e(): com.esri.arcgisruntime.internal.jni.CoreGUID;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType;
						public g(): number;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
						public b(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetGroup;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal): void;
						public f(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkSource;
						public h(): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal;
						public a(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityElementTraceResult extends com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityElementTraceResult>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityElementTraceResult;
						public a(): com.esri.arcgisruntime.internal.jni.CoreArray;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityNetwork extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityNetwork>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType, param1: com.esri.arcgisruntime.internal.jni.CoreGUID): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType, param1: com.esri.arcgisruntime.internal.jni.CoreGUID, param2: com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityElement): com.esri.arcgisruntime.internal.jni.CoreTask;
						public finalize(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public f(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreMap);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkDefinition;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityElement, param1: com.esri.arcgisruntime.internal.jni.je): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g_(): void;
						public b(): string;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public constructor(param0: string);
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISFeature, param1: com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityNetworkAttribute extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute>;
						public c(): java.lang.Long;
						public g(): boolean;
						public i(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public d(): com.esri.arcgisruntime.internal.jni.CoreDomain;
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): boolean;
						public f(): boolean;
						public finalize(): void;
						public b(): com.esri.arcgisruntime.internal.jni.jh;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityNetworkAttributeComparison extends com.esri.arcgisruntime.internal.jni.jp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttributeComparison>;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
						public constructor();
						public a(): com.esri.arcgisruntime.internal.jni.jf;
						public c(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute, param1: com.esri.arcgisruntime.internal.jni.jf, param2: com.esri.arcgisruntime.internal.jni.CoreElement);
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttributeComparison;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute, param1: com.esri.arcgisruntime.internal.jni.jf, param2: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute);
						public b(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public d(): com.esri.arcgisruntime.internal.jni.CoreElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityNetworkDefinition {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkDefinition>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkDefinition;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork;
						public finalize(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): number;
						public c(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityNetworkSource extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkSource>;
						public c(): java.lang.Long;
						public b(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreArcGISFeatureTable;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetGroup;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public h(): com.esri.arcgisruntime.internal.jni.jj;
						public g(): com.esri.arcgisruntime.internal.jni.ji;
						public finalize(): void;
						public e(): string;
						public f(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityPropagator {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityPropagator>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute, param1: com.esri.arcgisruntime.internal.jni.jk, param2: com.esri.arcgisruntime.internal.jni.jf, param3: com.esri.arcgisruntime.internal.jni.CoreElement, param4: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute);
						public f(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public constructor();
						public e(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public c(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityPropagator;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.jk;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute, param1: com.esri.arcgisruntime.internal.jni.jk, param2: com.esri.arcgisruntime.internal.jni.jf, param3: com.esri.arcgisruntime.internal.jni.CoreElement);
						public b(): com.esri.arcgisruntime.internal.jni.jf;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTerminal extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal>;
						public c(): java.lang.Long;
						public constructor();
						public d(): number;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTerminalConfiguration {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTerminalConfiguration>;
						public constructor();
						public c(): number;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminalConfiguration;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTier extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTier>;
						public c(): java.lang.Long;
						public f(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceConfiguration;
						public constructor();
						public d(): number;
						public e(): com.esri.arcgisruntime.internal.jni.jm;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTier;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTierGroup extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTierGroup>;
						public c(): java.lang.Long;
						public a(param0: string): com.esri.arcgisruntime.internal.jni.CoreUtilityTier;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTierGroup;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceAndCondition extends com.esri.arcgisruntime.internal.jni.jp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceAndCondition>;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
						public constructor();
						public b(): com.esri.arcgisruntime.internal.jni.jp;
						public a(): com.esri.arcgisruntime.internal.jni.jp;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceAndCondition;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.jp, param1: com.esri.arcgisruntime.internal.jni.jp);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceCondition {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition>;
						public a: number;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
						public constructor();
						public e(): number;
						public f(): com.esri.arcgisruntime.internal.jni.jo;
						public static nativeDestroy(param0: number): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceConfiguration {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceConfiguration>;
						public h(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public f(param0: boolean): void;
						public b(param0: boolean): void;
						public finalize(): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTier): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceConfiguration;
						public c(): boolean;
						public c(param0: boolean): void;
						public i(): com.esri.arcgisruntime.internal.jni.CoreUtilityTier;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork): void;
						public g(): boolean;
						public constructor();
						public k(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraversability;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): boolean;
						public j(): com.esri.arcgisruntime.internal.jni.CoreUtilityTier;
						public d(param0: boolean): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork;
						public e(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTier): void;
						public f(): boolean;
						public e(param0: boolean): void;
						public l(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraversability): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceFunction {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunction>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.jq;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunction;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.jq, param1: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceFunctionBarrier {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunctionBarrier>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunction;
						public b(): com.esri.arcgisruntime.internal.jni.jf;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunctionBarrier;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunction, param1: com.esri.arcgisruntime.internal.jni.jf, param2: com.esri.arcgisruntime.internal.jni.CoreElement);
						public d(): com.esri.arcgisruntime.internal.jni.CoreElement;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceOrCondition extends com.esri.arcgisruntime.internal.jni.jp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceOrCondition>;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceOrCondition;
						public b(): com.esri.arcgisruntime.internal.jni.jp;
						public a(): com.esri.arcgisruntime.internal.jni.jp;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.jp, param1: com.esri.arcgisruntime.internal.jni.jp);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceParameters>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public f(): com.esri.arcgisruntime.internal.jni.jt;
						public b(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceConfiguration): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.jt, param1: com.esri.arcgisruntime.internal.jni.CoreVector);
						public e(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceConfiguration;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraceResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult>;
						public a: number;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public c(): com.esri.arcgisruntime.internal.jni.jr;
						public b(): number;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreUtilityTraversability {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreUtilityTraversability>;
						public b(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreUtilityTraversability;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition): void;
						public d(): com.esri.arcgisruntime.internal.jni.ju;
						public a(param0: com.esri.arcgisruntime.internal.jni.ju): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreVector {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreVector>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): number;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public onElementAdded(param0: number, param1: number): void;
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ay): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.ba);
						public d(): void;
						public finalize(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreVector;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): number;
						public e(): void;
						public b(): number;
						public onElementRemoved(param0: number, param1: number): void;
						public b(param0: number): com.esri.arcgisruntime.internal.jni.CoreElement;
						public c(param0: number): void;
						public c(): com.esri.arcgisruntime.internal.jni.ba;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreVectorMarkerSymbolElement {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolElement>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolElement;
						public b(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol);
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreVectorMarkerSymbolLayer extends com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolLayer>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolLayer;
						public d(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public b(): number;
						public b(param0: boolean): void;
						public d(param0: number): void;
						public static d(param0: number): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
						public b(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreVectorTileCache implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreVectorTileCache>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreVectorTileCache;
						public c(): java.lang.Long;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public i(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreVectorTileSourceInfo;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreVectorTileSourceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreVectorTileSourceInfo>;
						public constructor();
						public h(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): com.esri.arcgisruntime.internal.jni.CoreVectorTileStyle;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreVectorTileSourceInfo;
						public a(): number;
						public d(): string;
						public e(): boolean;
						public i(): number;
						public f(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public k(): number;
						public finalize(): void;
						public l(): string;
						public m(): com.esri.arcgisruntime.internal.jni.CorePoint;
						public g(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public b(): string;
						public n(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public o(): string;
						public j(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreVectorTileStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreVectorTileStyle>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreVectorTileStyle;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreViewLabelProperties {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreViewLabelProperties>;
						public constructor();
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public c(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreViewLabelProperties;
						public b(param0: boolean): void;
						public constructor(param0: boolean, param1: boolean);
						public b(): boolean;
						public a(param0: boolean): void;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreViewpoint {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreViewpoint>;
						public constructor();
						public d(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number);
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: com.esri.arcgisruntime.internal.jni.CoreCamera);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry);
						public h(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number);
						public e(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: com.esri.arcgisruntime.internal.jni.CoreCamera);
						public c(): com.esri.arcgisruntime.internal.jni.jx;
						public finalize(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreCamera);
						public g(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number, param2: com.esri.arcgisruntime.internal.jni.CoreCamera);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: number);
						public i(): string;
						public b(): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public constructor(param0: number, param1: number, param2: number);
						public f(): number;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
						public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreCamera);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreViewshed extends com.esri.arcgisruntime.internal.jni.CoreAnalysis {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreViewshed>;
						public h(param0: number): void;
						public static m(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public constructor();
						public g(param0: number): void;
						public i(param0: number): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public h(): boolean;
						public a(): number;
						public static c(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public static o(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public i(): number;
						public b(param0: boolean): void;
						public k(): number;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public l(): number;
						public f(param0: number): void;
						public b(): boolean;
						public j(): number;
						public static n(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreVoiceGuidance {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreVoiceGuidance>;
						public constructor();
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreVoiceGuidance;
						public c(): com.esri.arcgisruntime.internal.jni.jy;
						public finalize(): void;
						public d(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWFSFeatureTable extends com.esri.arcgisruntime.internal.jni.CoreFeatureTable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWFSFeatureTable>;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary, param1: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreFeature;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public g(): com.esri.arcgisruntime.internal.jni.bj;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public k(): com.esri.arcgisruntime.internal.jni.CoreWFSLayerInfo;
						public l(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreWFSLayerInfo);
						public b(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreStatisticsQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: string, param1: string);
						public b(param0: com.esri.arcgisruntime.internal.jni.ex): void;
						public f(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): com.esri.arcgisruntime.internal.jni.ex;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.bj): void;
						public a(param0: string, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(): java.lang.Long;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public c(param0: string): void;
						public i(): com.esri.arcgisruntime.internal.jni.ex;
						public a(param0: com.esri.arcgisruntime.internal.jni.ex): void;
						public g_(): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWFSFeatureTable;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters, param1: boolean, param2: com.esri.arcgisruntime.internal.jni.CoreVector): com.esri.arcgisruntime.internal.jni.CoreTask;
						public j(): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): boolean;
						public c(param0: com.esri.arcgisruntime.internal.jni.CoreQueryParameters): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWFSLayerInfo extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWFSLayerInfo>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWFSLayerInfo;
						public c(): java.lang.Long;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): string;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWFSService extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWFSService>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
						public g(): com.esri.arcgisruntime.internal.jni.CoreWFSServiceInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWFSServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWFSServiceInfo>;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public e(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWFSServiceInfo;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMSFeature {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMSFeature>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public b(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePoint, param1: com.esri.arcgisruntime.internal.jni.CoreMapView): com.esri.arcgisruntime.internal.jni.CorePoint;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMSFeature;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMSLayer extends com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer implements com.esri.arcgisruntime.internal.jni.ii {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMSLayer>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public finalize(): void;
						public o(): boolean;
						public v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public s(): boolean;
						public i(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: boolean): void;
						public y(): void;
						public b(): boolean;
						public f(): void;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public r(): number;
						public q(): com.esri.arcgisruntime.internal.jni.em;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public onFullTimeExtentChanged(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.em): void;
						public m(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public w(): com.esri.arcgisruntime.internal.jni.jz;
						public e(): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
						public g_(): void;
						public a(param0: number): boolean;
						public p(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreVector);
						public t(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public j(): void;
						public k(): boolean;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
						public a(param0: boolean): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMSLayer;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMSLayerInfo extends com.esri.arcgisruntime.internal.jni.cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMSLayerInfo>;
						public c(): java.lang.Long;
						public constructor();
						public d(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public k(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public m(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public n(): string;
						public finalize(): void;
						public e(): number;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public f(): number;
						public i(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMSLayerInfo;
						public j(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMSService extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMSService>;
						public i(): com.esri.arcgisruntime.internal.jni.jz;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public g(): com.esri.arcgisruntime.internal.jni.CoreWMSServiceInfo;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMSServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMSServiceInfo>;
						public f(): string;
						public constructor();
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMSServiceInfo;
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): string;
						public e(): com.esri.arcgisruntime.internal.jni.CoreVector;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMSSublayer implements com.esri.arcgisruntime.internal.jni.cs, com.esri.arcgisruntime.internal.jni.dr {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMSSublayer>;
						public c(): java.lang.Long;
						public onSubLayerContentChanged(): void;
						public constructor();
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMSSublayer;
						public g(): com.esri.arcgisruntime.internal.jni.CoreWMSSublayer;
						public e(): boolean;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public finalize(): void;
						public a(param0: number): boolean;
						public f(): com.esri.arcgisruntime.internal.jni.CoreWMSLayerInfo;
						public a(param0: string): void;
						public k(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMTSLayer extends com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMTSLayer>;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public r(): com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.ih);
						public m(): com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo;
						public constructor(param0: string, param1: string, param2: string);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public constructor(param0: string, param1: string, param2: string, param3: com.esri.arcgisruntime.internal.jni.ih);
						public constructor(param0: string, param1: string);
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): boolean;
						public q(): com.esri.arcgisruntime.internal.jni.ih;
						public b(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo, param1: com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet, param2: com.esri.arcgisruntime.internal.jni.ih);
						public c(): java.lang.Long;
						public e(param0: string): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo);
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public c(param0: string): void;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMTSLayer;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo, param1: com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet);
						public i(): string;
						public j(): void;
						public k(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.ew): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public a(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo, param1: com.esri.arcgisruntime.internal.jni.ih);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMTSLayerInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public constructor();
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo;
						public c(): string;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMTSService extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMTSService>;
						public onLoadStatusChanged(param0: number): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public onRequestRequired(param0: number): void;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public finalize(): void;
						public g_(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public b(): string;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public onDoneLoading(param0: number): void;
						public f(): void;
						public constructor(param0: string);
						public g(): com.esri.arcgisruntime.internal.jni.CoreWMTSServiceInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMTSServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMTSServiceInfo>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public f(): string;
						public constructor();
						public c(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public g(): string;
						public d(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMTSServiceInfo;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMTSTileMatrix {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrix>;
						public constructor();
						public c(): number;
						public b(): string;
						public static nativeDestroy(param0: number): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrix;
						public a(): number;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWMTSTileMatrixSet {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet>;
						public e(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public c(): com.esri.arcgisruntime.internal.jni.CoreEnvelope;
						public constructor();
						public h(): string;
						public static nativeDestroy(param0: number): void;
						public a(): number;
						public d(): string;
						public finalize(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public b(): string;
						public f(): com.esri.arcgisruntime.internal.jni.CoreSpatialReference;
						public i(): string;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class CoreWebTiledLayer extends com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer>;
						public a(param0: com.esri.arcgisruntime.internal.jni.ig): void;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param1: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public static c(param0: number): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public b(param0: boolean): void;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param3: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public g(): string;
						public static e(param0: number): com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): boolean;
						public b(param0: number): void;
						public e(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTileKey, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreStringDictionary): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreArray;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
						public e(): boolean;
						public g_(): void;
						public a(param0: number): boolean;
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreVector);
						public constructor(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreTileInfo, param2: com.esri.arcgisruntime.internal.jni.CoreEnvelope);
						public j(): void;
						public k(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.ew): void;
						public c(param0: number): void;
						public a(param0: number): void;
						public constructor(param0: string);
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.a>;
						public static b: com.esri.arcgisruntime.internal.jni.a;
						public static c: com.esri.arcgisruntime.internal.jni.a;
						public static d: com.esri.arcgisruntime.internal.jni.a;
						public static e: com.esri.arcgisruntime.internal.jni.a;
						public static f: com.esri.arcgisruntime.internal.jni.a;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.a;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.a>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.a;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class aa {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.aa>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.aa interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							currentPositionCallback(): void;
						});
						public constructor();
						public currentPositionCallback(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ab {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ab>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ab interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							currentPositionChangedCallback(param0: number): void;
						});
						public constructor();
						public currentPositionChangedCallback(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ac {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ac>;
						public static b: com.esri.arcgisruntime.internal.jni.ac;
						public static c: com.esri.arcgisruntime.internal.jni.ac;
						public static d: com.esri.arcgisruntime.internal.jni.ac;
						public static e: com.esri.arcgisruntime.internal.jni.ac;
						public static f: com.esri.arcgisruntime.internal.jni.ac;
						public static g: com.esri.arcgisruntime.internal.jni.ac;
						public static h: com.esri.arcgisruntime.internal.jni.ac;
						public static i: com.esri.arcgisruntime.internal.jni.ac;
						public static j: com.esri.arcgisruntime.internal.jni.ac;
						public static k: com.esri.arcgisruntime.internal.jni.ac;
						public static l: com.esri.arcgisruntime.internal.jni.ac;
						public static m: com.esri.arcgisruntime.internal.jni.ac;
						public static n: com.esri.arcgisruntime.internal.jni.ac;
						public static o: com.esri.arcgisruntime.internal.jni.ac;
						public static p: com.esri.arcgisruntime.internal.jni.ac;
						public static q: com.esri.arcgisruntime.internal.jni.ac;
						public static r: com.esri.arcgisruntime.internal.jni.ac;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ac>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ac;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ac;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ad {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ad>;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ad>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ad;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ad;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ae {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ae>;
						public static b: com.esri.arcgisruntime.internal.jni.ae;
						public static c: com.esri.arcgisruntime.internal.jni.ae;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ae;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ae>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ae;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class af {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.af>;
						public static b: com.esri.arcgisruntime.internal.jni.af;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.af;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.af>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.af;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ag {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ag>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ag interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							destroyCallback(): void;
						});
						public constructor();
						public destroyCallback(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ah {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ah>;
						public static b: com.esri.arcgisruntime.internal.jni.ah;
						public static c: com.esri.arcgisruntime.internal.jni.ah;
						public static d: com.esri.arcgisruntime.internal.jni.ah;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ah;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ah>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ai {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ai>;
						public static b: com.esri.arcgisruntime.internal.jni.ai;
						public static c: com.esri.arcgisruntime.internal.jni.ai;
						public static d: com.esri.arcgisruntime.internal.jni.ai;
						public static e: com.esri.arcgisruntime.internal.jni.ai;
						public static f: com.esri.arcgisruntime.internal.jni.ai;
						public static g: com.esri.arcgisruntime.internal.jni.ai;
						public static h: com.esri.arcgisruntime.internal.jni.ai;
						public static i: com.esri.arcgisruntime.internal.jni.ai;
						public static j: com.esri.arcgisruntime.internal.jni.ai;
						public static k: com.esri.arcgisruntime.internal.jni.ai;
						public static l: com.esri.arcgisruntime.internal.jni.ai;
						public static m: com.esri.arcgisruntime.internal.jni.ai;
						public static n: com.esri.arcgisruntime.internal.jni.ai;
						public static o: com.esri.arcgisruntime.internal.jni.ai;
						public static p: com.esri.arcgisruntime.internal.jni.ai;
						public static q: com.esri.arcgisruntime.internal.jni.ai;
						public static r: com.esri.arcgisruntime.internal.jni.ai;
						public static s: com.esri.arcgisruntime.internal.jni.ai;
						public static t: com.esri.arcgisruntime.internal.jni.ai;
						public static u: com.esri.arcgisruntime.internal.jni.ai;
						public static v: com.esri.arcgisruntime.internal.jni.ai;
						public static w: com.esri.arcgisruntime.internal.jni.ai;
						public static x: com.esri.arcgisruntime.internal.jni.ai;
						public static y: com.esri.arcgisruntime.internal.jni.ai;
						public static z: com.esri.arcgisruntime.internal.jni.ai;
						public static A: com.esri.arcgisruntime.internal.jni.ai;
						public static B: com.esri.arcgisruntime.internal.jni.ai;
						public static C: com.esri.arcgisruntime.internal.jni.ai;
						public static D: com.esri.arcgisruntime.internal.jni.ai;
						public static E: com.esri.arcgisruntime.internal.jni.ai;
						public static F: com.esri.arcgisruntime.internal.jni.ai;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ai;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ai;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ai>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class aj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.aj>;
						public static b: com.esri.arcgisruntime.internal.jni.aj;
						public static c: com.esri.arcgisruntime.internal.jni.aj;
						public static d: com.esri.arcgisruntime.internal.jni.aj;
						public static e: com.esri.arcgisruntime.internal.jni.aj;
						public static f: com.esri.arcgisruntime.internal.jni.aj;
						public static g: com.esri.arcgisruntime.internal.jni.aj;
						public static h: com.esri.arcgisruntime.internal.jni.aj;
						public static i: com.esri.arcgisruntime.internal.jni.aj;
						public static j: com.esri.arcgisruntime.internal.jni.aj;
						public static k: com.esri.arcgisruntime.internal.jni.aj;
						public static l: com.esri.arcgisruntime.internal.jni.aj;
						public static m: com.esri.arcgisruntime.internal.jni.aj;
						public static n: com.esri.arcgisruntime.internal.jni.aj;
						public static o: com.esri.arcgisruntime.internal.jni.aj;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.aj;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.aj>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.aj;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ak {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ak>;
						public static b: com.esri.arcgisruntime.internal.jni.ak;
						public static c: com.esri.arcgisruntime.internal.jni.ak;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ak;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ak>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ak;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class al {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.al>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.al interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class am {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.am>;
						public static b: com.esri.arcgisruntime.internal.jni.am;
						public static c: com.esri.arcgisruntime.internal.jni.am;
						public static d: com.esri.arcgisruntime.internal.jni.am;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.am>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.am;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.am;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class an {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.an>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.an interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreError): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreError): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ao {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ao>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ao interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ap {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ap>;
						public static b: com.esri.arcgisruntime.internal.jni.ap;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ap;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ap>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ap;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class aq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.aq>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.aq interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.ap): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.ap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ar {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ar>;
						public static b: com.esri.arcgisruntime.internal.jni.ar;
						public static c: com.esri.arcgisruntime.internal.jni.ar;
						public static d: com.esri.arcgisruntime.internal.jni.ar;
						public static e: com.esri.arcgisruntime.internal.jni.ar;
						public static f: com.esri.arcgisruntime.internal.jni.ar;
						public static g: com.esri.arcgisruntime.internal.jni.ar;
						public static h: com.esri.arcgisruntime.internal.jni.ar;
						public static i: com.esri.arcgisruntime.internal.jni.ar;
						public static j: com.esri.arcgisruntime.internal.jni.ar;
						public static k: com.esri.arcgisruntime.internal.jni.ar;
						public static l: com.esri.arcgisruntime.internal.jni.ar;
						public static m: com.esri.arcgisruntime.internal.jni.ar;
						public static n: com.esri.arcgisruntime.internal.jni.ar;
						public static o: com.esri.arcgisruntime.internal.jni.ar;
						public static p: com.esri.arcgisruntime.internal.jni.ar;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ar>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ar;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ar;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class as {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.as>;
						public static b: com.esri.arcgisruntime.internal.jni.as;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.as>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.as;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.as;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class at {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.at>;
						public static b: com.esri.arcgisruntime.internal.jni.at;
						public static c: com.esri.arcgisruntime.internal.jni.at;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.at>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.at;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.at;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class au {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.au>;
						public static b: com.esri.arcgisruntime.internal.jni.au;
						public static c: com.esri.arcgisruntime.internal.jni.au;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.au;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.au>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.au;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class av {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.av>;
						public static b: com.esri.arcgisruntime.internal.jni.av;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.av;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.av>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.av;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class aw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.aw>;
						public static b: com.esri.arcgisruntime.internal.jni.aw;
						public static c: com.esri.arcgisruntime.internal.jni.aw;
						public static d: com.esri.arcgisruntime.internal.jni.aw;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.aw;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.aw;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.aw>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ax {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ax>;
						public static b: com.esri.arcgisruntime.internal.jni.ax;
						public static c: com.esri.arcgisruntime.internal.jni.ax;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ax;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ax;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ax>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ay {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ay>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ay interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							elementAdded(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						});
						public constructor();
						public elementAdded(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreElement): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class az {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.az>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.az interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreElement): void;
						});
						public constructor();
						public a(param0: number, param1: com.esri.arcgisruntime.internal.jni.CoreElement): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.b>;
						public static b: com.esri.arcgisruntime.internal.jni.b;
						public static c: com.esri.arcgisruntime.internal.jni.b;
						public static d: com.esri.arcgisruntime.internal.jni.b;
						public static e: com.esri.arcgisruntime.internal.jni.b;
						public static f: com.esri.arcgisruntime.internal.jni.b;
						public static g: com.esri.arcgisruntime.internal.jni.b;
						public static h: com.esri.arcgisruntime.internal.jni.b;
						public static i: com.esri.arcgisruntime.internal.jni.b;
						public static j: com.esri.arcgisruntime.internal.jni.b;
						public static k: com.esri.arcgisruntime.internal.jni.b;
						public static l: com.esri.arcgisruntime.internal.jni.b;
						public static m: com.esri.arcgisruntime.internal.jni.b;
						public static n: com.esri.arcgisruntime.internal.jni.b;
						public static o: com.esri.arcgisruntime.internal.jni.b;
						public static p: com.esri.arcgisruntime.internal.jni.b;
						public static q: com.esri.arcgisruntime.internal.jni.b;
						public static r: com.esri.arcgisruntime.internal.jni.b;
						public static s: com.esri.arcgisruntime.internal.jni.b;
						public static t: com.esri.arcgisruntime.internal.jni.b;
						public static u: com.esri.arcgisruntime.internal.jni.b;
						public static v: com.esri.arcgisruntime.internal.jni.b;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.b;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.b>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ba {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ba>;
						public static b: com.esri.arcgisruntime.internal.jni.ba;
						public static c: com.esri.arcgisruntime.internal.jni.ba;
						public static d: com.esri.arcgisruntime.internal.jni.ba;
						public static e: com.esri.arcgisruntime.internal.jni.ba;
						public static f: com.esri.arcgisruntime.internal.jni.ba;
						public static g: com.esri.arcgisruntime.internal.jni.ba;
						public static h: com.esri.arcgisruntime.internal.jni.ba;
						public static i: com.esri.arcgisruntime.internal.jni.ba;
						public static j: com.esri.arcgisruntime.internal.jni.ba;
						public static k: com.esri.arcgisruntime.internal.jni.ba;
						public static l: com.esri.arcgisruntime.internal.jni.ba;
						public static m: com.esri.arcgisruntime.internal.jni.ba;
						public static n: com.esri.arcgisruntime.internal.jni.ba;
						public static o: com.esri.arcgisruntime.internal.jni.ba;
						public static p: com.esri.arcgisruntime.internal.jni.ba;
						public static q: com.esri.arcgisruntime.internal.jni.ba;
						public static r: com.esri.arcgisruntime.internal.jni.ba;
						public static s: com.esri.arcgisruntime.internal.jni.ba;
						public static t: com.esri.arcgisruntime.internal.jni.ba;
						public static u: com.esri.arcgisruntime.internal.jni.ba;
						public static v: com.esri.arcgisruntime.internal.jni.ba;
						public static w: com.esri.arcgisruntime.internal.jni.ba;
						public static x: com.esri.arcgisruntime.internal.jni.ba;
						public static y: com.esri.arcgisruntime.internal.jni.ba;
						public static z: com.esri.arcgisruntime.internal.jni.ba;
						public static A: com.esri.arcgisruntime.internal.jni.ba;
						public static B: com.esri.arcgisruntime.internal.jni.ba;
						public static C: com.esri.arcgisruntime.internal.jni.ba;
						public static D: com.esri.arcgisruntime.internal.jni.ba;
						public static E: com.esri.arcgisruntime.internal.jni.ba;
						public static F: com.esri.arcgisruntime.internal.jni.ba;
						public static G: com.esri.arcgisruntime.internal.jni.ba;
						public static H: com.esri.arcgisruntime.internal.jni.ba;
						public static I: com.esri.arcgisruntime.internal.jni.ba;
						public static J: com.esri.arcgisruntime.internal.jni.ba;
						public static K: com.esri.arcgisruntime.internal.jni.ba;
						public static L: com.esri.arcgisruntime.internal.jni.ba;
						public static M: com.esri.arcgisruntime.internal.jni.ba;
						public static N: com.esri.arcgisruntime.internal.jni.ba;
						public static O: com.esri.arcgisruntime.internal.jni.ba;
						public static P: com.esri.arcgisruntime.internal.jni.ba;
						public static Q: com.esri.arcgisruntime.internal.jni.ba;
						public static R: com.esri.arcgisruntime.internal.jni.ba;
						public static S: com.esri.arcgisruntime.internal.jni.ba;
						public static T: com.esri.arcgisruntime.internal.jni.ba;
						public static U: com.esri.arcgisruntime.internal.jni.ba;
						public static V: com.esri.arcgisruntime.internal.jni.ba;
						public static W: com.esri.arcgisruntime.internal.jni.ba;
						public static X: com.esri.arcgisruntime.internal.jni.ba;
						public static Y: com.esri.arcgisruntime.internal.jni.ba;
						public static Z: com.esri.arcgisruntime.internal.jni.ba;
						public static aa: com.esri.arcgisruntime.internal.jni.ba;
						public static ab: com.esri.arcgisruntime.internal.jni.ba;
						public static ac: com.esri.arcgisruntime.internal.jni.ba;
						public static ad: com.esri.arcgisruntime.internal.jni.ba;
						public static ae: com.esri.arcgisruntime.internal.jni.ba;
						public static af: com.esri.arcgisruntime.internal.jni.ba;
						public static ag: com.esri.arcgisruntime.internal.jni.ba;
						public static ah: com.esri.arcgisruntime.internal.jni.ba;
						public static ai: com.esri.arcgisruntime.internal.jni.ba;
						public static aj: com.esri.arcgisruntime.internal.jni.ba;
						public static ak: com.esri.arcgisruntime.internal.jni.ba;
						public static al: com.esri.arcgisruntime.internal.jni.ba;
						public static am: com.esri.arcgisruntime.internal.jni.ba;
						public static an: com.esri.arcgisruntime.internal.jni.ba;
						public static ao: com.esri.arcgisruntime.internal.jni.ba;
						public static ap: com.esri.arcgisruntime.internal.jni.ba;
						public static aq: com.esri.arcgisruntime.internal.jni.ba;
						public static ar: com.esri.arcgisruntime.internal.jni.ba;
						public static as: com.esri.arcgisruntime.internal.jni.ba;
						public static at: com.esri.arcgisruntime.internal.jni.ba;
						public static au: com.esri.arcgisruntime.internal.jni.ba;
						public static av: com.esri.arcgisruntime.internal.jni.ba;
						public static aw: com.esri.arcgisruntime.internal.jni.ba;
						public static ax: com.esri.arcgisruntime.internal.jni.ba;
						public static ay: com.esri.arcgisruntime.internal.jni.ba;
						public static az: com.esri.arcgisruntime.internal.jni.ba;
						public static aA: com.esri.arcgisruntime.internal.jni.ba;
						public static aB: com.esri.arcgisruntime.internal.jni.ba;
						public static aC: com.esri.arcgisruntime.internal.jni.ba;
						public static aD: com.esri.arcgisruntime.internal.jni.ba;
						public static aE: com.esri.arcgisruntime.internal.jni.ba;
						public static aF: com.esri.arcgisruntime.internal.jni.ba;
						public static aG: com.esri.arcgisruntime.internal.jni.ba;
						public static aH: com.esri.arcgisruntime.internal.jni.ba;
						public static aI: com.esri.arcgisruntime.internal.jni.ba;
						public static aJ: com.esri.arcgisruntime.internal.jni.ba;
						public static aK: com.esri.arcgisruntime.internal.jni.ba;
						public static aL: com.esri.arcgisruntime.internal.jni.ba;
						public static aM: com.esri.arcgisruntime.internal.jni.ba;
						public static aN: com.esri.arcgisruntime.internal.jni.ba;
						public static aO: com.esri.arcgisruntime.internal.jni.ba;
						public static aP: com.esri.arcgisruntime.internal.jni.ba;
						public static aQ: com.esri.arcgisruntime.internal.jni.ba;
						public static aR: com.esri.arcgisruntime.internal.jni.ba;
						public static aS: com.esri.arcgisruntime.internal.jni.ba;
						public static aT: com.esri.arcgisruntime.internal.jni.ba;
						public static aU: com.esri.arcgisruntime.internal.jni.ba;
						public static aV: com.esri.arcgisruntime.internal.jni.ba;
						public static aW: com.esri.arcgisruntime.internal.jni.ba;
						public static aX: com.esri.arcgisruntime.internal.jni.ba;
						public static aY: com.esri.arcgisruntime.internal.jni.ba;
						public static aZ: com.esri.arcgisruntime.internal.jni.ba;
						public static ba: com.esri.arcgisruntime.internal.jni.ba;
						public static bb: com.esri.arcgisruntime.internal.jni.ba;
						public static bc: com.esri.arcgisruntime.internal.jni.ba;
						public static bd: com.esri.arcgisruntime.internal.jni.ba;
						public static be: com.esri.arcgisruntime.internal.jni.ba;
						public static bf: com.esri.arcgisruntime.internal.jni.ba;
						public static bg: com.esri.arcgisruntime.internal.jni.ba;
						public static bh: com.esri.arcgisruntime.internal.jni.ba;
						public static bi: com.esri.arcgisruntime.internal.jni.ba;
						public static bj: com.esri.arcgisruntime.internal.jni.ba;
						public static bk: com.esri.arcgisruntime.internal.jni.ba;
						public static bl: com.esri.arcgisruntime.internal.jni.ba;
						public static bm: com.esri.arcgisruntime.internal.jni.ba;
						public static bn: com.esri.arcgisruntime.internal.jni.ba;
						public static bo: com.esri.arcgisruntime.internal.jni.ba;
						public static bp: com.esri.arcgisruntime.internal.jni.ba;
						public static bq: com.esri.arcgisruntime.internal.jni.ba;
						public static br: com.esri.arcgisruntime.internal.jni.ba;
						public static bs: com.esri.arcgisruntime.internal.jni.ba;
						public static bt: com.esri.arcgisruntime.internal.jni.ba;
						public static bu: com.esri.arcgisruntime.internal.jni.ba;
						public static bv: com.esri.arcgisruntime.internal.jni.ba;
						public static bw: com.esri.arcgisruntime.internal.jni.ba;
						public static bx: com.esri.arcgisruntime.internal.jni.ba;
						public static by: com.esri.arcgisruntime.internal.jni.ba;
						public static bz: com.esri.arcgisruntime.internal.jni.ba;
						public static bA: com.esri.arcgisruntime.internal.jni.ba;
						public static bB: com.esri.arcgisruntime.internal.jni.ba;
						public static bC: com.esri.arcgisruntime.internal.jni.ba;
						public static bD: com.esri.arcgisruntime.internal.jni.ba;
						public static bE: com.esri.arcgisruntime.internal.jni.ba;
						public static bF: com.esri.arcgisruntime.internal.jni.ba;
						public static bG: com.esri.arcgisruntime.internal.jni.ba;
						public static bH: com.esri.arcgisruntime.internal.jni.ba;
						public static bI: com.esri.arcgisruntime.internal.jni.ba;
						public static bJ: com.esri.arcgisruntime.internal.jni.ba;
						public static bK: com.esri.arcgisruntime.internal.jni.ba;
						public static bL: com.esri.arcgisruntime.internal.jni.ba;
						public static bM: com.esri.arcgisruntime.internal.jni.ba;
						public static bN: com.esri.arcgisruntime.internal.jni.ba;
						public static bO: com.esri.arcgisruntime.internal.jni.ba;
						public static bP: com.esri.arcgisruntime.internal.jni.ba;
						public static bQ: com.esri.arcgisruntime.internal.jni.ba;
						public static bR: com.esri.arcgisruntime.internal.jni.ba;
						public static bS: com.esri.arcgisruntime.internal.jni.ba;
						public static bT: com.esri.arcgisruntime.internal.jni.ba;
						public static bU: com.esri.arcgisruntime.internal.jni.ba;
						public static bV: com.esri.arcgisruntime.internal.jni.ba;
						public static bW: com.esri.arcgisruntime.internal.jni.ba;
						public static bX: com.esri.arcgisruntime.internal.jni.ba;
						public static bY: com.esri.arcgisruntime.internal.jni.ba;
						public static bZ: com.esri.arcgisruntime.internal.jni.ba;
						public static ca: com.esri.arcgisruntime.internal.jni.ba;
						public static cb: com.esri.arcgisruntime.internal.jni.ba;
						public static cc: com.esri.arcgisruntime.internal.jni.ba;
						public static cd: com.esri.arcgisruntime.internal.jni.ba;
						public static ce: com.esri.arcgisruntime.internal.jni.ba;
						public static cf: com.esri.arcgisruntime.internal.jni.ba;
						public static cg: com.esri.arcgisruntime.internal.jni.ba;
						public static ch: com.esri.arcgisruntime.internal.jni.ba;
						public static ci: com.esri.arcgisruntime.internal.jni.ba;
						public static cj: com.esri.arcgisruntime.internal.jni.ba;
						public static ck: com.esri.arcgisruntime.internal.jni.ba;
						public static cl: com.esri.arcgisruntime.internal.jni.ba;
						public static cm: com.esri.arcgisruntime.internal.jni.ba;
						public static cn: com.esri.arcgisruntime.internal.jni.ba;
						public static co: com.esri.arcgisruntime.internal.jni.ba;
						public static cp: com.esri.arcgisruntime.internal.jni.ba;
						public static cq: com.esri.arcgisruntime.internal.jni.ba;
						public static cr: com.esri.arcgisruntime.internal.jni.ba;
						public static cs: com.esri.arcgisruntime.internal.jni.ba;
						public static ct: com.esri.arcgisruntime.internal.jni.ba;
						public static cu: com.esri.arcgisruntime.internal.jni.ba;
						public static cv: com.esri.arcgisruntime.internal.jni.ba;
						public static cw: com.esri.arcgisruntime.internal.jni.ba;
						public static cx: com.esri.arcgisruntime.internal.jni.ba;
						public static cy: com.esri.arcgisruntime.internal.jni.ba;
						public static cz: com.esri.arcgisruntime.internal.jni.ba;
						public static cA: com.esri.arcgisruntime.internal.jni.ba;
						public static cB: com.esri.arcgisruntime.internal.jni.ba;
						public static cC: com.esri.arcgisruntime.internal.jni.ba;
						public static cD: com.esri.arcgisruntime.internal.jni.ba;
						public static cE: com.esri.arcgisruntime.internal.jni.ba;
						public static cF: com.esri.arcgisruntime.internal.jni.ba;
						public static cG: com.esri.arcgisruntime.internal.jni.ba;
						public static cH: com.esri.arcgisruntime.internal.jni.ba;
						public static cI: com.esri.arcgisruntime.internal.jni.ba;
						public static cJ: com.esri.arcgisruntime.internal.jni.ba;
						public static cK: com.esri.arcgisruntime.internal.jni.ba;
						public static cL: com.esri.arcgisruntime.internal.jni.ba;
						public static cM: com.esri.arcgisruntime.internal.jni.ba;
						public static cN: com.esri.arcgisruntime.internal.jni.ba;
						public static cO: com.esri.arcgisruntime.internal.jni.ba;
						public static cP: com.esri.arcgisruntime.internal.jni.ba;
						public static cQ: com.esri.arcgisruntime.internal.jni.ba;
						public static cR: com.esri.arcgisruntime.internal.jni.ba;
						public static cS: com.esri.arcgisruntime.internal.jni.ba;
						public static cT: com.esri.arcgisruntime.internal.jni.ba;
						public static cU: com.esri.arcgisruntime.internal.jni.ba;
						public static cV: com.esri.arcgisruntime.internal.jni.ba;
						public static cW: com.esri.arcgisruntime.internal.jni.ba;
						public static cX: com.esri.arcgisruntime.internal.jni.ba;
						public static cY: com.esri.arcgisruntime.internal.jni.ba;
						public static cZ: com.esri.arcgisruntime.internal.jni.ba;
						public static da: com.esri.arcgisruntime.internal.jni.ba;
						public static db: com.esri.arcgisruntime.internal.jni.ba;
						public static dc: com.esri.arcgisruntime.internal.jni.ba;
						public static dd: com.esri.arcgisruntime.internal.jni.ba;
						public static de: com.esri.arcgisruntime.internal.jni.ba;
						public static df: com.esri.arcgisruntime.internal.jni.ba;
						public static dg: com.esri.arcgisruntime.internal.jni.ba;
						public static dh: com.esri.arcgisruntime.internal.jni.ba;
						public static di: com.esri.arcgisruntime.internal.jni.ba;
						public static dj: com.esri.arcgisruntime.internal.jni.ba;
						public static dk: com.esri.arcgisruntime.internal.jni.ba;
						public static dl: com.esri.arcgisruntime.internal.jni.ba;
						public static dm: com.esri.arcgisruntime.internal.jni.ba;
						public static dn: com.esri.arcgisruntime.internal.jni.ba;
						public static do: com.esri.arcgisruntime.internal.jni.ba;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ba;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ba>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ba;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bb {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bb>;
						public static b: com.esri.arcgisruntime.internal.jni.bb;
						public static c: com.esri.arcgisruntime.internal.jni.bb;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bb>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bb;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bb;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bc {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bc>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.bc interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bd {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bd>;
						public static b: com.esri.arcgisruntime.internal.jni.bd;
						public static c: com.esri.arcgisruntime.internal.jni.bd;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bd>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bd;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bd;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class be {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.be>;
						public static b: com.esri.arcgisruntime.internal.jni.be;
						public static c: com.esri.arcgisruntime.internal.jni.be;
						public static d: com.esri.arcgisruntime.internal.jni.be;
						public static e: com.esri.arcgisruntime.internal.jni.be;
						public static f: com.esri.arcgisruntime.internal.jni.be;
						public static g: com.esri.arcgisruntime.internal.jni.be;
						public static h: com.esri.arcgisruntime.internal.jni.be;
						public static i: com.esri.arcgisruntime.internal.jni.be;
						public static j: com.esri.arcgisruntime.internal.jni.be;
						public static k: com.esri.arcgisruntime.internal.jni.be;
						public static l: com.esri.arcgisruntime.internal.jni.be;
						public static m: com.esri.arcgisruntime.internal.jni.be;
						public static n: com.esri.arcgisruntime.internal.jni.be;
						public static o: com.esri.arcgisruntime.internal.jni.be;
						public static p: com.esri.arcgisruntime.internal.jni.be;
						public static q: com.esri.arcgisruntime.internal.jni.be;
						public static r: com.esri.arcgisruntime.internal.jni.be;
						public static s: com.esri.arcgisruntime.internal.jni.be;
						public static t: com.esri.arcgisruntime.internal.jni.be;
						public static u: com.esri.arcgisruntime.internal.jni.be;
						public static v: com.esri.arcgisruntime.internal.jni.be;
						public static w: com.esri.arcgisruntime.internal.jni.be;
						public static x: com.esri.arcgisruntime.internal.jni.be;
						public static y: com.esri.arcgisruntime.internal.jni.be;
						public static z: com.esri.arcgisruntime.internal.jni.be;
						public static A: com.esri.arcgisruntime.internal.jni.be;
						public static B: com.esri.arcgisruntime.internal.jni.be;
						public static C: com.esri.arcgisruntime.internal.jni.be;
						public static D: com.esri.arcgisruntime.internal.jni.be;
						public static E: com.esri.arcgisruntime.internal.jni.be;
						public static F: com.esri.arcgisruntime.internal.jni.be;
						public static G: com.esri.arcgisruntime.internal.jni.be;
						public static H: com.esri.arcgisruntime.internal.jni.be;
						public static I: com.esri.arcgisruntime.internal.jni.be;
						public static J: com.esri.arcgisruntime.internal.jni.be;
						public static K: com.esri.arcgisruntime.internal.jni.be;
						public static L: com.esri.arcgisruntime.internal.jni.be;
						public static M: com.esri.arcgisruntime.internal.jni.be;
						public static N: com.esri.arcgisruntime.internal.jni.be;
						public static O: com.esri.arcgisruntime.internal.jni.be;
						public static P: com.esri.arcgisruntime.internal.jni.be;
						public static Q: com.esri.arcgisruntime.internal.jni.be;
						public static R: com.esri.arcgisruntime.internal.jni.be;
						public static S: com.esri.arcgisruntime.internal.jni.be;
						public static T: com.esri.arcgisruntime.internal.jni.be;
						public static U: com.esri.arcgisruntime.internal.jni.be;
						public static V: com.esri.arcgisruntime.internal.jni.be;
						public static W: com.esri.arcgisruntime.internal.jni.be;
						public static X: com.esri.arcgisruntime.internal.jni.be;
						public static Y: com.esri.arcgisruntime.internal.jni.be;
						public static Z: com.esri.arcgisruntime.internal.jni.be;
						public static aa: com.esri.arcgisruntime.internal.jni.be;
						public static ab: com.esri.arcgisruntime.internal.jni.be;
						public static ac: com.esri.arcgisruntime.internal.jni.be;
						public static ad: com.esri.arcgisruntime.internal.jni.be;
						public static ae: com.esri.arcgisruntime.internal.jni.be;
						public static af: com.esri.arcgisruntime.internal.jni.be;
						public static ag: com.esri.arcgisruntime.internal.jni.be;
						public static ah: com.esri.arcgisruntime.internal.jni.be;
						public static ai: com.esri.arcgisruntime.internal.jni.be;
						public static aj: com.esri.arcgisruntime.internal.jni.be;
						public static ak: com.esri.arcgisruntime.internal.jni.be;
						public static al: com.esri.arcgisruntime.internal.jni.be;
						public static am: com.esri.arcgisruntime.internal.jni.be;
						public static an: com.esri.arcgisruntime.internal.jni.be;
						public static ao: com.esri.arcgisruntime.internal.jni.be;
						public static ap: com.esri.arcgisruntime.internal.jni.be;
						public static aq: com.esri.arcgisruntime.internal.jni.be;
						public static ar: com.esri.arcgisruntime.internal.jni.be;
						public static as: com.esri.arcgisruntime.internal.jni.be;
						public static at: com.esri.arcgisruntime.internal.jni.be;
						public static au: com.esri.arcgisruntime.internal.jni.be;
						public static av: com.esri.arcgisruntime.internal.jni.be;
						public static aw: com.esri.arcgisruntime.internal.jni.be;
						public static ax: com.esri.arcgisruntime.internal.jni.be;
						public static ay: com.esri.arcgisruntime.internal.jni.be;
						public static az: com.esri.arcgisruntime.internal.jni.be;
						public static aA: com.esri.arcgisruntime.internal.jni.be;
						public static aB: com.esri.arcgisruntime.internal.jni.be;
						public static aC: com.esri.arcgisruntime.internal.jni.be;
						public static aD: com.esri.arcgisruntime.internal.jni.be;
						public static aE: com.esri.arcgisruntime.internal.jni.be;
						public static aF: com.esri.arcgisruntime.internal.jni.be;
						public static aG: com.esri.arcgisruntime.internal.jni.be;
						public static aH: com.esri.arcgisruntime.internal.jni.be;
						public static aI: com.esri.arcgisruntime.internal.jni.be;
						public static aJ: com.esri.arcgisruntime.internal.jni.be;
						public static aK: com.esri.arcgisruntime.internal.jni.be;
						public static aL: com.esri.arcgisruntime.internal.jni.be;
						public static aM: com.esri.arcgisruntime.internal.jni.be;
						public static aN: com.esri.arcgisruntime.internal.jni.be;
						public static aO: com.esri.arcgisruntime.internal.jni.be;
						public static aP: com.esri.arcgisruntime.internal.jni.be;
						public static aQ: com.esri.arcgisruntime.internal.jni.be;
						public static aR: com.esri.arcgisruntime.internal.jni.be;
						public static aS: com.esri.arcgisruntime.internal.jni.be;
						public static aT: com.esri.arcgisruntime.internal.jni.be;
						public static aU: com.esri.arcgisruntime.internal.jni.be;
						public static aV: com.esri.arcgisruntime.internal.jni.be;
						public static aW: com.esri.arcgisruntime.internal.jni.be;
						public static aX: com.esri.arcgisruntime.internal.jni.be;
						public static aY: com.esri.arcgisruntime.internal.jni.be;
						public static aZ: com.esri.arcgisruntime.internal.jni.be;
						public static ba: com.esri.arcgisruntime.internal.jni.be;
						public static bb: com.esri.arcgisruntime.internal.jni.be;
						public static bc: com.esri.arcgisruntime.internal.jni.be;
						public static bd: com.esri.arcgisruntime.internal.jni.be;
						public static be: com.esri.arcgisruntime.internal.jni.be;
						public static bf: com.esri.arcgisruntime.internal.jni.be;
						public static bg: com.esri.arcgisruntime.internal.jni.be;
						public static bh: com.esri.arcgisruntime.internal.jni.be;
						public static bi: com.esri.arcgisruntime.internal.jni.be;
						public static bj: com.esri.arcgisruntime.internal.jni.be;
						public static bk: com.esri.arcgisruntime.internal.jni.be;
						public static bl: com.esri.arcgisruntime.internal.jni.be;
						public static bm: com.esri.arcgisruntime.internal.jni.be;
						public static bn: com.esri.arcgisruntime.internal.jni.be;
						public static bo: com.esri.arcgisruntime.internal.jni.be;
						public static bp: com.esri.arcgisruntime.internal.jni.be;
						public static bq: com.esri.arcgisruntime.internal.jni.be;
						public static br: com.esri.arcgisruntime.internal.jni.be;
						public static bs: com.esri.arcgisruntime.internal.jni.be;
						public static bt: com.esri.arcgisruntime.internal.jni.be;
						public static bu: com.esri.arcgisruntime.internal.jni.be;
						public static bv: com.esri.arcgisruntime.internal.jni.be;
						public static bw: com.esri.arcgisruntime.internal.jni.be;
						public static bx: com.esri.arcgisruntime.internal.jni.be;
						public static by: com.esri.arcgisruntime.internal.jni.be;
						public static bz: com.esri.arcgisruntime.internal.jni.be;
						public static bA: com.esri.arcgisruntime.internal.jni.be;
						public static bB: com.esri.arcgisruntime.internal.jni.be;
						public static bC: com.esri.arcgisruntime.internal.jni.be;
						public static bD: com.esri.arcgisruntime.internal.jni.be;
						public static bE: com.esri.arcgisruntime.internal.jni.be;
						public static bF: com.esri.arcgisruntime.internal.jni.be;
						public static bG: com.esri.arcgisruntime.internal.jni.be;
						public static bH: com.esri.arcgisruntime.internal.jni.be;
						public static bI: com.esri.arcgisruntime.internal.jni.be;
						public static bJ: com.esri.arcgisruntime.internal.jni.be;
						public static bK: com.esri.arcgisruntime.internal.jni.be;
						public static bL: com.esri.arcgisruntime.internal.jni.be;
						public static bM: com.esri.arcgisruntime.internal.jni.be;
						public static bN: com.esri.arcgisruntime.internal.jni.be;
						public static bO: com.esri.arcgisruntime.internal.jni.be;
						public static bP: com.esri.arcgisruntime.internal.jni.be;
						public static bQ: com.esri.arcgisruntime.internal.jni.be;
						public static bR: com.esri.arcgisruntime.internal.jni.be;
						public static bS: com.esri.arcgisruntime.internal.jni.be;
						public static bT: com.esri.arcgisruntime.internal.jni.be;
						public static bU: com.esri.arcgisruntime.internal.jni.be;
						public static bV: com.esri.arcgisruntime.internal.jni.be;
						public static bW: com.esri.arcgisruntime.internal.jni.be;
						public static bX: com.esri.arcgisruntime.internal.jni.be;
						public static bY: com.esri.arcgisruntime.internal.jni.be;
						public static bZ: com.esri.arcgisruntime.internal.jni.be;
						public static ca: com.esri.arcgisruntime.internal.jni.be;
						public static cb: com.esri.arcgisruntime.internal.jni.be;
						public static cc: com.esri.arcgisruntime.internal.jni.be;
						public static cd: com.esri.arcgisruntime.internal.jni.be;
						public static ce: com.esri.arcgisruntime.internal.jni.be;
						public static cf: com.esri.arcgisruntime.internal.jni.be;
						public static cg: com.esri.arcgisruntime.internal.jni.be;
						public static ch: com.esri.arcgisruntime.internal.jni.be;
						public static ci: com.esri.arcgisruntime.internal.jni.be;
						public static cj: com.esri.arcgisruntime.internal.jni.be;
						public static ck: com.esri.arcgisruntime.internal.jni.be;
						public static cl: com.esri.arcgisruntime.internal.jni.be;
						public static cm: com.esri.arcgisruntime.internal.jni.be;
						public static cn: com.esri.arcgisruntime.internal.jni.be;
						public static co: com.esri.arcgisruntime.internal.jni.be;
						public static cp: com.esri.arcgisruntime.internal.jni.be;
						public static cq: com.esri.arcgisruntime.internal.jni.be;
						public static cr: com.esri.arcgisruntime.internal.jni.be;
						public static cs: com.esri.arcgisruntime.internal.jni.be;
						public static ct: com.esri.arcgisruntime.internal.jni.be;
						public static cu: com.esri.arcgisruntime.internal.jni.be;
						public static cv: com.esri.arcgisruntime.internal.jni.be;
						public static cw: com.esri.arcgisruntime.internal.jni.be;
						public static cx: com.esri.arcgisruntime.internal.jni.be;
						public static cy: com.esri.arcgisruntime.internal.jni.be;
						public static cz: com.esri.arcgisruntime.internal.jni.be;
						public static cA: com.esri.arcgisruntime.internal.jni.be;
						public static cB: com.esri.arcgisruntime.internal.jni.be;
						public static cC: com.esri.arcgisruntime.internal.jni.be;
						public static cD: com.esri.arcgisruntime.internal.jni.be;
						public static cE: com.esri.arcgisruntime.internal.jni.be;
						public static cF: com.esri.arcgisruntime.internal.jni.be;
						public static cG: com.esri.arcgisruntime.internal.jni.be;
						public static cH: com.esri.arcgisruntime.internal.jni.be;
						public static cI: com.esri.arcgisruntime.internal.jni.be;
						public static cJ: com.esri.arcgisruntime.internal.jni.be;
						public static cK: com.esri.arcgisruntime.internal.jni.be;
						public static cL: com.esri.arcgisruntime.internal.jni.be;
						public static cM: com.esri.arcgisruntime.internal.jni.be;
						public static cN: com.esri.arcgisruntime.internal.jni.be;
						public static cO: com.esri.arcgisruntime.internal.jni.be;
						public static cP: com.esri.arcgisruntime.internal.jni.be;
						public static cQ: com.esri.arcgisruntime.internal.jni.be;
						public static cR: com.esri.arcgisruntime.internal.jni.be;
						public static cS: com.esri.arcgisruntime.internal.jni.be;
						public static cT: com.esri.arcgisruntime.internal.jni.be;
						public static cU: com.esri.arcgisruntime.internal.jni.be;
						public static cV: com.esri.arcgisruntime.internal.jni.be;
						public static cW: com.esri.arcgisruntime.internal.jni.be;
						public static cX: com.esri.arcgisruntime.internal.jni.be;
						public static cY: com.esri.arcgisruntime.internal.jni.be;
						public static cZ: com.esri.arcgisruntime.internal.jni.be;
						public static da: com.esri.arcgisruntime.internal.jni.be;
						public static db: com.esri.arcgisruntime.internal.jni.be;
						public static dc: com.esri.arcgisruntime.internal.jni.be;
						public static dd: com.esri.arcgisruntime.internal.jni.be;
						public static de: com.esri.arcgisruntime.internal.jni.be;
						public static df: com.esri.arcgisruntime.internal.jni.be;
						public static dg: com.esri.arcgisruntime.internal.jni.be;
						public static dh: com.esri.arcgisruntime.internal.jni.be;
						public static di: com.esri.arcgisruntime.internal.jni.be;
						public static dj: com.esri.arcgisruntime.internal.jni.be;
						public static dk: com.esri.arcgisruntime.internal.jni.be;
						public static dl: com.esri.arcgisruntime.internal.jni.be;
						public static dm: com.esri.arcgisruntime.internal.jni.be;
						public static dn: com.esri.arcgisruntime.internal.jni.be;
						public static do: com.esri.arcgisruntime.internal.jni.be;
						public static dp: com.esri.arcgisruntime.internal.jni.be;
						public static dq: com.esri.arcgisruntime.internal.jni.be;
						public static dr: com.esri.arcgisruntime.internal.jni.be;
						public static ds: com.esri.arcgisruntime.internal.jni.be;
						public static dt: com.esri.arcgisruntime.internal.jni.be;
						public static du: com.esri.arcgisruntime.internal.jni.be;
						public static dv: com.esri.arcgisruntime.internal.jni.be;
						public static dw: com.esri.arcgisruntime.internal.jni.be;
						public static dx: com.esri.arcgisruntime.internal.jni.be;
						public static dy: com.esri.arcgisruntime.internal.jni.be;
						public static dz: com.esri.arcgisruntime.internal.jni.be;
						public static dA: com.esri.arcgisruntime.internal.jni.be;
						public static dB: com.esri.arcgisruntime.internal.jni.be;
						public static dC: com.esri.arcgisruntime.internal.jni.be;
						public static dD: com.esri.arcgisruntime.internal.jni.be;
						public static dE: com.esri.arcgisruntime.internal.jni.be;
						public static dF: com.esri.arcgisruntime.internal.jni.be;
						public static dG: com.esri.arcgisruntime.internal.jni.be;
						public static dH: com.esri.arcgisruntime.internal.jni.be;
						public static dI: com.esri.arcgisruntime.internal.jni.be;
						public static dJ: com.esri.arcgisruntime.internal.jni.be;
						public static dK: com.esri.arcgisruntime.internal.jni.be;
						public static dL: com.esri.arcgisruntime.internal.jni.be;
						public static dM: com.esri.arcgisruntime.internal.jni.be;
						public static dN: com.esri.arcgisruntime.internal.jni.be;
						public static dO: com.esri.arcgisruntime.internal.jni.be;
						public static dP: com.esri.arcgisruntime.internal.jni.be;
						public static dQ: com.esri.arcgisruntime.internal.jni.be;
						public static dR: com.esri.arcgisruntime.internal.jni.be;
						public static dS: com.esri.arcgisruntime.internal.jni.be;
						public static dT: com.esri.arcgisruntime.internal.jni.be;
						public static dU: com.esri.arcgisruntime.internal.jni.be;
						public static dV: com.esri.arcgisruntime.internal.jni.be;
						public static dW: com.esri.arcgisruntime.internal.jni.be;
						public static dX: com.esri.arcgisruntime.internal.jni.be;
						public static dY: com.esri.arcgisruntime.internal.jni.be;
						public static dZ: com.esri.arcgisruntime.internal.jni.be;
						public static ea: com.esri.arcgisruntime.internal.jni.be;
						public static eb: com.esri.arcgisruntime.internal.jni.be;
						public static ec: com.esri.arcgisruntime.internal.jni.be;
						public static ed: com.esri.arcgisruntime.internal.jni.be;
						public static ee: com.esri.arcgisruntime.internal.jni.be;
						public static ef: com.esri.arcgisruntime.internal.jni.be;
						public static eg: com.esri.arcgisruntime.internal.jni.be;
						public static eh: com.esri.arcgisruntime.internal.jni.be;
						public static ei: com.esri.arcgisruntime.internal.jni.be;
						public static ej: com.esri.arcgisruntime.internal.jni.be;
						public static ek: com.esri.arcgisruntime.internal.jni.be;
						public static el: com.esri.arcgisruntime.internal.jni.be;
						public static em: com.esri.arcgisruntime.internal.jni.be;
						public static en: com.esri.arcgisruntime.internal.jni.be;
						public static eo: com.esri.arcgisruntime.internal.jni.be;
						public static ep: com.esri.arcgisruntime.internal.jni.be;
						public static eq: com.esri.arcgisruntime.internal.jni.be;
						public static er: com.esri.arcgisruntime.internal.jni.be;
						public static es: com.esri.arcgisruntime.internal.jni.be;
						public static et: com.esri.arcgisruntime.internal.jni.be;
						public static eu: com.esri.arcgisruntime.internal.jni.be;
						public static ev: com.esri.arcgisruntime.internal.jni.be;
						public static ew: com.esri.arcgisruntime.internal.jni.be;
						public static ex: com.esri.arcgisruntime.internal.jni.be;
						public static ey: com.esri.arcgisruntime.internal.jni.be;
						public static ez: com.esri.arcgisruntime.internal.jni.be;
						public static eA: com.esri.arcgisruntime.internal.jni.be;
						public static eB: com.esri.arcgisruntime.internal.jni.be;
						public static eC: com.esri.arcgisruntime.internal.jni.be;
						public static eD: com.esri.arcgisruntime.internal.jni.be;
						public static eE: com.esri.arcgisruntime.internal.jni.be;
						public static eF: com.esri.arcgisruntime.internal.jni.be;
						public static eG: com.esri.arcgisruntime.internal.jni.be;
						public static eH: com.esri.arcgisruntime.internal.jni.be;
						public static eI: com.esri.arcgisruntime.internal.jni.be;
						public static eJ: com.esri.arcgisruntime.internal.jni.be;
						public static eK: com.esri.arcgisruntime.internal.jni.be;
						public static eL: com.esri.arcgisruntime.internal.jni.be;
						public static eM: com.esri.arcgisruntime.internal.jni.be;
						public static eN: com.esri.arcgisruntime.internal.jni.be;
						public static eO: com.esri.arcgisruntime.internal.jni.be;
						public static eP: com.esri.arcgisruntime.internal.jni.be;
						public static eQ: com.esri.arcgisruntime.internal.jni.be;
						public static eR: com.esri.arcgisruntime.internal.jni.be;
						public static eS: com.esri.arcgisruntime.internal.jni.be;
						public static eT: com.esri.arcgisruntime.internal.jni.be;
						public static eU: com.esri.arcgisruntime.internal.jni.be;
						public static eV: com.esri.arcgisruntime.internal.jni.be;
						public static eW: com.esri.arcgisruntime.internal.jni.be;
						public static eX: com.esri.arcgisruntime.internal.jni.be;
						public static eY: com.esri.arcgisruntime.internal.jni.be;
						public static eZ: com.esri.arcgisruntime.internal.jni.be;
						public static fa: com.esri.arcgisruntime.internal.jni.be;
						public static fb: com.esri.arcgisruntime.internal.jni.be;
						public static fc: com.esri.arcgisruntime.internal.jni.be;
						public static fd: com.esri.arcgisruntime.internal.jni.be;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.be>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.be;
						public a(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bf {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bf>;
						public static b: com.esri.arcgisruntime.internal.jni.bf;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bf;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bf>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bf;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bg>;
						public static b: com.esri.arcgisruntime.internal.jni.bg;
						public static c: com.esri.arcgisruntime.internal.jni.bg;
						public static d: com.esri.arcgisruntime.internal.jni.bg;
						public static e: com.esri.arcgisruntime.internal.jni.bg;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bg;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bg>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bg;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bh {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bh>;
						public static b: com.esri.arcgisruntime.internal.jni.bh;
						public static c: com.esri.arcgisruntime.internal.jni.bh;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bh;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bh;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bh>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bi {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bi>;
						public static b: com.esri.arcgisruntime.internal.jni.bi;
						public static c: com.esri.arcgisruntime.internal.jni.bi;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bi;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bi;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bi>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bj>;
						public static b: com.esri.arcgisruntime.internal.jni.bj;
						public static c: com.esri.arcgisruntime.internal.jni.bj;
						public static d: com.esri.arcgisruntime.internal.jni.bj;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bj;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bj;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bj>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bk {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bk>;
						public static b: com.esri.arcgisruntime.internal.jni.bk;
						public static c: com.esri.arcgisruntime.internal.jni.bk;
						public static d: com.esri.arcgisruntime.internal.jni.bk;
						public static e: com.esri.arcgisruntime.internal.jni.bk;
						public static f: com.esri.arcgisruntime.internal.jni.bk;
						public static g: com.esri.arcgisruntime.internal.jni.bk;
						public static h: com.esri.arcgisruntime.internal.jni.bk;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bk;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bk>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bk;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bl {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bl>;
						public static b: com.esri.arcgisruntime.internal.jni.bl;
						public static c: com.esri.arcgisruntime.internal.jni.bl;
						public static d: com.esri.arcgisruntime.internal.jni.bl;
						public static e: com.esri.arcgisruntime.internal.jni.bl;
						public static f: com.esri.arcgisruntime.internal.jni.bl;
						public static g: com.esri.arcgisruntime.internal.jni.bl;
						public static h: com.esri.arcgisruntime.internal.jni.bl;
						public static i: com.esri.arcgisruntime.internal.jni.bl;
						public static j: com.esri.arcgisruntime.internal.jni.bl;
						public static k: com.esri.arcgisruntime.internal.jni.bl;
						public static l: com.esri.arcgisruntime.internal.jni.bl;
						public static m: com.esri.arcgisruntime.internal.jni.bl;
						public static n: com.esri.arcgisruntime.internal.jni.bl;
						public static o: com.esri.arcgisruntime.internal.jni.bl;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bl;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bl>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bl;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bm extends com.esri.arcgisruntime.internal.jni.CoreSymbolLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bm>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bm;
						public constructor();
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bn {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bn>;
						public static b: com.esri.arcgisruntime.internal.jni.bn;
						public static c: com.esri.arcgisruntime.internal.jni.bn;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bn>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bn;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bn;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bo>;
						public static b: com.esri.arcgisruntime.internal.jni.bo;
						public static c: com.esri.arcgisruntime.internal.jni.bo;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bo>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bo;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bp>;
						public static b: com.esri.arcgisruntime.internal.jni.bp;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bp;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bp>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bp;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bq>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.bq interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class br {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.br>;
						public static b: com.esri.arcgisruntime.internal.jni.br;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.br>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.br;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bs>;
						public static b: com.esri.arcgisruntime.internal.jni.bs;
						public static c: com.esri.arcgisruntime.internal.jni.bs;
						public static d: com.esri.arcgisruntime.internal.jni.bs;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bs>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bs;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bs;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bt {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bt>;
						public static b: com.esri.arcgisruntime.internal.jni.bt;
						public static c: com.esri.arcgisruntime.internal.jni.bt;
						public static d: com.esri.arcgisruntime.internal.jni.bt;
						public static e: com.esri.arcgisruntime.internal.jni.bt;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bt>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bt;
						public a(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bu {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bu>;
						public static b: com.esri.arcgisruntime.internal.jni.bu;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bu>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bu;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bu;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bv>;
						public static b: com.esri.arcgisruntime.internal.jni.bv;
						public static c: com.esri.arcgisruntime.internal.jni.bv;
						public static d: com.esri.arcgisruntime.internal.jni.bv;
						public static e: com.esri.arcgisruntime.internal.jni.bv;
						public static f: com.esri.arcgisruntime.internal.jni.bv;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bv;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bv>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bv;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bw>;
						public static b: com.esri.arcgisruntime.internal.jni.bw;
						public static c: com.esri.arcgisruntime.internal.jni.bw;
						public static d: com.esri.arcgisruntime.internal.jni.bw;
						public static e: com.esri.arcgisruntime.internal.jni.bw;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bw;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bw>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bw;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bx {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bx>;
						public static b: com.esri.arcgisruntime.internal.jni.bx;
						public static c: com.esri.arcgisruntime.internal.jni.bx;
						public static d: com.esri.arcgisruntime.internal.jni.bx;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bx;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bx>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class by {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.by>;
						public static b: com.esri.arcgisruntime.internal.jni.by;
						public static c: com.esri.arcgisruntime.internal.jni.by;
						public static d: com.esri.arcgisruntime.internal.jni.by;
						public static e: com.esri.arcgisruntime.internal.jni.by;
						public static f: com.esri.arcgisruntime.internal.jni.by;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.by;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.by;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.by>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class bz {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.bz>;
						public static b: com.esri.arcgisruntime.internal.jni.bz;
						public static c: com.esri.arcgisruntime.internal.jni.bz;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.bz;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.bz;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.bz>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class c {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.c>;
						public static b: com.esri.arcgisruntime.internal.jni.c;
						public static c: com.esri.arcgisruntime.internal.jni.c;
						public static d: com.esri.arcgisruntime.internal.jni.c;
						public static e: com.esri.arcgisruntime.internal.jni.c;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.c;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.c>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.c;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ca {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ca>;
						public static b: com.esri.arcgisruntime.internal.jni.ca;
						public static c: com.esri.arcgisruntime.internal.jni.ca;
						public static d: com.esri.arcgisruntime.internal.jni.ca;
						public static e: com.esri.arcgisruntime.internal.jni.ca;
						public static f: com.esri.arcgisruntime.internal.jni.ca;
						public static g: com.esri.arcgisruntime.internal.jni.ca;
						public static h: com.esri.arcgisruntime.internal.jni.ca;
						public static i: com.esri.arcgisruntime.internal.jni.ca;
						public static j: com.esri.arcgisruntime.internal.jni.ca;
						public static k: com.esri.arcgisruntime.internal.jni.ca;
						public static l: com.esri.arcgisruntime.internal.jni.ca;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ca;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ca>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ca;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cb {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cb>;
						public static b: com.esri.arcgisruntime.internal.jni.cb;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cb;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cb>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cb;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cc {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cc>;
						public static b: com.esri.arcgisruntime.internal.jni.cc;
						public static c: com.esri.arcgisruntime.internal.jni.cc;
						public static d: com.esri.arcgisruntime.internal.jni.cc;
						public static e: com.esri.arcgisruntime.internal.jni.cc;
						public static f: com.esri.arcgisruntime.internal.jni.cc;
						public static g: com.esri.arcgisruntime.internal.jni.cc;
						public static h: com.esri.arcgisruntime.internal.jni.cc;
						public static i: com.esri.arcgisruntime.internal.jni.cc;
						public static j: com.esri.arcgisruntime.internal.jni.cc;
						public static k: com.esri.arcgisruntime.internal.jni.cc;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cc>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cc;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cc;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cd extends com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cd>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cd;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ce {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ce>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ce interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreArray, param3: com.esri.arcgisruntime.internal.jni.CoreElementReference): void;
						});
						public constructor();
						public a(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.jni.CoreArray, param3: com.esri.arcgisruntime.internal.jni.CoreElementReference): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cf {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cf>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.cf interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreLocalizedResource): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLocalizedResource): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cg>;
						public static b: com.esri.arcgisruntime.internal.jni.cg;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cg;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cg>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ch {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ch>;
						public static b: com.esri.arcgisruntime.internal.jni.ch;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ch;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ch>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ch;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ci {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ci>;
						public static b: com.esri.arcgisruntime.internal.jni.ci;
						public static c: com.esri.arcgisruntime.internal.jni.ci;
						public static d: com.esri.arcgisruntime.internal.jni.ci;
						public static e: com.esri.arcgisruntime.internal.jni.ci;
						public static f: com.esri.arcgisruntime.internal.jni.ci;
						public static g: com.esri.arcgisruntime.internal.jni.ci;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ci;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ci;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ci>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cj>;
						public static b: com.esri.arcgisruntime.internal.jni.cj;
						public static c: com.esri.arcgisruntime.internal.jni.cj;
						public static d: com.esri.arcgisruntime.internal.jni.cj;
						public static e: com.esri.arcgisruntime.internal.jni.cj;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cj;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cj;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cj>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ck {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ck>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ck interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cl extends com.esri.arcgisruntime.internal.jni.CoreRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cl>;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cl;
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cm>;
						public static b: com.esri.arcgisruntime.internal.jni.cm;
						public static c: com.esri.arcgisruntime.internal.jni.cm;
						public static d: com.esri.arcgisruntime.internal.jni.cm;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cm;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cm>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cm;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cn {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cn>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.cn interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class co {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.co>;
						public static b: com.esri.arcgisruntime.internal.jni.co;
						public static c: com.esri.arcgisruntime.internal.jni.co;
						public static d: com.esri.arcgisruntime.internal.jni.co;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.co>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.co;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.co;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cp extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cp>;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cp;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cq>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.cq interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cr extends com.esri.arcgisruntime.internal.jni.CoreDomain {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cr>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cr;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cs>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.cs interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							c(): java.lang.Long;
						});
						public constructor();
						public c(): java.lang.Long;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ct {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ct>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ct interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cu {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cu>;
						public static b: com.esri.arcgisruntime.internal.jni.cu;
						public static c: com.esri.arcgisruntime.internal.jni.cu;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cu>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cu;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cu;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cv>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.cv interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cw>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.cw interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cx extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cx>;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cx;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cy {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cy>;
						public static b: com.esri.arcgisruntime.internal.jni.cy;
						public static c: com.esri.arcgisruntime.internal.jni.cy;
						public static d: com.esri.arcgisruntime.internal.jni.cy;
						public static e: com.esri.arcgisruntime.internal.jni.cy;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cy;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cy;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cy>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class cz {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.cz>;
						public static b: com.esri.arcgisruntime.internal.jni.cz;
						public static c: com.esri.arcgisruntime.internal.jni.cz;
						public static d: com.esri.arcgisruntime.internal.jni.cz;
						public static e: com.esri.arcgisruntime.internal.jni.cz;
						public static f: com.esri.arcgisruntime.internal.jni.cz;
						public static g: com.esri.arcgisruntime.internal.jni.cz;
						public static h: com.esri.arcgisruntime.internal.jni.cz;
						public static i: com.esri.arcgisruntime.internal.jni.cz;
						public static j: com.esri.arcgisruntime.internal.jni.cz;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.cz;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.cz;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.cz>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class d {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.d>;
						public static b: com.esri.arcgisruntime.internal.jni.d;
						public static c: com.esri.arcgisruntime.internal.jni.d;
						public static d: com.esri.arcgisruntime.internal.jni.d;
						public static e: com.esri.arcgisruntime.internal.jni.d;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.d;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.d;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.d>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class da {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.da>;
						public static b: com.esri.arcgisruntime.internal.jni.da;
						public static c: com.esri.arcgisruntime.internal.jni.da;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.da>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.da;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.da;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class db {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.db>;
						public static b: com.esri.arcgisruntime.internal.jni.db;
						public static c: com.esri.arcgisruntime.internal.jni.db;
						public static d: com.esri.arcgisruntime.internal.jni.db;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.db;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.db>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.db;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dc {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dc>;
						public static b: com.esri.arcgisruntime.internal.jni.dc;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dc;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dc>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dc;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dd {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dd>;
						public static b: com.esri.arcgisruntime.internal.jni.dd;
						public static c: com.esri.arcgisruntime.internal.jni.dd;
						public static d: com.esri.arcgisruntime.internal.jni.dd;
						public static e: com.esri.arcgisruntime.internal.jni.dd;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dd>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dd;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dd;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class de {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.de>;
						public static b: com.esri.arcgisruntime.internal.jni.de;
						public static c: com.esri.arcgisruntime.internal.jni.de;
						public static d: com.esri.arcgisruntime.internal.jni.de;
						public static e: com.esri.arcgisruntime.internal.jni.de;
						public static f: com.esri.arcgisruntime.internal.jni.de;
						public static g: com.esri.arcgisruntime.internal.jni.de;
						public static h: com.esri.arcgisruntime.internal.jni.de;
						public static i: com.esri.arcgisruntime.internal.jni.de;
						public static j: com.esri.arcgisruntime.internal.jni.de;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.de>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.de;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.de;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class df {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.df>;
						public static b: com.esri.arcgisruntime.internal.jni.df;
						public static c: com.esri.arcgisruntime.internal.jni.df;
						public static d: com.esri.arcgisruntime.internal.jni.df;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.df>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.df;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.df;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dg>;
						public static b: com.esri.arcgisruntime.internal.jni.dg;
						public static c: com.esri.arcgisruntime.internal.jni.dg;
						public static d: com.esri.arcgisruntime.internal.jni.dg;
						public static e: com.esri.arcgisruntime.internal.jni.dg;
						public static f: com.esri.arcgisruntime.internal.jni.dg;
						public static g: com.esri.arcgisruntime.internal.jni.dg;
						public static h: com.esri.arcgisruntime.internal.jni.dg;
						public static i: com.esri.arcgisruntime.internal.jni.dg;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dg>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dg;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dg;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dh extends com.esri.arcgisruntime.internal.jni.CoreKMLNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dh>;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): void;
						public c(param0: string): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.fw): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.cn): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dh;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class di {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.di>;
						public static b: com.esri.arcgisruntime.internal.jni.di;
						public static c: com.esri.arcgisruntime.internal.jni.di;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.di;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.di>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.di;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dj>;
						public static b: com.esri.arcgisruntime.internal.jni.dj;
						public static c: com.esri.arcgisruntime.internal.jni.dj;
						public static d: com.esri.arcgisruntime.internal.jni.dj;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dj;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dj;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dj>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dk {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dk>;
						public static b: com.esri.arcgisruntime.internal.jni.dk;
						public static c: com.esri.arcgisruntime.internal.jni.dk;
						public static d: com.esri.arcgisruntime.internal.jni.dk;
						public static e: com.esri.arcgisruntime.internal.jni.dk;
						public static f: com.esri.arcgisruntime.internal.jni.dk;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dk;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dk;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dk>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dl {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dl>;
						public static b: com.esri.arcgisruntime.internal.jni.dl;
						public static c: com.esri.arcgisruntime.internal.jni.dl;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dl;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dl;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dl>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dm>;
						public static b: com.esri.arcgisruntime.internal.jni.dm;
						public static c: com.esri.arcgisruntime.internal.jni.dm;
						public static d: com.esri.arcgisruntime.internal.jni.dm;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dm;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dm>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dm;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dn {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dn>;
						public static b: com.esri.arcgisruntime.internal.jni.dn;
						public static c: com.esri.arcgisruntime.internal.jni.dn;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dn;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dn>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dn;
					}
				}
			}
		}
	}
}

// declare module com {
// 	export module esri {
// 		export module arcgisruntime {
// 			export module internal {
// 				export module jni {
// 					export class do {
// 						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.do>;
// 						public static b: com.esri.arcgisruntime.internal.jni.do;
// 						public static c: com.esri.arcgisruntime.internal.jni.do;
// 						public static d: com.esri.arcgisruntime.internal.jni.do;
// 						public static e: com.esri.arcgisruntime.internal.jni.do;
// 						public static f: com.esri.arcgisruntime.internal.jni.do;
// 						public static g: com.esri.arcgisruntime.internal.jni.do;
// 						public static h: com.esri.arcgisruntime.internal.jni.do;
// 						public static i: com.esri.arcgisruntime.internal.jni.do;
// 						public static j: com.esri.arcgisruntime.internal.jni.do;
// 						public static k: com.esri.arcgisruntime.internal.jni.do;
// 						public static l: com.esri.arcgisruntime.internal.jni.do;
// 						public static m: com.esri.arcgisruntime.internal.jni.do;
// 						public static n: com.esri.arcgisruntime.internal.jni.do;
// 						public static o: com.esri.arcgisruntime.internal.jni.do;
// 						public static p: com.esri.arcgisruntime.internal.jni.do;
// 						public static q: com.esri.arcgisruntime.internal.jni.do;
// 						public static r: com.esri.arcgisruntime.internal.jni.do;
// 						public static s: com.esri.arcgisruntime.internal.jni.do;
// 						public static t: com.esri.arcgisruntime.internal.jni.do;
// 						public static u: com.esri.arcgisruntime.internal.jni.do;
// 						public static v: com.esri.arcgisruntime.internal.jni.do;
// 						public static w: com.esri.arcgisruntime.internal.jni.do;
// 						public static x: com.esri.arcgisruntime.internal.jni.do;
// 						public static y: com.esri.arcgisruntime.internal.jni.do;
// 						public static z: com.esri.arcgisruntime.internal.jni.do;
// 						public static a(param0: number): com.esri.arcgisruntime.internal.jni.do;
// 						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.do>;
// 						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.do;
// 					}
// 				}
// 			}
// 		}
// 	}
// }

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dp>;
						public static b: com.esri.arcgisruntime.internal.jni.dp;
						public static c: com.esri.arcgisruntime.internal.jni.dp;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dp>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dp;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dq>;
						public static b: com.esri.arcgisruntime.internal.jni.dq;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dq;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dq>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dq;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dr {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dr>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.dr interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
							h(): string;
							b(): boolean;
							e(): boolean;
							k(): boolean;
							a(param0: boolean): void;
							b(param0: boolean): void;
							n(): com.esri.arcgisruntime.internal.jni.CoreTask;
							a(param0: number): boolean;
						});
						public constructor();
						public a(param0: number): boolean;
						public h(): string;
						public k(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public e(): boolean;
						public b(param0: boolean): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ds {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ds>;
						public static b: com.esri.arcgisruntime.internal.jni.ds;
						public static c: com.esri.arcgisruntime.internal.jni.ds;
						public static d: com.esri.arcgisruntime.internal.jni.ds;
						public static e: com.esri.arcgisruntime.internal.jni.ds;
						public static f: com.esri.arcgisruntime.internal.jni.ds;
						public static g: com.esri.arcgisruntime.internal.jni.ds;
						public static h: com.esri.arcgisruntime.internal.jni.ds;
						public static i: com.esri.arcgisruntime.internal.jni.ds;
						public static j: com.esri.arcgisruntime.internal.jni.ds;
						public static k: com.esri.arcgisruntime.internal.jni.ds;
						public static l: com.esri.arcgisruntime.internal.jni.ds;
						public static m: com.esri.arcgisruntime.internal.jni.ds;
						public static n: com.esri.arcgisruntime.internal.jni.ds;
						public static o: com.esri.arcgisruntime.internal.jni.ds;
						public static p: com.esri.arcgisruntime.internal.jni.ds;
						public static q: com.esri.arcgisruntime.internal.jni.ds;
						public static r: com.esri.arcgisruntime.internal.jni.ds;
						public static s: com.esri.arcgisruntime.internal.jni.ds;
						public static t: com.esri.arcgisruntime.internal.jni.ds;
						public static u: com.esri.arcgisruntime.internal.jni.ds;
						public static v: com.esri.arcgisruntime.internal.jni.ds;
						public static w: com.esri.arcgisruntime.internal.jni.ds;
						public static x: com.esri.arcgisruntime.internal.jni.ds;
						public static y: com.esri.arcgisruntime.internal.jni.ds;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ds;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ds>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ds;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dt {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dt>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.dt interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: com.esri.arcgisruntime.internal.jni.CoreLayerViewState): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer, param1: com.esri.arcgisruntime.internal.jni.CoreLayerViewState): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class du {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.du>;
						public static b: com.esri.arcgisruntime.internal.jni.du;
						public static c: com.esri.arcgisruntime.internal.jni.du;
						public static d: com.esri.arcgisruntime.internal.jni.du;
						public static e: com.esri.arcgisruntime.internal.jni.du;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.du>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.du;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.du;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dv>;
						public static b: com.esri.arcgisruntime.internal.jni.dv;
						public static c: com.esri.arcgisruntime.internal.jni.dv;
						public static d: com.esri.arcgisruntime.internal.jni.dv;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dv>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dv;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dv;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dw>;
						public static b: com.esri.arcgisruntime.internal.jni.dw;
						public static c: com.esri.arcgisruntime.internal.jni.dw;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dw>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dw;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dw;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dx {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dx>;
						public static b: com.esri.arcgisruntime.internal.jni.dx;
						public static c: com.esri.arcgisruntime.internal.jni.dx;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dx;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dx>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dx;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dy {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dy>;
						public static b: com.esri.arcgisruntime.internal.jni.dy;
						public static c: com.esri.arcgisruntime.internal.jni.dy;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dy;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dy;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dy>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class dz {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.dz>;
						public static b: com.esri.arcgisruntime.internal.jni.dz;
						public static c: com.esri.arcgisruntime.internal.jni.dz;
						public static d: com.esri.arcgisruntime.internal.jni.dz;
						public static e: com.esri.arcgisruntime.internal.jni.dz;
						public static f: com.esri.arcgisruntime.internal.jni.dz;
						public static g: com.esri.arcgisruntime.internal.jni.dz;
						public static h: com.esri.arcgisruntime.internal.jni.dz;
						public static i: com.esri.arcgisruntime.internal.jni.dz;
						public static j: com.esri.arcgisruntime.internal.jni.dz;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.dz;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.dz>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.dz;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class e {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.e>;
						public static b: com.esri.arcgisruntime.internal.jni.e;
						public static c: com.esri.arcgisruntime.internal.jni.e;
						public static d: com.esri.arcgisruntime.internal.jni.e;
						public static e: com.esri.arcgisruntime.internal.jni.e;
						public static f: com.esri.arcgisruntime.internal.jni.e;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.e;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.e;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.e>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ea {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ea>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ea interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResource): void;
						});
						public constructor();
						public a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreLocalizedResource): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class eb extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.eb>;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.eb;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ec {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ec>;
						public static b: com.esri.arcgisruntime.internal.jni.ec;
						public static c: com.esri.arcgisruntime.internal.jni.ec;
						public static d: com.esri.arcgisruntime.internal.jni.ec;
						public static e: com.esri.arcgisruntime.internal.jni.ec;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ec>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ec;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ec;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ed {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ed>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ed interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.ec): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.ec): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ee extends com.esri.arcgisruntime.internal.jni.gg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ee>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ee interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							e_(): com.esri.arcgisruntime.internal.jni.CoreError;
							f_(): com.esri.arcgisruntime.internal.jni.ec;
							f(): void;
							g_(): void;
							j(): void;
							a(param0: com.esri.arcgisruntime.internal.jni.an): void;
							a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
							a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						});
						public constructor();
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ef {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ef>;
						public static b: com.esri.arcgisruntime.internal.jni.ef;
						public static c: com.esri.arcgisruntime.internal.jni.ef;
						public static d: com.esri.arcgisruntime.internal.jni.ef;
						public static e: com.esri.arcgisruntime.internal.jni.ef;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ef>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ef;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ef;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class eg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.eg>;
						public static b: com.esri.arcgisruntime.internal.jni.eg;
						public static c: com.esri.arcgisruntime.internal.jni.eg;
						public static d: com.esri.arcgisruntime.internal.jni.eg;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.eg>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.eg;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.eg;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class eh {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.eh>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.eh interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreLocation): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreLocation): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ei {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ei>;
						public static b: com.esri.arcgisruntime.internal.jni.ei;
						public static c: com.esri.arcgisruntime.internal.jni.ei;
						public static d: com.esri.arcgisruntime.internal.jni.ei;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ei;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ei>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ei;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ej {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ej>;
						public static b: com.esri.arcgisruntime.internal.jni.ej;
						public static c: com.esri.arcgisruntime.internal.jni.ej;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ej;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ej;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ej>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ek {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ek>;
						public static b: com.esri.arcgisruntime.internal.jni.ek;
						public static c: com.esri.arcgisruntime.internal.jni.ek;
						public static d: com.esri.arcgisruntime.internal.jni.ek;
						public static e: com.esri.arcgisruntime.internal.jni.ek;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ek;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ek>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class el {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.el>;
						public static b: com.esri.arcgisruntime.internal.jni.el;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.el;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.el;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.el>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class em {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.em>;
						public static b: com.esri.arcgisruntime.internal.jni.em;
						public static c: com.esri.arcgisruntime.internal.jni.em;
						public static d: com.esri.arcgisruntime.internal.jni.em;
						public static e: com.esri.arcgisruntime.internal.jni.em;
						public static f: com.esri.arcgisruntime.internal.jni.em;
						public static g: com.esri.arcgisruntime.internal.jni.em;
						public static h: com.esri.arcgisruntime.internal.jni.em;
						public static i: com.esri.arcgisruntime.internal.jni.em;
						public static j: com.esri.arcgisruntime.internal.jni.em;
						public static k: com.esri.arcgisruntime.internal.jni.em;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.em;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.em;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.em>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class en {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.en>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.en interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreDistance, param1: com.esri.arcgisruntime.internal.jni.CoreDistance, param2: com.esri.arcgisruntime.internal.jni.CoreDistance): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDistance, param1: com.esri.arcgisruntime.internal.jni.CoreDistance, param2: com.esri.arcgisruntime.internal.jni.CoreDistance): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class eo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.eo>;
						public static b: com.esri.arcgisruntime.internal.jni.eo;
						public static c: com.esri.arcgisruntime.internal.jni.eo;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.eo;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.eo>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.eo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ep {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ep>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ep interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreNMEALocation): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreNMEALocation): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class eq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.eq>;
						public static b: com.esri.arcgisruntime.internal.jni.eq;
						public static c: com.esri.arcgisruntime.internal.jni.eq;
						public static d: com.esri.arcgisruntime.internal.jni.eq;
						public static e: com.esri.arcgisruntime.internal.jni.eq;
						public static f: com.esri.arcgisruntime.internal.jni.eq;
						public static g: com.esri.arcgisruntime.internal.jni.eq;
						public static h: com.esri.arcgisruntime.internal.jni.eq;
						public static i: com.esri.arcgisruntime.internal.jni.eq;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.eq>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.eq;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.eq;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class er {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.er>;
						public static b: com.esri.arcgisruntime.internal.jni.er;
						public static c: com.esri.arcgisruntime.internal.jni.er;
						public static d: com.esri.arcgisruntime.internal.jni.er;
						public static e: com.esri.arcgisruntime.internal.jni.er;
						public static f: com.esri.arcgisruntime.internal.jni.er;
						public static g: com.esri.arcgisruntime.internal.jni.er;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.er>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.er;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class es {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.es>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.es interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: boolean): void;
						});
						public constructor();
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class et {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.et>;
						public static b: com.esri.arcgisruntime.internal.jni.et;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.et;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.et>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.et;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class eu {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.eu>;
						public static b: com.esri.arcgisruntime.internal.jni.eu;
						public static c: com.esri.arcgisruntime.internal.jni.eu;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.eu>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.eu;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.eu;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ev {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ev>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ev interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							newVoiceGuidance(param0: com.esri.arcgisruntime.internal.jni.CoreVoiceGuidance): void;
						});
						public constructor();
						public newVoiceGuidance(param0: com.esri.arcgisruntime.internal.jni.CoreVoiceGuidance): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ew {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ew>;
						public static b: com.esri.arcgisruntime.internal.jni.ew;
						public static c: com.esri.arcgisruntime.internal.jni.ew;
						public static d: com.esri.arcgisruntime.internal.jni.ew;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ew>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ew;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ew;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ex {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ex>;
						public static b: com.esri.arcgisruntime.internal.jni.ex;
						public static c: com.esri.arcgisruntime.internal.jni.ex;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ex>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ex;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ex;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ey {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ey>;
						public static b: com.esri.arcgisruntime.internal.jni.ey;
						public static c: com.esri.arcgisruntime.internal.jni.ey;
						public static d: com.esri.arcgisruntime.internal.jni.ey;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ey;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ey>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ey;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ez {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ez>;
						public static b: com.esri.arcgisruntime.internal.jni.ez;
						public static c: com.esri.arcgisruntime.internal.jni.ez;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ez;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ez;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ez>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class f {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.f>;
						public static b: com.esri.arcgisruntime.internal.jni.f;
						public static c: com.esri.arcgisruntime.internal.jni.f;
						public static d: com.esri.arcgisruntime.internal.jni.f;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.f;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.f;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.f>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fa {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fa>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.fa interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							originCameraChanged(): void;
						});
						public constructor();
						public originCameraChanged(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fb {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fb>;
						public static b: com.esri.arcgisruntime.internal.jni.fb;
						public static c: com.esri.arcgisruntime.internal.jni.fb;
						public static d: com.esri.arcgisruntime.internal.jni.fb;
						public static e: com.esri.arcgisruntime.internal.jni.fb;
						public static f: com.esri.arcgisruntime.internal.jni.fb;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fb>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fb;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fb;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fc {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fc>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.fc interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							pauseCallback(): void;
						});
						public constructor();
						public pauseCallback(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fd {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fd>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.fd interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fe {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fe>;
						public static b: com.esri.arcgisruntime.internal.jni.fe;
						public static c: com.esri.arcgisruntime.internal.jni.fe;
						public static d: com.esri.arcgisruntime.internal.jni.fe;
						public static e: com.esri.arcgisruntime.internal.jni.fe;
						public static f: com.esri.arcgisruntime.internal.jni.fe;
						public static g: com.esri.arcgisruntime.internal.jni.fe;
						public static h: com.esri.arcgisruntime.internal.jni.fe;
						public static i: com.esri.arcgisruntime.internal.jni.fe;
						public static j: com.esri.arcgisruntime.internal.jni.fe;
						public static k: com.esri.arcgisruntime.internal.jni.fe;
						public static l: com.esri.arcgisruntime.internal.jni.fe;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fe;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fe>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fe;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ff {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ff>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ff interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							playCallback(): void;
						});
						public constructor();
						public playCallback(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fg extends com.esri.arcgisruntime.internal.jni.CoreMultipart {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fg>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreImmutablePartCollection;
						public static a(param0: string, param1: com.esri.arcgisruntime.internal.jni.CoreSpatialReference): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fg;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry, param1: number): boolean;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreGeometry;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fh {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fh>;
						public static b: com.esri.arcgisruntime.internal.jni.fh;
						public static c: com.esri.arcgisruntime.internal.jni.fh;
						public static d: com.esri.arcgisruntime.internal.jni.fh;
						public static e: com.esri.arcgisruntime.internal.jni.fh;
						public static f: com.esri.arcgisruntime.internal.jni.fh;
						public static g: com.esri.arcgisruntime.internal.jni.fh;
						public static h: com.esri.arcgisruntime.internal.jni.fh;
						public static i: com.esri.arcgisruntime.internal.jni.fh;
						public static j: com.esri.arcgisruntime.internal.jni.fh;
						public static k: com.esri.arcgisruntime.internal.jni.fh;
						public static l: com.esri.arcgisruntime.internal.jni.fh;
						public static m: com.esri.arcgisruntime.internal.jni.fh;
						public static n: com.esri.arcgisruntime.internal.jni.fh;
						public static o: com.esri.arcgisruntime.internal.jni.fh;
						public static p: com.esri.arcgisruntime.internal.jni.fh;
						public static q: com.esri.arcgisruntime.internal.jni.fh;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fh>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fh;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fh;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fi {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fi>;
						public static b: com.esri.arcgisruntime.internal.jni.fi;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fi>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fi;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fi;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fj>;
						public static b: com.esri.arcgisruntime.internal.jni.fj;
						public static c: com.esri.arcgisruntime.internal.jni.fj;
						public static d: com.esri.arcgisruntime.internal.jni.fj;
						public static e: com.esri.arcgisruntime.internal.jni.fj;
						public static f: com.esri.arcgisruntime.internal.jni.fj;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fj;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fj>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fj;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fk {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fk>;
						public static b: com.esri.arcgisruntime.internal.jni.fk;
						public static c: com.esri.arcgisruntime.internal.jni.fk;
						public static d: com.esri.arcgisruntime.internal.jni.fk;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fk;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fk;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fk>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fl {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fl>;
						public static b: com.esri.arcgisruntime.internal.jni.fl;
						public static c: com.esri.arcgisruntime.internal.jni.fl;
						public static d: com.esri.arcgisruntime.internal.jni.fl;
						public static e: com.esri.arcgisruntime.internal.jni.fl;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fl;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fl>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fl;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fm>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.fm interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							portalCreated(param0: com.esri.arcgisruntime.internal.jni.CorePortal): void;
						});
						public constructor();
						public portalCreated(param0: com.esri.arcgisruntime.internal.jni.CorePortal): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fn {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fn>;
						public static b: com.esri.arcgisruntime.internal.jni.fn;
						public static c: com.esri.arcgisruntime.internal.jni.fn;
						public static d: com.esri.arcgisruntime.internal.jni.fn;
						public static e: com.esri.arcgisruntime.internal.jni.fn;
						public static f: com.esri.arcgisruntime.internal.jni.fn;
						public static g: com.esri.arcgisruntime.internal.jni.fn;
						public static h: com.esri.arcgisruntime.internal.jni.fn;
						public static i: com.esri.arcgisruntime.internal.jni.fn;
						public static j: com.esri.arcgisruntime.internal.jni.fn;
						public static k: com.esri.arcgisruntime.internal.jni.fn;
						public static l: com.esri.arcgisruntime.internal.jni.fn;
						public static m: com.esri.arcgisruntime.internal.jni.fn;
						public static n: com.esri.arcgisruntime.internal.jni.fn;
						public static o: com.esri.arcgisruntime.internal.jni.fn;
						public static p: com.esri.arcgisruntime.internal.jni.fn;
						public static q: com.esri.arcgisruntime.internal.jni.fn;
						public static r: com.esri.arcgisruntime.internal.jni.fn;
						public static s: com.esri.arcgisruntime.internal.jni.fn;
						public static t: com.esri.arcgisruntime.internal.jni.fn;
						public static u: com.esri.arcgisruntime.internal.jni.fn;
						public static v: com.esri.arcgisruntime.internal.jni.fn;
						public static w: com.esri.arcgisruntime.internal.jni.fn;
						public static x: com.esri.arcgisruntime.internal.jni.fn;
						public static y: com.esri.arcgisruntime.internal.jni.fn;
						public static z: com.esri.arcgisruntime.internal.jni.fn;
						public static A: com.esri.arcgisruntime.internal.jni.fn;
						public static B: com.esri.arcgisruntime.internal.jni.fn;
						public static C: com.esri.arcgisruntime.internal.jni.fn;
						public static D: com.esri.arcgisruntime.internal.jni.fn;
						public static E: com.esri.arcgisruntime.internal.jni.fn;
						public static F: com.esri.arcgisruntime.internal.jni.fn;
						public static G: com.esri.arcgisruntime.internal.jni.fn;
						public static H: com.esri.arcgisruntime.internal.jni.fn;
						public static I: com.esri.arcgisruntime.internal.jni.fn;
						public static J: com.esri.arcgisruntime.internal.jni.fn;
						public static K: com.esri.arcgisruntime.internal.jni.fn;
						public static L: com.esri.arcgisruntime.internal.jni.fn;
						public static M: com.esri.arcgisruntime.internal.jni.fn;
						public static N: com.esri.arcgisruntime.internal.jni.fn;
						public static O: com.esri.arcgisruntime.internal.jni.fn;
						public static P: com.esri.arcgisruntime.internal.jni.fn;
						public static Q: com.esri.arcgisruntime.internal.jni.fn;
						public static R: com.esri.arcgisruntime.internal.jni.fn;
						public static S: com.esri.arcgisruntime.internal.jni.fn;
						public static T: com.esri.arcgisruntime.internal.jni.fn;
						public static U: com.esri.arcgisruntime.internal.jni.fn;
						public static V: com.esri.arcgisruntime.internal.jni.fn;
						public static W: com.esri.arcgisruntime.internal.jni.fn;
						public static X: com.esri.arcgisruntime.internal.jni.fn;
						public static Y: com.esri.arcgisruntime.internal.jni.fn;
						public static Z: com.esri.arcgisruntime.internal.jni.fn;
						public static aa: com.esri.arcgisruntime.internal.jni.fn;
						public static ab: com.esri.arcgisruntime.internal.jni.fn;
						public static ac: com.esri.arcgisruntime.internal.jni.fn;
						public static ad: com.esri.arcgisruntime.internal.jni.fn;
						public static ae: com.esri.arcgisruntime.internal.jni.fn;
						public static af: com.esri.arcgisruntime.internal.jni.fn;
						public static ag: com.esri.arcgisruntime.internal.jni.fn;
						public static ah: com.esri.arcgisruntime.internal.jni.fn;
						public static ai: com.esri.arcgisruntime.internal.jni.fn;
						public static aj: com.esri.arcgisruntime.internal.jni.fn;
						public static ak: com.esri.arcgisruntime.internal.jni.fn;
						public static al: com.esri.arcgisruntime.internal.jni.fn;
						public static am: com.esri.arcgisruntime.internal.jni.fn;
						public static an: com.esri.arcgisruntime.internal.jni.fn;
						public static ao: com.esri.arcgisruntime.internal.jni.fn;
						public static ap: com.esri.arcgisruntime.internal.jni.fn;
						public static aq: com.esri.arcgisruntime.internal.jni.fn;
						public static ar: com.esri.arcgisruntime.internal.jni.fn;
						public static as: com.esri.arcgisruntime.internal.jni.fn;
						public static at: com.esri.arcgisruntime.internal.jni.fn;
						public static au: com.esri.arcgisruntime.internal.jni.fn;
						public static av: com.esri.arcgisruntime.internal.jni.fn;
						public static aw: com.esri.arcgisruntime.internal.jni.fn;
						public static ax: com.esri.arcgisruntime.internal.jni.fn;
						public static ay: com.esri.arcgisruntime.internal.jni.fn;
						public static az: com.esri.arcgisruntime.internal.jni.fn;
						public static aA: com.esri.arcgisruntime.internal.jni.fn;
						public static aB: com.esri.arcgisruntime.internal.jni.fn;
						public static aC: com.esri.arcgisruntime.internal.jni.fn;
						public static aD: com.esri.arcgisruntime.internal.jni.fn;
						public static aE: com.esri.arcgisruntime.internal.jni.fn;
						public static aF: com.esri.arcgisruntime.internal.jni.fn;
						public static aG: com.esri.arcgisruntime.internal.jni.fn;
						public static aH: com.esri.arcgisruntime.internal.jni.fn;
						public static aI: com.esri.arcgisruntime.internal.jni.fn;
						public static aJ: com.esri.arcgisruntime.internal.jni.fn;
						public static aK: com.esri.arcgisruntime.internal.jni.fn;
						public static aL: com.esri.arcgisruntime.internal.jni.fn;
						public static aM: com.esri.arcgisruntime.internal.jni.fn;
						public static aN: com.esri.arcgisruntime.internal.jni.fn;
						public static aO: com.esri.arcgisruntime.internal.jni.fn;
						public static aP: com.esri.arcgisruntime.internal.jni.fn;
						public static aQ: com.esri.arcgisruntime.internal.jni.fn;
						public static aR: com.esri.arcgisruntime.internal.jni.fn;
						public static aS: com.esri.arcgisruntime.internal.jni.fn;
						public static aT: com.esri.arcgisruntime.internal.jni.fn;
						public static aU: com.esri.arcgisruntime.internal.jni.fn;
						public static aV: com.esri.arcgisruntime.internal.jni.fn;
						public static aW: com.esri.arcgisruntime.internal.jni.fn;
						public static aX: com.esri.arcgisruntime.internal.jni.fn;
						public static aY: com.esri.arcgisruntime.internal.jni.fn;
						public static aZ: com.esri.arcgisruntime.internal.jni.fn;
						public static ba: com.esri.arcgisruntime.internal.jni.fn;
						public static bb: com.esri.arcgisruntime.internal.jni.fn;
						public static bc: com.esri.arcgisruntime.internal.jni.fn;
						public static bd: com.esri.arcgisruntime.internal.jni.fn;
						public static be: com.esri.arcgisruntime.internal.jni.fn;
						public static bf: com.esri.arcgisruntime.internal.jni.fn;
						public static bg: com.esri.arcgisruntime.internal.jni.fn;
						public static bh: com.esri.arcgisruntime.internal.jni.fn;
						public static bi: com.esri.arcgisruntime.internal.jni.fn;
						public static bj: com.esri.arcgisruntime.internal.jni.fn;
						public static bk: com.esri.arcgisruntime.internal.jni.fn;
						public static bl: com.esri.arcgisruntime.internal.jni.fn;
						public static bm: com.esri.arcgisruntime.internal.jni.fn;
						public static bn: com.esri.arcgisruntime.internal.jni.fn;
						public static bo: com.esri.arcgisruntime.internal.jni.fn;
						public static bp: com.esri.arcgisruntime.internal.jni.fn;
						public static bq: com.esri.arcgisruntime.internal.jni.fn;
						public static br: com.esri.arcgisruntime.internal.jni.fn;
						public static bs: com.esri.arcgisruntime.internal.jni.fn;
						public static bt: com.esri.arcgisruntime.internal.jni.fn;
						public static bu: com.esri.arcgisruntime.internal.jni.fn;
						public static bv: com.esri.arcgisruntime.internal.jni.fn;
						public static bw: com.esri.arcgisruntime.internal.jni.fn;
						public static bx: com.esri.arcgisruntime.internal.jni.fn;
						public static by: com.esri.arcgisruntime.internal.jni.fn;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fn;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fn;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fn>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fo>;
						public static b: com.esri.arcgisruntime.internal.jni.fo;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fo;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fo>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fp>;
						public static b: com.esri.arcgisruntime.internal.jni.fp;
						public static c: com.esri.arcgisruntime.internal.jni.fp;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fp;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fp>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fp;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fq>;
						public static b: com.esri.arcgisruntime.internal.jni.fq;
						public static c: com.esri.arcgisruntime.internal.jni.fq;
						public static d: com.esri.arcgisruntime.internal.jni.fq;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fq>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fq;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fr {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fr>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.fr interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fs>;
						public static b: com.esri.arcgisruntime.internal.jni.fs;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fs>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fs;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ft {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ft>;
						public static b: com.esri.arcgisruntime.internal.jni.ft;
						public static c: com.esri.arcgisruntime.internal.jni.ft;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ft>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ft;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fu extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fu>;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fu;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fv>;
						public static b: com.esri.arcgisruntime.internal.jni.fv;
						public static c: com.esri.arcgisruntime.internal.jni.fv;
						public static d: com.esri.arcgisruntime.internal.jni.fv;
						public static e: com.esri.arcgisruntime.internal.jni.fv;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fv>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fv;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fv;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fw>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.fw interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fx {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fx>;
						public static b: com.esri.arcgisruntime.internal.jni.fx;
						public static c: com.esri.arcgisruntime.internal.jni.fx;
						public static d: com.esri.arcgisruntime.internal.jni.fx;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fx>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fx;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fx;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fy {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fy>;
						public static b: com.esri.arcgisruntime.internal.jni.fy;
						public static c: com.esri.arcgisruntime.internal.jni.fy;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fy>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fy;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fy;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class fz {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.fz>;
						public static b: com.esri.arcgisruntime.internal.jni.fz;
						public static c: com.esri.arcgisruntime.internal.jni.fz;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.fz;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.fz>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.fz;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class g extends com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.g>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public a(): string;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public e(): boolean;
						public b(param0: boolean): void;
						public g_(): void;
						public a(param0: number): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public e(param0: boolean): void;
						public j(): void;
						public k(): boolean;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.g;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public f(): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ga {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ga>;
						public static b: com.esri.arcgisruntime.internal.jni.ga;
						public static c: com.esri.arcgisruntime.internal.jni.ga;
						public static d: com.esri.arcgisruntime.internal.jni.ga;
						public static e: com.esri.arcgisruntime.internal.jni.ga;
						public static f: com.esri.arcgisruntime.internal.jni.ga;
						public static g: com.esri.arcgisruntime.internal.jni.ga;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ga;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ga>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ga;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gb {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gb>;
						public static b: com.esri.arcgisruntime.internal.jni.gb;
						public static c: com.esri.arcgisruntime.internal.jni.gb;
						public static d: com.esri.arcgisruntime.internal.jni.gb;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gb;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gb>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gb;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gc {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gc>;
						public static b: com.esri.arcgisruntime.internal.jni.gc;
						public static c: com.esri.arcgisruntime.internal.jni.gc;
						public static d: com.esri.arcgisruntime.internal.jni.gc;
						public static e: com.esri.arcgisruntime.internal.jni.gc;
						public static f: com.esri.arcgisruntime.internal.jni.gc;
						public static g: com.esri.arcgisruntime.internal.jni.gc;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gc>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gc;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gc;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gd {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gd>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.gd interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							requestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): void;
						});
						public constructor();
						public requestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ge {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ge>;
						public static b: com.esri.arcgisruntime.internal.jni.ge;
						public static c: com.esri.arcgisruntime.internal.jni.ge;
						public static d: com.esri.arcgisruntime.internal.jni.ge;
						public static e: com.esri.arcgisruntime.internal.jni.ge;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ge>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ge;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ge;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gf {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gf>;
						public static b: com.esri.arcgisruntime.internal.jni.gf;
						public static c: com.esri.arcgisruntime.internal.jni.gf;
						public static d: com.esri.arcgisruntime.internal.jni.gf;
						public static e: com.esri.arcgisruntime.internal.jni.gf;
						public static f: com.esri.arcgisruntime.internal.jni.gf;
						public static g: com.esri.arcgisruntime.internal.jni.gf;
						public static h: com.esri.arcgisruntime.internal.jni.gf;
						public static i: com.esri.arcgisruntime.internal.jni.gf;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gf>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gf;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gf;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gg>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.gg interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gh {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gh>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.gh interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							rerouteCompleted(param0: com.esri.arcgisruntime.internal.jni.CoreTrackingStatus, param1: com.esri.arcgisruntime.internal.jni.CoreError): void;
						});
						public constructor();
						public rerouteCompleted(param0: com.esri.arcgisruntime.internal.jni.CoreTrackingStatus, param1: com.esri.arcgisruntime.internal.jni.CoreError): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gi {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gi>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.gi interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							rerouteStarted(): void;
						});
						public constructor();
						public rerouteStarted(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gj>;
						public static b: com.esri.arcgisruntime.internal.jni.gj;
						public static c: com.esri.arcgisruntime.internal.jni.gj;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gj>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gj;
						public a(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gk {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gk>;
						public static b: com.esri.arcgisruntime.internal.jni.gk;
						public static c: com.esri.arcgisruntime.internal.jni.gk;
						public static d: com.esri.arcgisruntime.internal.jni.gk;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gk;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gk>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gk;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gl {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gl>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.gl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gm>;
						public static b: com.esri.arcgisruntime.internal.jni.gm;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gm;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gm>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gm;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gn {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gn>;
						public static b: com.esri.arcgisruntime.internal.jni.gn;
						public static c: com.esri.arcgisruntime.internal.jni.gn;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gn;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gn>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gn;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class go {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.go>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.go interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gp>;
						public static b: com.esri.arcgisruntime.internal.jni.gp;
						public static c: com.esri.arcgisruntime.internal.jni.gp;
						public static d: com.esri.arcgisruntime.internal.jni.gp;
						public static e: com.esri.arcgisruntime.internal.jni.gp;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gp;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gp>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gp;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gq extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gq>;
						public c(): java.lang.Long;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gq;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gr {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gr>;
						public static b: com.esri.arcgisruntime.internal.jni.gr;
						public static c: com.esri.arcgisruntime.internal.jni.gr;
						public static d: com.esri.arcgisruntime.internal.jni.gr;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gr;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gr>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gr;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gs>;
						public static b: com.esri.arcgisruntime.internal.jni.gs;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gs>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gs;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gs;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gt {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gt>;
						public static b: com.esri.arcgisruntime.internal.jni.gt;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gt>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gt;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gu {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gu>;
						public static b: com.esri.arcgisruntime.internal.jni.gu;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gu>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gu;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gu;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gv>;
						public static b: com.esri.arcgisruntime.internal.jni.gv;
						public static c: com.esri.arcgisruntime.internal.jni.gv;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gv>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gv;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gw>;
						public static b: com.esri.arcgisruntime.internal.jni.gw;
						public static c: com.esri.arcgisruntime.internal.jni.gw;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gw>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gw;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gw;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gx {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gx>;
						public static b: com.esri.arcgisruntime.internal.jni.gx;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gx>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gx;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gx;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gy {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gy>;
						public static b: com.esri.arcgisruntime.internal.jni.gy;
						public static c: com.esri.arcgisruntime.internal.jni.gy;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.gy>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.gy;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gy;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class gz extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.gz>;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.gz;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class h {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.h>;
						public static b: com.esri.arcgisruntime.internal.jni.h;
						public static c: com.esri.arcgisruntime.internal.jni.h;
						public static d: com.esri.arcgisruntime.internal.jni.h;
						public static e: com.esri.arcgisruntime.internal.jni.h;
						public static f: com.esri.arcgisruntime.internal.jni.h;
						public static g: com.esri.arcgisruntime.internal.jni.h;
						public static h: com.esri.arcgisruntime.internal.jni.h;
						public static i: com.esri.arcgisruntime.internal.jni.h;
						public static j: com.esri.arcgisruntime.internal.jni.h;
						public static k: com.esri.arcgisruntime.internal.jni.h;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.h;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.h;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.h>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ha {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ha>;
						public static b: com.esri.arcgisruntime.internal.jni.ha;
						public static c: com.esri.arcgisruntime.internal.jni.ha;
						public static d: com.esri.arcgisruntime.internal.jni.ha;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ha;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ha>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ha;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hb {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hb>;
						public static b: com.esri.arcgisruntime.internal.jni.hb;
						public static c: com.esri.arcgisruntime.internal.jni.hb;
						public static d: com.esri.arcgisruntime.internal.jni.hb;
						public static e: com.esri.arcgisruntime.internal.jni.hb;
						public static f: com.esri.arcgisruntime.internal.jni.hb;
						public static g: com.esri.arcgisruntime.internal.jni.hb;
						public static h: com.esri.arcgisruntime.internal.jni.hb;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hb;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hb>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hb;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hc {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hc>;
						public static b: com.esri.arcgisruntime.internal.jni.hc;
						public static c: com.esri.arcgisruntime.internal.jni.hc;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hc;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hc>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hc;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hd {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hd>;
						public static b: com.esri.arcgisruntime.internal.jni.hd;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hd;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hd>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hd;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class he {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.he>;
						public static b: com.esri.arcgisruntime.internal.jni.he;
						public static c: com.esri.arcgisruntime.internal.jni.he;
						public static d: com.esri.arcgisruntime.internal.jni.he;
						public static e: com.esri.arcgisruntime.internal.jni.he;
						public static f: com.esri.arcgisruntime.internal.jni.he;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.he>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.he;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.he;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hf {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hf>;
						public static b: com.esri.arcgisruntime.internal.jni.hf;
						public static c: com.esri.arcgisruntime.internal.jni.hf;
						public static d: com.esri.arcgisruntime.internal.jni.hf;
						public static e: com.esri.arcgisruntime.internal.jni.hf;
						public static f: com.esri.arcgisruntime.internal.jni.hf;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hf;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hf>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hf;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hg>;
						public static b: com.esri.arcgisruntime.internal.jni.hg;
						public static c: com.esri.arcgisruntime.internal.jni.hg;
						public static d: com.esri.arcgisruntime.internal.jni.hg;
						public static e: com.esri.arcgisruntime.internal.jni.hg;
						public static f: com.esri.arcgisruntime.internal.jni.hg;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hg>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hg;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hg;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hh {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hh>;
						public static b: com.esri.arcgisruntime.internal.jni.hh;
						public static c: com.esri.arcgisruntime.internal.jni.hh;
						public static d: com.esri.arcgisruntime.internal.jni.hh;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hh>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hh;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hh;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hi {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hi>;
						public static b: com.esri.arcgisruntime.internal.jni.hi;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hi>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hi;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hi;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hj>;
						public static b: com.esri.arcgisruntime.internal.jni.hj;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hj>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hj;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hj;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hk {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hk>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.hk interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hl {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hl>;
						public static b: com.esri.arcgisruntime.internal.jni.hl;
						public static c: com.esri.arcgisruntime.internal.jni.hl;
						public static d: com.esri.arcgisruntime.internal.jni.hl;
						public static e: com.esri.arcgisruntime.internal.jni.hl;
						public static f: com.esri.arcgisruntime.internal.jni.hl;
						public static g: com.esri.arcgisruntime.internal.jni.hl;
						public static h: com.esri.arcgisruntime.internal.jni.hl;
						public static i: com.esri.arcgisruntime.internal.jni.hl;
						public static j: com.esri.arcgisruntime.internal.jni.hl;
						public static k: com.esri.arcgisruntime.internal.jni.hl;
						public static l: com.esri.arcgisruntime.internal.jni.hl;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hl;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hl;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hl>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hm>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.hm interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hn {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hn>;
						public static b: com.esri.arcgisruntime.internal.jni.hn;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hn;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hn;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hn>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ho {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ho>;
						public static b: com.esri.arcgisruntime.internal.jni.ho;
						public static c: com.esri.arcgisruntime.internal.jni.ho;
						public static d: com.esri.arcgisruntime.internal.jni.ho;
						public static e: com.esri.arcgisruntime.internal.jni.ho;
						public static f: com.esri.arcgisruntime.internal.jni.ho;
						public static g: com.esri.arcgisruntime.internal.jni.ho;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ho;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ho>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ho;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hp {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hp>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.hp interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: boolean): void;
						});
						public constructor();
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hq>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.hq interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hr {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hr>;
						public static b: com.esri.arcgisruntime.internal.jni.hr;
						public static c: com.esri.arcgisruntime.internal.jni.hr;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hr;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hr>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hr;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hs {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hs>;
						public static b: com.esri.arcgisruntime.internal.jni.hs;
						public static c: com.esri.arcgisruntime.internal.jni.hs;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hs;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hs>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hs;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ht {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ht>;
						public static b: com.esri.arcgisruntime.internal.jni.ht;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ht;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ht>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ht;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hu {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hu>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.hu interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hv>;
						public static b: com.esri.arcgisruntime.internal.jni.hv;
						public static c: com.esri.arcgisruntime.internal.jni.hv;
						public static d: com.esri.arcgisruntime.internal.jni.hv;
						public static e: com.esri.arcgisruntime.internal.jni.hv;
						public static f: com.esri.arcgisruntime.internal.jni.hv;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hv;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hv>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hv;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hw>;
						public static b: com.esri.arcgisruntime.internal.jni.hw;
						public static c: com.esri.arcgisruntime.internal.jni.hw;
						public static d: com.esri.arcgisruntime.internal.jni.hw;
						public static e: com.esri.arcgisruntime.internal.jni.hw;
						public static f: com.esri.arcgisruntime.internal.jni.hw;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hw>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hw;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hw;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hx {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hx>;
						public static b: com.esri.arcgisruntime.internal.jni.hx;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hx>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hx;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hx;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hy {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hy>;
						public static b: com.esri.arcgisruntime.internal.jni.hy;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hy>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hy;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hy;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class hz {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.hz>;
						public static b: com.esri.arcgisruntime.internal.jni.hz;
						public static c: com.esri.arcgisruntime.internal.jni.hz;
						public static d: com.esri.arcgisruntime.internal.jni.hz;
						public static e: com.esri.arcgisruntime.internal.jni.hz;
						public static f: com.esri.arcgisruntime.internal.jni.hz;
						public static g: com.esri.arcgisruntime.internal.jni.hz;
						public static h: com.esri.arcgisruntime.internal.jni.hz;
						public static i: com.esri.arcgisruntime.internal.jni.hz;
						public static j: com.esri.arcgisruntime.internal.jni.hz;
						public static k: com.esri.arcgisruntime.internal.jni.hz;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.hz>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.hz;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.hz;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class i {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.i>;
						public static b: com.esri.arcgisruntime.internal.jni.i;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.i;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.i;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.i>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ia {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ia>;
						public static b: com.esri.arcgisruntime.internal.jni.ia;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ia;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ia;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ia>;
						public a(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ib {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ib>;
						public static b: com.esri.arcgisruntime.internal.jni.ib;
						public static c: com.esri.arcgisruntime.internal.jni.ib;
						public static d: com.esri.arcgisruntime.internal.jni.ib;
						public static e: com.esri.arcgisruntime.internal.jni.ib;
						public static f: com.esri.arcgisruntime.internal.jni.ib;
						public static g: com.esri.arcgisruntime.internal.jni.ib;
						public static h: com.esri.arcgisruntime.internal.jni.ib;
						public static i: com.esri.arcgisruntime.internal.jni.ib;
						public static j: com.esri.arcgisruntime.internal.jni.ib;
						public static k: com.esri.arcgisruntime.internal.jni.ib;
						public static l: com.esri.arcgisruntime.internal.jni.ib;
						public static m: com.esri.arcgisruntime.internal.jni.ib;
						public static n: com.esri.arcgisruntime.internal.jni.ib;
						public static o: com.esri.arcgisruntime.internal.jni.ib;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ib;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ib>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ib;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ic {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ic>;
						public static b: com.esri.arcgisruntime.internal.jni.ic;
						public static c: com.esri.arcgisruntime.internal.jni.ic;
						public static d: com.esri.arcgisruntime.internal.jni.ic;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ic;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ic>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ic;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class id {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.id>;
						public static b: com.esri.arcgisruntime.internal.jni.id;
						public static c: com.esri.arcgisruntime.internal.jni.id;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.id;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.id>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.id;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ie {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ie>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ie interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.dy): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.dy): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class _if {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.if>;
						public static b: com.esri.arcgisruntime.internal.jni.if;
						public static c: com.esri.arcgisruntime.internal.jni.if;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.if;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.if;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.if>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ig {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ig>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ig interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreTileKey): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTileKey): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ih {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ih>;
						public static b: com.esri.arcgisruntime.internal.jni.ih;
						public static c: com.esri.arcgisruntime.internal.jni.ih;
						public static d: com.esri.arcgisruntime.internal.jni.ih;
						public static e: com.esri.arcgisruntime.internal.jni.ih;
						public static f: com.esri.arcgisruntime.internal.jni.ih;
						public static g: com.esri.arcgisruntime.internal.jni.ih;
						public static h: com.esri.arcgisruntime.internal.jni.ih;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ih;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ih;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ih>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ii {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ii>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ii interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
							u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
							v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
							o(): boolean;
							s(): boolean;
							c(param0: boolean): void;
							a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
							a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						});
						public constructor();
						public v(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public o(): boolean;
						public u(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
						public a(param0: com.esri.arcgisruntime.internal.jni.bq): void;
						public s(): boolean;
						public c(param0: boolean): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ij {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ij>;
						public static b: com.esri.arcgisruntime.internal.jni.ij;
						public static c: com.esri.arcgisruntime.internal.jni.ij;
						public static d: com.esri.arcgisruntime.internal.jni.ij;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ij;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ij;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ij>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ik {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ik>;
						public static b: com.esri.arcgisruntime.internal.jni.ik;
						public static c: com.esri.arcgisruntime.internal.jni.ik;
						public static d: com.esri.arcgisruntime.internal.jni.ik;
						public static e: com.esri.arcgisruntime.internal.jni.ik;
						public static f: com.esri.arcgisruntime.internal.jni.ik;
						public static g: com.esri.arcgisruntime.internal.jni.ik;
						public static h: com.esri.arcgisruntime.internal.jni.ik;
						public static i: com.esri.arcgisruntime.internal.jni.ik;
						public static j: com.esri.arcgisruntime.internal.jni.ik;
						public static k: com.esri.arcgisruntime.internal.jni.ik;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ik;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ik;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ik>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class il {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.il>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.il interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							totalDurationCallback(): void;
						});
						public constructor();
						public totalDurationCallback(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class im {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.im>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.im interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							totalDurationChangedCallback(param0: number): void;
						});
						public constructor();
						public totalDurationChangedCallback(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class _in {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.in>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.in interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class io {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.io>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.io interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							tourStatusChangedCallback(param0: com.esri.arcgisruntime.internal.jni.dk): void;
						});
						public constructor();
						public tourStatusChangedCallback(param0: com.esri.arcgisruntime.internal.jni.dk): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ip {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ip>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ip interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							trackingStatusChanged(param0: com.esri.arcgisruntime.internal.jni.CoreTrackingStatus): void;
						});
						public constructor();
						public trackingStatusChanged(param0: com.esri.arcgisruntime.internal.jni.CoreTrackingStatus): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class iq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.iq>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.iq interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: boolean): void;
						});
						public constructor();
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ir {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ir>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.ir interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							translationFactorChanged(): void;
						});
						public constructor();
						public translationFactorChanged(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class is {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.is>;
						public static b: com.esri.arcgisruntime.internal.jni.is;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.is;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.is>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.is;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class it {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.it>;
						public static b: com.esri.arcgisruntime.internal.jni.it;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.it;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.it>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.it;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class iu {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.iu>;
						public static b: com.esri.arcgisruntime.internal.jni.iu;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.iu>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.iu;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class iv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.iv>;
						public static b: com.esri.arcgisruntime.internal.jni.iv;
						public static c: com.esri.arcgisruntime.internal.jni.iv;
						public static d: com.esri.arcgisruntime.internal.jni.iv;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.iv;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.iv;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.iv>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class iw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.iw>;
						public static b: com.esri.arcgisruntime.internal.jni.iw;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.iw;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.iw;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.iw>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ix {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ix>;
						public static b: com.esri.arcgisruntime.internal.jni.ix;
						public static c: com.esri.arcgisruntime.internal.jni.ix;
						public static d: com.esri.arcgisruntime.internal.jni.ix;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ix;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ix;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ix>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class iy extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.iy>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.iy;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public e(): boolean;
						public b(param0: boolean): void;
						public g_(): void;
						public a(param0: number): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public k(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: number): void;
						public f(): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class iz extends com.esri.arcgisruntime.internal.jni.CoreLayer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.iz>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public c(): java.lang.Long;
						public e(param0: string): void;
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public h(): string;
						public f(param0: string): void;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.iz;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public l(): com.esri.arcgisruntime.internal.jni.CoreArrayObservable;
						public e(): boolean;
						public b(param0: boolean): void;
						public g_(): void;
						public a(param0: number): boolean;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public j(): void;
						public k(): boolean;
						public n(): com.esri.arcgisruntime.internal.jni.CoreTask;
						public c(param0: number): void;
						public f(): void;
						public b(): boolean;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class j {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.j>;
						public static b: com.esri.arcgisruntime.internal.jni.j;
						public static c: com.esri.arcgisruntime.internal.jni.j;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.j>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.j;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.j;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ja extends com.esri.arcgisruntime.internal.jni.CoreRenderer {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ja>;
						public c(): java.lang.Long;
						public a(param0: com.esri.arcgisruntime.internal.jni.gm): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic, param1: boolean): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ja;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jb extends com.esri.arcgisruntime.internal.jni.CoreSymbol {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jb>;
						public c(): java.lang.Long;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jb;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor, param4: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.internal.jni.CoreColor): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jc {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jc>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.jc interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jd {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jd>;
						public static b: com.esri.arcgisruntime.internal.jni.jd;
						public static c: com.esri.arcgisruntime.internal.jni.jd;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jd;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jd>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jd;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class je {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.je>;
						public static b: com.esri.arcgisruntime.internal.jni.je;
						public static c: com.esri.arcgisruntime.internal.jni.je;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.je;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.je>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.je;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jf {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jf>;
						public static b: com.esri.arcgisruntime.internal.jni.jf;
						public static c: com.esri.arcgisruntime.internal.jni.jf;
						public static d: com.esri.arcgisruntime.internal.jni.jf;
						public static e: com.esri.arcgisruntime.internal.jni.jf;
						public static f: com.esri.arcgisruntime.internal.jni.jf;
						public static g: com.esri.arcgisruntime.internal.jni.jf;
						public static h: com.esri.arcgisruntime.internal.jni.jf;
						public static i: com.esri.arcgisruntime.internal.jni.jf;
						public static j: com.esri.arcgisruntime.internal.jni.jf;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jf;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jf>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jf;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jg {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jg>;
						public static b: com.esri.arcgisruntime.internal.jni.jg;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jg;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jg;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jg>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jh {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jh>;
						public static b: com.esri.arcgisruntime.internal.jni.jh;
						public static c: com.esri.arcgisruntime.internal.jni.jh;
						public static d: com.esri.arcgisruntime.internal.jni.jh;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jh;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jh;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jh>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ji {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ji>;
						public static b: com.esri.arcgisruntime.internal.jni.ji;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ji;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ji;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ji>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jj {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jj>;
						public static b: com.esri.arcgisruntime.internal.jni.jj;
						public static c: com.esri.arcgisruntime.internal.jni.jj;
						public static d: com.esri.arcgisruntime.internal.jni.jj;
						public static e: com.esri.arcgisruntime.internal.jni.jj;
						public static f: com.esri.arcgisruntime.internal.jni.jj;
						public static g: com.esri.arcgisruntime.internal.jni.jj;
						public static h: com.esri.arcgisruntime.internal.jni.jj;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jj;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jj;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jj>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jk {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jk>;
						public static b: com.esri.arcgisruntime.internal.jni.jk;
						public static c: com.esri.arcgisruntime.internal.jni.jk;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jk;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jk;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jk>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jl {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jl>;
						public static b: com.esri.arcgisruntime.internal.jni.jl;
						public static c: com.esri.arcgisruntime.internal.jni.jl;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jl;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jl;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jl>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jm {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jm>;
						public static b: com.esri.arcgisruntime.internal.jni.jm;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jm;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jm;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jm>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jn {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jn>;
						public static b: com.esri.arcgisruntime.internal.jni.jn;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jn>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jn;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jn;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jo {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jo>;
						public static b: com.esri.arcgisruntime.internal.jni.jo;
						public static c: com.esri.arcgisruntime.internal.jni.jo;
						public static d: com.esri.arcgisruntime.internal.jni.jo;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jo;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jo>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jp extends com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jp>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jq {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jq>;
						public static b: com.esri.arcgisruntime.internal.jni.jq;
						public static c: com.esri.arcgisruntime.internal.jni.jq;
						public static d: com.esri.arcgisruntime.internal.jni.jq;
						public static e: com.esri.arcgisruntime.internal.jni.jq;
						public static f: com.esri.arcgisruntime.internal.jni.jq;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jq;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jq>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jq;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jr {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jr>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jr;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jr;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jr>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class js {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.js>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.js;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.js>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.js;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jt {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jt>;
						public static b: com.esri.arcgisruntime.internal.jni.jt;
						public static c: com.esri.arcgisruntime.internal.jni.jt;
						public static d: com.esri.arcgisruntime.internal.jni.jt;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jt;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jt>;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jt;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ju {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ju>;
						public static b: com.esri.arcgisruntime.internal.jni.ju;
						public static c: com.esri.arcgisruntime.internal.jni.ju;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ju;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ju>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ju;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jv {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jv>;
						public static b: com.esri.arcgisruntime.internal.jni.jv;
						public static c: com.esri.arcgisruntime.internal.jni.jv;
						public static d: com.esri.arcgisruntime.internal.jni.jv;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jv;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jv>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jv;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jw {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jw>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.jw interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jx {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jx>;
						public static b: com.esri.arcgisruntime.internal.jni.jx;
						public static c: com.esri.arcgisruntime.internal.jni.jx;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jx;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jx;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jx>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jy {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jy>;
						public static b: com.esri.arcgisruntime.internal.jni.jy;
						public static c: com.esri.arcgisruntime.internal.jni.jy;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jy;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jy;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jy>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class jz {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.jz>;
						public static b: com.esri.arcgisruntime.internal.jni.jz;
						public static c: com.esri.arcgisruntime.internal.jni.jz;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.jz;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.jz;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.jz>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class k {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.k>;
						public static b: com.esri.arcgisruntime.internal.jni.k;
						public static c: com.esri.arcgisruntime.internal.jni.k;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.k>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.k;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.k;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class ka {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.ka>;
						public static b: com.esri.arcgisruntime.internal.jni.ka;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.ka;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.ka>;
						public a(): number;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.ka;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class l {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.l>;
						public static b: com.esri.arcgisruntime.internal.jni.l;
						public static c: com.esri.arcgisruntime.internal.jni.l;
						public static d: com.esri.arcgisruntime.internal.jni.l;
						public static e: com.esri.arcgisruntime.internal.jni.l;
						public static f: com.esri.arcgisruntime.internal.jni.l;
						public static g: com.esri.arcgisruntime.internal.jni.l;
						public static h: com.esri.arcgisruntime.internal.jni.l;
						public static i: com.esri.arcgisruntime.internal.jni.l;
						public static j: com.esri.arcgisruntime.internal.jni.l;
						public static k: com.esri.arcgisruntime.internal.jni.l;
						public static l: com.esri.arcgisruntime.internal.jni.l;
						public static m: com.esri.arcgisruntime.internal.jni.l;
						public static n: com.esri.arcgisruntime.internal.jni.l;
						public static o: com.esri.arcgisruntime.internal.jni.l;
						public static p: com.esri.arcgisruntime.internal.jni.l;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.l;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.l>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.l;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class m {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.m>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.m interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class n {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.n>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.n interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.eg): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.eg): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class o {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.o>;
						public static b: com.esri.arcgisruntime.internal.jni.o;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.o;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.o;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.o>;
						public a(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class p {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.p>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.p interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreBasemap): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreBasemap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class q {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.q>;
						public static b: com.esri.arcgisruntime.internal.jni.q;
						public static c: com.esri.arcgisruntime.internal.jni.q;
						public static d: com.esri.arcgisruntime.internal.jni.q;
						public static e: com.esri.arcgisruntime.internal.jni.q;
						public static f: com.esri.arcgisruntime.internal.jni.q;
						public static g: com.esri.arcgisruntime.internal.jni.q;
						public static h: com.esri.arcgisruntime.internal.jni.q;
						public static i: com.esri.arcgisruntime.internal.jni.q;
						public static j: com.esri.arcgisruntime.internal.jni.q;
						public static k: com.esri.arcgisruntime.internal.jni.q;
						public static l: com.esri.arcgisruntime.internal.jni.q;
						public static m: com.esri.arcgisruntime.internal.jni.q;
						public static n: com.esri.arcgisruntime.internal.jni.q;
						public static o: com.esri.arcgisruntime.internal.jni.q;
						public static p: com.esri.arcgisruntime.internal.jni.q;
						public static q: com.esri.arcgisruntime.internal.jni.q;
						public static r: com.esri.arcgisruntime.internal.jni.q;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.q;
						public a(): number;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.q>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class r {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.r>;
						public static b: com.esri.arcgisruntime.internal.jni.r;
						public static c: com.esri.arcgisruntime.internal.jni.r;
						public static d: com.esri.arcgisruntime.internal.jni.r;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.r;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.r>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.r;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class s {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.s>;
						public static b: com.esri.arcgisruntime.internal.jni.s;
						public static c: com.esri.arcgisruntime.internal.jni.s;
						public static d: com.esri.arcgisruntime.internal.jni.s;
						public static e: com.esri.arcgisruntime.internal.jni.s;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.s;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.s>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.s;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class t {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.t>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.t interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class u {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.u>;
						public static b: com.esri.arcgisruntime.internal.jni.u;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.u;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.u;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.u>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class v {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.v>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.v interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): void;
						});
						public constructor();
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class w {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.w>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.w interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime, param1: com.esri.arcgisruntime.internal.jni.ac, param2: com.esri.arcgisruntime.internal.jni.CoreElementReference): void;
						});
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime, param1: com.esri.arcgisruntime.internal.jni.ac, param2: com.esri.arcgisruntime.internal.jni.CoreElementReference): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class x {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.x>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.x interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(param0: number, param1: number, param2: boolean, param3: boolean, param4: com.esri.arcgisruntime.internal.jni.CoreElementReference): void;
						});
						public constructor();
						public a(param0: number, param1: number, param2: boolean, param3: boolean, param4: com.esri.arcgisruntime.internal.jni.CoreElementReference): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class y {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.y>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.jni.y interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createAudioPlayerCallback(param0: string): void;
						});
						public constructor();
						public createAudioPlayerCallback(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module jni {
					export class z {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.jni.z>;
						public static b: com.esri.arcgisruntime.internal.jni.z;
						public static c: com.esri.arcgisruntime.internal.jni.z;
						public static d: com.esri.arcgisruntime.internal.jni.z;
						public static e: com.esri.arcgisruntime.internal.jni.z;
						public static values(): native.Array<com.esri.arcgisruntime.internal.jni.z>;
						public static a(param0: number): com.esri.arcgisruntime.internal.jni.z;
						public a(): number;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.jni.z;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export abstract class a extends com.esri.arcgisruntime.internal.jni.ee {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.a>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(param0: java.lang.Throwable): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public c(): void;
						public g(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(): void;
						public j(): void;
						public b(): void;
						public f(): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class b extends com.esri.arcgisruntime.internal.k.a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.b>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(param0: java.lang.Throwable): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public c(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public c(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public a(): void;
						public j(): void;
						public b(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public b(): void;
						public f(): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class c extends com.esri.arcgisruntime.internal.k.a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.c>;
						public a(param0: com.esri.arcgisruntime.internal.jni.gd): void;
						public a(param0: java.lang.Throwable): void;
						public constructor();
						public e_(): com.esri.arcgisruntime.internal.jni.CoreError;
						public f_(): com.esri.arcgisruntime.internal.jni.ec;
						public a(param0: com.esri.arcgisruntime.internal.jni.an): void;
						public g_(): void;
						public a(param0: com.esri.arcgisruntime.internal.k.b): void;
						public a(param0: com.esri.arcgisruntime.internal.jni.ed): void;
						public a(): void;
						public j(): void;
						public f(): void;
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class d extends com.esri.arcgisruntime.internal.jni.CoreRequest {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.d>;
						public c(): java.lang.Long;
						public constructor();
						public a(param0: com.esri.arcgisruntime.internal.jni.t): void;
						public onCancelRequest(): void;
						public a(param0: native.Array<number>, param1: java.lang.Throwable): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class e extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.portal.PortalGroup.Access> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.e>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalGroup.Access;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class f extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.portal.PortalGroup.SortField> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.f>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalGroup.SortField;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class g extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.g>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.portal.PortalGroup, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalGroup;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class h extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.portal.PortalInfo.Access> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.h>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalInfo.Access;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class i extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.mapping.Basemap> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.i>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.mapping.Basemap;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class j extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.geometry.Geometry> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.j>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.geometry.Geometry;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class k extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.k>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.portal.PortalInfo, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class l extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.portal.PortalItem.Access> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.l>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalItem.Access;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class m extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.portal.PortalItem> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.m>;
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalItem;
						public constructor(param0: com.esri.arcgisruntime.portal.Portal);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class n extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.n>;
						public constructor();
						public a(param0: com.esri.arcgisruntime.portal.PortalPrivilege, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalPrivilege;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class o extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.o>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.UnitSystem;
						public a(param0: com.esri.arcgisruntime.UnitSystem, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class p extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.portal.PortalUser.Access> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.p>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalUser.Access;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class q extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.portal.PortalUser.Role> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.q>;
						public constructor();
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalUser.Role;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class r extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.r>;
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.portal.PortalUser;
						public constructor(param0: com.esri.arcgisruntime.portal.PortalUser);
						public a(param0: com.esri.arcgisruntime.portal.PortalUser, param1: java.lang.reflect.Type, param2: com.google.gson.JsonSerializationContext): com.google.gson.JsonElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class s {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.s>;
						public static a(param0: com.esri.arcgisruntime.geometry.Envelope): string;
						public static a(param0: com.esri.arcgisruntime.io.JsonSerializable, param1: com.google.gson.JsonObject): void;
						public static a(param0: com.google.gson.JsonElement): any;
						public static b(param0: com.google.gson.JsonElement): java.util.Map<string,any>;
						public static a(param0: number): java.util.Calendar;
						public static a(param0: string, param1: java.lang.StringBuilder): void;
						public static a(): com.google.gson.GsonBuilder;
						public static c(param0: any): com.google.gson.JsonElement;
						public static a(param0: string): string;
						public static a(param0: com.esri.arcgisruntime.portal.PortalUser): com.google.gson.GsonBuilder;
						public static a(param0: com.esri.arcgisruntime.loadable.Loadable): void;
						public static a(param0: java.lang.Iterable<com.esri.arcgisruntime.portal.PortalItem.Type>, param1: java.lang.StringBuilder): void;
						public static c(param0: com.google.gson.JsonElement): java.util.List<any>;
						public static a(param0: native.Array<string>, param1: java.util.Map<string,com.google.gson.JsonElement>, param2: java.util.Map<string,any>, param3: java.util.Map<string,any>): void;
						public static b(param0: any): com.google.gson.JsonElement;
						public static a(param0: com.esri.arcgisruntime.portal.PortalItem.Type, param1: java.lang.StringBuilder): void;
						public static a(param0: java.lang.Iterable<string>): com.esri.arcgisruntime.internal.d.k.m;
						public static b(): void;
						public static a(param0: any): com.google.gson.JsonElement;
						public static a(param0: com.esri.arcgisruntime.mapping.Item, param1: com.esri.arcgisruntime.mapping.Viewpoint): void;
						public static a(param0: java.util.Map.Entry<string,com.google.gson.JsonElement>): string;
						public static a(param0: native.Array<number>, param1: com.esri.arcgisruntime.internal.e.a.a.f, param2: com.esri.arcgisruntime.portal.PortalItem): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module k {
					export class t {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.k.t>;
						public static c: com.esri.arcgisruntime.internal.k.t;
						public static a(param0: string): com.esri.arcgisruntime.internal.k.t;
						public a(): string;
						public b(): string;
						public static values(): native.Array<com.esri.arcgisruntime.internal.k.t>;
						public static valueOf(param0: string): com.esri.arcgisruntime.internal.k.t;
						public static a(param0: native.Array<number>): com.esri.arcgisruntime.internal.k.t;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module l {
					export class a extends com.esri.arcgisruntime.internal.jni.t {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.l.a>;
						public a(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRequest, param1: com.esri.arcgisruntime.concurrent.ListenableFuture<any>, param2: java.util.Collection<com.esri.arcgisruntime.internal.l.a>);
						public b(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module l {
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.l.b>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreRequest, param1: java.util.concurrent.Callable<native.Array<number>>): com.esri.arcgisruntime.internal.b.c<native.Array<number>>;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreRequest, param1: com.esri.arcgisruntime.io.RemoteResource): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFileRequest, param1: com.esri.arcgisruntime.internal.e.b.a): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreRequest, param1: native.Array<number>, param2: java.lang.Throwable): void;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreRequest, param1: com.esri.arcgisruntime.internal.e.a.a.c<native.Array<number>>): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreRequest, param1: com.esri.arcgisruntime.io.RemoteResource): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.a>;
						public static c(): com.esri.arcgisruntime.security.SelfSignedCertificateListener;
						public static a(param0: com.esri.arcgisruntime.security.SelfSignedCertificateListener): void;
						public static a(param0: string): boolean;
						public static a(): com.esri.arcgisruntime.security.AuthenticationChallengeHandler;
						public static a(param0: java.security.KeyStore, param1: string, param2: java.security.KeyStore): void;
						public static a(param0: com.esri.arcgisruntime.security.AuthenticationChallengeHandler): void;
						public static d(): boolean;
						public static b(param0: string): com.esri.arcgisruntime.security.OAuthConfiguration;
						public static e(): void;
						public static b(): void;
						public static a(param0: com.esri.arcgisruntime.security.AuthenticationChallenge): com.esri.arcgisruntime.security.AuthenticationChallengeResponse;
						public static a(param0: boolean): void;
						public static a(param0: com.esri.arcgisruntime.security.OAuthConfiguration): void;
						public static f(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export class b extends com.esri.arcgisruntime.security.Credential implements com.esri.arcgisruntime.security.TokenCredential {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.b>;
						public g(): boolean;
						public getToken(): com.esri.arcgisruntime.internal.m.h;
						public constructor();
						public h(): com.esri.arcgisruntime.internal.m.b;
						public setToken(param0: com.esri.arcgisruntime.internal.m.h): void;
						public d(): string;
						public c(): string;
						public a(param0: native.Array<java.security.cert.Certificate>): void;
						public b(): string;
						public a(param0: string): void;
						public e(): java.security.PrivateKey;
						public constructor(param0: string, param1: string);
						public a(): boolean;
						public f(): native.Array<java.security.cert.Certificate>;
						public a(param0: java.security.PrivateKey): void;
						public constructor(param0: string, param1: java.security.PrivateKey, param2: native.Array<java.security.cert.Certificate>);
						public a(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export class c {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.c>;
						public static a(): com.esri.arcgisruntime.internal.m.c;
						public d(): string;
						public a(param0: string, param1: com.esri.arcgisruntime.security.Credential, param2: com.esri.arcgisruntime.internal.m.c.a): void;
						public b(param0: string): void;
						public a(param0: string, param1: com.esri.arcgisruntime.security.Credential): void;
						public c(param0: string, param1: com.esri.arcgisruntime.security.Credential): void;
						public a(param0: string): com.esri.arcgisruntime.internal.m.c.b;
						public b(param0: string, param1: com.esri.arcgisruntime.security.Credential): com.esri.arcgisruntime.internal.m.h;
						public b(): void;
						public c(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.Map<com.esri.arcgisruntime.security.Credential,java.lang.Exception>>;
						public a(param0: com.esri.arcgisruntime.security.Credential): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public d(param0: string, param1: com.esri.arcgisruntime.security.Credential): void;
					}
					export module c {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.c.a>;
							public static a: com.esri.arcgisruntime.internal.m.c.a;
							public static b: com.esri.arcgisruntime.internal.m.c.a;
							public static c: com.esri.arcgisruntime.internal.m.c.a;
							public static valueOf(param0: string): com.esri.arcgisruntime.internal.m.c.a;
							public static values(): native.Array<com.esri.arcgisruntime.internal.m.c.a>;
						}
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.c.b>;
							public b(): com.esri.arcgisruntime.internal.m.c.a;
							public a(param0: com.esri.arcgisruntime.internal.m.c.a): void;
							public c(): boolean;
							public constructor(param0: com.esri.arcgisruntime.internal.m.c, param1: com.esri.arcgisruntime.security.Credential, param2: com.esri.arcgisruntime.internal.m.c.a, param3: boolean);
							public a(): com.esri.arcgisruntime.security.Credential;
							public a(param0: boolean): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export abstract class d {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.d>;
						public constructor(param0: com.esri.arcgisruntime.security.CredentialChangedListener);
						public a(param0: com.esri.arcgisruntime.security.CredentialChangedEvent): void;
						public a(): com.esri.arcgisruntime.security.CredentialChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export class e extends com.esri.arcgisruntime.internal.m.d {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.e>;
						public constructor(param0: com.esri.arcgisruntime.security.CredentialChangedListener);
						public a(param0: com.esri.arcgisruntime.security.CredentialChangedEvent): void;
						public a(): com.esri.arcgisruntime.security.CredentialChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export class f extends com.esri.arcgisruntime.security.AuthenticationChallengeHandler {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.f>;
						public static c(): java.lang.Integer;
						public constructor(param0: globalAndroid.app.Activity);
						public static a(param0: com.esri.arcgisruntime.security.OAuthTokenCredential): void;
						public handleChallenge(param0: com.esri.arcgisruntime.security.AuthenticationChallenge): com.esri.arcgisruntime.security.AuthenticationChallengeResponse;
						public static b(): boolean;
						public static a(): com.esri.arcgisruntime.security.OAuthLoginManager;
						public static a(param0: java.lang.Integer): void;
						public static a(param0: boolean): void;
					}
					export module f {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.f.a>;
							public a(param0: com.esri.arcgisruntime.security.OAuthTokenCredential): void;
							public a(): com.esri.arcgisruntime.security.OAuthTokenCredential;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export class g {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.g>;
						public constructor(param0: globalAndroid.app.Activity);
						public a(param0: com.esri.arcgisruntime.security.AuthenticationChallenge, param1: number): any;
						public a(): globalAndroid.content.Context;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module m {
					export class h {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.m.h>;
						public constructor(param0: string, param1: number, param2: boolean);
						public b(): java.util.Calendar;
						public a(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class a extends com.esri.arcgisruntime.symbology.SymbolStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.a>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle): com.esri.arcgisruntime.internal.n.a;
						public cancelLoad(): void;
						public a(): string;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public g(): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle;
						public f(): java.util.List<com.esri.arcgisruntime.symbology.DictionarySymbolStyleConfiguration>;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public a(param0: java.util.Map<string,any>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.Symbol>;
						public c(): java.util.List<string>;
						public static a(param0: string): com.esri.arcgisruntime.internal.n.a;
						public e(): string;
						public d(): java.util.List<string>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolStyle);
						public constructor(param0: string, param1: string);
						public loadAsync(): void;
						public b(): java.util.Map<string,string>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.b>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.internal.n.b interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							a(): native.Array<number>;
						});
						public constructor();
						public a(): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class c extends com.esri.arcgisruntime.symbology.FillSymbol implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.c>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePictureFillSymbol);
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public a(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public getUri(): string;
						public e(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
						public loadAsync(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFillSymbol);
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public b(param0: number): void;
						public getUnknownJson(): java.util.Map<string,any>;
						public d(): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePictureFillSymbol): com.esri.arcgisruntime.internal.n.c;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public g(): number;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public toJson(): string;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public c(): number;
						public b(): number;
						public c(param0: number): void;
						public f(): number;
						public a(param0: number): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class d implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.d>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePictureFillSymbolLayer);
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public c(): com.esri.arcgisruntime.internal.jni.CorePictureFillSymbolLayer;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public a(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public getUri(): string;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePictureFillSymbolLayer): com.esri.arcgisruntime.internal.n.d;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public loadAsync(): void;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class e {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.e>;
						public a(): native.Array<number>;
						public b(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class f extends com.esri.arcgisruntime.symbology.MarkerSymbol implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.f>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbol): com.esri.arcgisruntime.internal.n.f;
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol);
						public getUnsupportedJson(): java.util.Map<string,any>;
						public constructor(param0: com.esri.arcgisruntime.internal.n.b);
						public a(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public getUri(): string;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
						public loadAsync(): void;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public b(param0: number): void;
						public getUnknownJson(): java.util.Map<string,any>;
						public d(): number;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public toJson(): string;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public c(): number;
						public constructor(param0: string, param1: com.esri.arcgisruntime.io.RequestConfiguration);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbol);
						public b(): number;
						public c(param0: number): void;
						public a(param0: number): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class g implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.g>;
						public c(): com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbolLayer;
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public b(): com.esri.arcgisruntime.internal.jni.CoreColor;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public a(): com.esri.arcgisruntime.internal.jni.CoreImage;
						public getUri(): string;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbolLayer);
						public static a(param0: com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbolLayer): com.esri.arcgisruntime.internal.n.g;
						public a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): void;
						public loadAsync(): void;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module n {
					export class h {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.n.h>;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public c(): java.util.Map<string,any>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
						public a(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(): string;
						public b(): java.util.Map<string,any>;
						public d(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
						public a(param0: number, param1: number): com.esri.arcgisruntime.internal.jni.CoreTask;
						public a(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.internal.jni.CoreTask;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module o {
					export module a {
						export class a implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.o.a.a>;
							public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
							public addDoneLoadingListener(param0: java.lang.Runnable): void;
							public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
							public getUri(): string;
							public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
							public constructor(param0: com.esri.arcgisruntime.data.TransportationNetworkDataset, param1: com.esri.arcgisruntime.internal.o.a.b);
							public constructor(param0: string, param1: com.esri.arcgisruntime.internal.o.a.b);
							public a(): com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityTaskInfo;
							public cancelLoad(): void;
							public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.CoreResourceProvider): void;
							public b(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityParameters>;
							public a(param0: com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityResult>;
							public retryLoadAsync(): void;
							public loadAsync(): void;
							public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
							public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
							public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
							public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.o.a.b);
							public getCredential(): com.esri.arcgisruntime.security.Credential;
							public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
							public c(): com.esri.arcgisruntime.data.TransportationNetworkDataset;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module o {
					export module a {
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.o.a.b>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module o {
					export module a {
						export class c implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.o.a.c>;
							public static a(param0: com.esri.arcgisruntime.portal.PortalItem): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteResult>;
							public a(param0: com.esri.arcgisruntime.data.FeatureCollection): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters>;
							public static b(param0: com.esri.arcgisruntime.data.FeatureCollection): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteResult>;
							public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
							public constructor(param0: string, param1: com.esri.arcgisruntime.internal.o.a.b);
							public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.CoreResourceProvider): void;
							public loadAsync(): void;
							public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
							public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.o.a.b);
							public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
							public d(): com.esri.arcgisruntime.internal.jni.CoreRouteTask;
							public c(): com.esri.arcgisruntime.data.TransportationNetworkDataset;
							public a(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters>;
							public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
							public addDoneLoadingListener(param0: java.lang.Runnable): void;
							public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
							public getUri(): string;
							public b(param0: com.esri.arcgisruntime.portal.PortalItem): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters>;
							public b(): com.esri.arcgisruntime.tasks.networkanalysis.RouteTaskInfo;
							public constructor(param0: com.esri.arcgisruntime.data.TransportationNetworkDataset, param1: com.esri.arcgisruntime.internal.o.a.b);
							public a(param0: com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteResult>;
							public cancelLoad(): void;
							public retryLoadAsync(): void;
							public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
							public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
							public getCredential(): com.esri.arcgisruntime.security.Credential;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module o {
					export module a {
						export class d {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.o.a.d>;
							public static a(param0: com.esri.arcgisruntime.internal.jni.gy): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle): com.esri.arcgisruntime.internal.jni.ak;
							public static a(param0: com.esri.arcgisruntime.internal.jni.gx): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry): com.esri.arcgisruntime.internal.jni.gw;
							public static a(param0: com.esri.arcgisruntime.internal.jni.iv): com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy;
							public static a(param0: com.esri.arcgisruntime.internal.jni.gw): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.BarrierType): com.esri.arcgisruntime.internal.jni.o;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection): com.esri.arcgisruntime.internal.jni.is;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaFacility): com.esri.arcgisruntime.internal.jni.CoreElement;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType): com.esri.arcgisruntime.internal.jni.gn;
							public static a(param0: com.esri.arcgisruntime.internal.jni.aj): com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach): com.esri.arcgisruntime.internal.jni.z;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail): com.esri.arcgisruntime.internal.jni.gy;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry): com.esri.arcgisruntime.internal.jni.gx;
							public static a(param0: com.esri.arcgisruntime.internal.jni.o): com.esri.arcgisruntime.tasks.networkanalysis.BarrierType;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.Incident): com.esri.arcgisruntime.internal.jni.CoreElement;
							public static a(param0: com.esri.arcgisruntime.internal.jni.ai): com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
							public static a(param0: com.esri.arcgisruntime.internal.jni.gn): com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.Stop): com.esri.arcgisruntime.internal.jni.CoreElement;
							public static a(param0: com.esri.arcgisruntime.internal.jni.z): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
							public static a(param0: com.esri.arcgisruntime.internal.jni.ei): com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
							public static a(param0: com.esri.arcgisruntime.internal.jni.hr): com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type;
							public static a(param0: com.esri.arcgisruntime.internal.jni.is): com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.Facility): com.esri.arcgisruntime.internal.jni.CoreElement;
							public static a(param0: com.esri.arcgisruntime.internal.jni.l): com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
							public static a(param0: com.esri.arcgisruntime.internal.jni.hn): com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type): com.esri.arcgisruntime.internal.jni.hr;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage): com.esri.arcgisruntime.internal.jni.hn;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
							public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy): com.esri.arcgisruntime.internal.jni.iv;
							public static a(param0: com.esri.arcgisruntime.internal.jni.ak): com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module o {
					export module a {
						export class e implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.o.a.e>;
							public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
							public addDoneLoadingListener(param0: java.lang.Runnable): void;
							public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
							public getUri(): string;
							public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
							public constructor(param0: com.esri.arcgisruntime.data.TransportationNetworkDataset, param1: com.esri.arcgisruntime.internal.o.a.b);
							public constructor(param0: string, param1: com.esri.arcgisruntime.internal.o.a.b);
							public cancelLoad(): void;
							public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
							public a(param0: com.esri.arcgisruntime.internal.jni.CoreResourceProvider): void;
							public b(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaParameters>;
							public a(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaResult>;
							public retryLoadAsync(): void;
							public loadAsync(): void;
							public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
							public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
							public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
							public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.internal.o.a.b);
							public getCredential(): com.esri.arcgisruntime.security.Credential;
							public a(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaTaskInfo;
							public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
							public c(): com.esri.arcgisruntime.data.TransportationNetworkDataset;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.a>;
						public static a(param0: java.lang.Iterable<com.esri.arcgisruntime.location.NmeaDataSource.Location.SatelliteInfo>): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static a(param0: any): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: any, param1: com.esri.arcgisruntime.internal.jni.ba): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class aa {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.aa>;
						public static a(param0: globalAndroid.content.Context): com.esri.arcgisruntime.internal.p.aa;
						public a(): com.esri.arcgisruntime.internal.jni.CoreResourceProvider;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class ab {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.ab>;
						public static a(param0: globalAndroid.content.Context, param1: number): void;
						public static a(param0: globalAndroid.content.Context): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class ac {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.ac>;
						public static a(param0: string, param1: string): number;
						public static a(param0: string, param1: number): string;
						public static b(param0: string): boolean;
						public static c(param0: string): string;
						public static a(param0: string): boolean;
						public static d(param0: string): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class ad<E>  extends com.esri.arcgisruntime.util.ListenableList<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.ad<any>>;
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
						public listIterator(): java.util.ListIterator<any>;
						public iterator(): java.util.Iterator<any>;
						public add(param0: any): boolean;
						public listIterator(param0: number): java.util.ListIterator<any>;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public set(param0: number, param1: any): any;
						public get(param0: number): any;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
						public subList(param0: number, param1: number): java.util.List<any>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector, param1: string);
						public add(param0: number, param1: any): void;
						public remove(param0: any): boolean;
						public indexOf(param0: any): number;
						public remove(param0: number): any;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public containsAll(param0: java.util.Collection<any>): boolean;
						public toArray(): native.Array<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class ae<E>  extends java.util.AbstractList<any> implements com.esri.arcgisruntime.util.ListenableList<any>  {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.ae<any>>;
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
						public constructor();
						public add(param0: any): boolean;
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
						public get(param0: number): any;
						public clear(): void;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public remove(param0: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class af<E>  extends java.util.AbstractList<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.af<any>>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreArray): java.util.List;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArray);
						public add(param0: any): boolean;
						public get(param0: number): any;
						public clear(): void;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public remove(param0: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class ag<E>  extends com.esri.arcgisruntime.internal.p.af<any> implements com.esri.arcgisruntime.util.ListenableList<any>  {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.ag<any>>;
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArray);
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
						public constructor(param0: com.esri.arcgisruntime.util.ListenableList<any>, param1: com.esri.arcgisruntime.internal.jni.CoreArrayObservable);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.b>;
						public static a(param0: com.esri.arcgisruntime.mapping.view.DeviceOrientation): com.esri.arcgisruntime.internal.jni.ah;
						public static a(param0: com.esri.arcgisruntime.internal.jni.eo): com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreImage, param1: com.esri.arcgisruntime.internal.p.b.a): globalAndroid.graphics.Bitmap;
						public static a(param0: com.esri.arcgisruntime.internal.jni.eq): com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
						public static a(param0: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType): com.esri.arcgisruntime.internal.jni.eq;
						public static a(param0: com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType): com.esri.arcgisruntime.internal.jni.eo;
					}
					export module b {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.b.a>;
							public static a: com.esri.arcgisruntime.internal.p.b.a;
							public static b: com.esri.arcgisruntime.internal.p.b.a;
							public static values(): native.Array<com.esri.arcgisruntime.internal.p.b.a>;
							public static valueOf(param0: string): com.esri.arcgisruntime.internal.p.b.a;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class c extends com.esri.arcgisruntime.internal.p.l<string,any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.c>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary);
						public a(): void;
						public a(param0: string, param1: any): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class d {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.d>;
						public static a(param0: number, param1: com.esri.arcgisruntime.internal.jni.ac): string;
						public static a(param0: number): java.util.Calendar;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class e {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.e>;
						public static a(param0: java.lang.Iterable<any>, param1: string): void;
						public static b(param0: any, param1: string): void;
						public static b(param0: number, param1: string, param2: number, param3: number): void;
						public static b(param0: number, param1: string): void;
						public static a(param0: number, param1: string, param2: number): void;
						public static a(param0: any, param1: string): void;
						public static a(param0: native.Array<number>, param1: string): void;
						public static a(param0: number, param1: string): void;
						public static a(param0: number, param1: string, param2: number, param3: number): void;
						public static a(param0: string, param1: string): void;
						public static a(param0: string, param1: string, param2: string): void;
						public static a(param0: java.util.Map<any,any>, param1: string): void;
						public static a(param0: java.lang.Thread, param1: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class f {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.f>;
						public static a(param0: native.Array<number>, param1: native.Array<number>): boolean;
						public static a(param0: native.Array<native.Array<any>>): native.Array<any>;
						public static a(param0: java.util.Iterator): java.util.List;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class g {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.g>;
						public constructor();
						public e(): void;
						public constructor(param0: number);
						public a(): void;
						public d(): boolean;
						public c(): boolean;
						public a(param0: com.esri.arcgisruntime.internal.p.g.a): void;
						public b(): void;
					}
					export module g {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.g.a>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.internal.p.g$a interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								a(): void;
								b(): void;
							});
							public constructor();
							public a(): void;
							public b(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class h {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.h>;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupField): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.networkanalysis.AttributeParameterValue): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityPropagator): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.util.Calendar): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.StatisticRecord): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): java.util.Calendar;
						public static a(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingFeatureSet): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.lang.Iterable, param1: java.lang.Class): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupMedia): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.lang.Iterable<com.esri.arcgisruntime.mapping.GeoElement>): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static a(param0: java.lang.Double): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.geoanalysis.Analysis): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.mapping.view.AnalysisOverlay): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.ClassBreak): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: any): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.layers.SubtypeSublayer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.Attachment): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.lang.Boolean): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.geometry.GeographicTransformationStep): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesSortOrder): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.layers.ArcGISSublayer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.symbology.VectorMarkerSymbolElement): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.symbology.SymbolLayer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static b(param0: java.lang.Iterable<java.lang.Integer>): com.esri.arcgisruntime.internal.jni.CoreVector;
						public static a(param0: com.esri.arcgisruntime.data.QueryParameters.OrderBy): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncLayerOption): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.mapping.Bookmark): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupExpression): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.FeatureQueryResult): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.layers.Layer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreStringDictionary): java.util.Map<string,string>;
						public static a(param0: java.lang.Long): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.util.Map, param1: java.lang.Class, param2: java.lang.Class): com.esri.arcgisruntime.internal.jni.CoreDictionary;
						public static a(param0: string): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.Field): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.StatisticDefinition): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.arcgisservices.LabelDefinition): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.symbology.Symbol): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionBarrier): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.lang.Float): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.symbology.UniqueValueRenderer.UniqueValue): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityElement): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.lang.Short): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.arcgisservices.LevelOfDetail): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlNode): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.FeatureCollectionTable): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.util.UUID): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: any, param1: com.esri.arcgisruntime.internal.jni.ba): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.mapping.ElevationSource): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.symbology.GeometricEffect): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.data.FeatureTable): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlGeometry): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: java.lang.Integer): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreElement): any;
						public static a(param0: com.esri.arcgisruntime.geometry.DatumTransformation): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.ogc.wms.WmsLayerInfo): com.esri.arcgisruntime.internal.jni.CoreElement;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class i {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.i>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreColor): number;
						public static a(param0: com.esri.arcgisruntime.geometry.CoordinateFormatter.LatitudeLongitudeFormat): com.esri.arcgisruntime.internal.jni.dp;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jt): com.esri.arcgisruntime.utilitynetworks.UtilityTraceType;
						public static a(param0: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): com.esri.arcgisruntime.internal.jni.gr;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fe): com.esri.arcgisruntime.arcgisservices.PixelType;
						public static a(param0: com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode): com.esri.arcgisruntime.internal.jni.bj;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ga): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bw): com.esri.arcgisruntime.geometry.GeometryDimension;
						public static a(param0: com.esri.arcgisruntime.internal.jni.em): com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static a(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption): com.esri.arcgisruntime.internal.jni.fo;
						public static a(param0: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style): com.esri.arcgisruntime.internal.jni.hb;
						public static a(param0: com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme): com.esri.arcgisruntime.internal.jni.gs;
						public static a(param0: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType): com.esri.arcgisruntime.internal.jni.gb;
						public static a(param0: com.esri.arcgisruntime.internal.jni.if): com.esri.arcgisruntime.arcgisservices.TextAntiAliasingMode;
						public static a(param0: com.esri.arcgisruntime.geometry.GeometryType): com.esri.arcgisruntime.internal.jni.by;
						public static a(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType): com.esri.arcgisruntime.internal.jni.as;
						public static a(param0: com.esri.arcgisruntime.mapping.view.LightingMode): com.esri.arcgisruntime.internal.jni.dx;
						public static a(param0: com.esri.arcgisruntime.internal.jni.aw): com.esri.arcgisruntime.data.EditResult.EditOperation;
						public static a(param0: com.esri.arcgisruntime.mapping.view.SpaceEffect): com.esri.arcgisruntime.internal.jni.hj;
						public static a(param0: com.esri.arcgisruntime.data.ServiceFeatureTable.QueryFeatureFields): com.esri.arcgisruntime.internal.jni.ft;
						public static a(param0: java.util.EnumSet<com.esri.arcgisruntime.geometry.ExtendOptions>): number;
						public static a(param0: com.esri.arcgisruntime.internal.jni.r): com.esri.arcgisruntime.layers.BingMapsLayer.Style;
						public static a(param0: com.esri.arcgisruntime.internal.jni.gk): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
						public static a(param0: com.esri.arcgisruntime.internal.jni.de): com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fp): com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode;
						public static a(param0: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat): com.esri.arcgisruntime.internal.jni.ih;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fl): com.esri.arcgisruntime.portal.PortalItem.Access;
						public static a(param0: com.esri.arcgisruntime.internal.jni.je): com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ic): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
						public static a(param0: com.esri.arcgisruntime.data.FeatureSet): com.esri.arcgisruntime.internal.jni.CoreElement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bj): com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
						public static a(param0: com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship): com.esri.arcgisruntime.internal.jni.hl;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bv): com.esri.arcgisruntime.geometry.GeometryBuilderType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ia): com.esri.arcgisruntime.symbology.SymbolSizeUnits;
						public static b(param0: number): com.esri.arcgisruntime.internal.jni.CoreColor;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ew): com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior;
						public static a(param0: com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit): com.esri.arcgisruntime.internal.jni.it;
						public static a(param0: com.esri.arcgisruntime.geometry.CoordinateFormatter.MgrsConversionMode): com.esri.arcgisruntime.internal.jni.ek;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dq): com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat;
						public static a(param0: com.esri.arcgisruntime.internal.jni.af): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jv): com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ap): com.esri.arcgisruntime.mapping.view.DrawStatus;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ar): com.esri.arcgisruntime.data.FeatureTemplate.DrawingTool;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ci): com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dw): com.esri.arcgisruntime.LicenseType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometricEffect): com.esri.arcgisruntime.symbology.GeometricEffect;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dc): com.esri.arcgisruntime.ogc.kml.KmlColorMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.a): com.esri.arcgisruntime.geometry.AngularUnitId;
						public static a(param0: java.util.UUID): com.esri.arcgisruntime.internal.jni.CoreGUID;
						public static a(param0: com.esri.arcgisruntime.internal.jni.iw): com.esri.arcgisruntime.UnitSystem;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlColorMode): com.esri.arcgisruntime.internal.jni.dc;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSegment): com.esri.arcgisruntime.geometry.Segment;
						public static a(param0: com.esri.arcgisruntime.internal.jni.cm): com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bs): com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption;
						public static a(param0: com.esri.arcgisruntime.internal.jni.as): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.AreaSymbolizationType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jn): com.esri.arcgisruntime.utilitynetworks.UtilityTierType;
						public static a(param0: com.esri.arcgisruntime.portal.PortalItem.Access): com.esri.arcgisruntime.internal.jni.fl;
						public static a(param0: com.esri.arcgisruntime.symbology.RotationType): com.esri.arcgisruntime.internal.jni.gm;
						public static a(param0: com.esri.arcgisruntime.internal.jni.et): com.esri.arcgisruntime.mapping.NavigationConstraint;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType): com.esri.arcgisruntime.internal.jni.jk;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fi): com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jh): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType;
						public static a(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits): com.esri.arcgisruntime.internal.jni.au;
						public static a(param0: com.esri.arcgisruntime.geometry.LinearUnitId): com.esri.arcgisruntime.internal.jni.dz;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hy): com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bi): com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDomain): com.esri.arcgisruntime.data.Domain;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer): com.esri.arcgisruntime.symbology.Renderer;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fx): com.esri.arcgisruntime.arcgisservices.RelationshipCardinality;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hs): com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreLayer): com.esri.arcgisruntime.layers.Layer;
						public static a(param0: com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder): com.esri.arcgisruntime.internal.jni.ex;
						public static a(param0: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType): com.esri.arcgisruntime.internal.jni.fb;
						public static a(param0: com.esri.arcgisruntime.internal.jni.au): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.DisplayDepthUnits;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jl): com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.cb): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo.Direction;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hi): com.esri.arcgisruntime.data.QueryParameters.SortOrder;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type): com.esri.arcgisruntime.internal.jni.fj;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bo): com.esri.arcgisruntime.symbology.TextSymbol.FontStyle;
						public static a(param0: java.util.Calendar): com.esri.arcgisruntime.internal.jni.CoreDateTime;
						public static a(param0: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement): com.esri.arcgisruntime.internal.jni.hw;
						public static a(param0: com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment): com.esri.arcgisruntime.internal.jni.hy;
						public static a(param0: com.esri.arcgisruntime.geometry.GeodeticCurveType): com.esri.arcgisruntime.internal.jni.bt;
						public static a(param0: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle): com.esri.arcgisruntime.internal.jni.hs;
						public static a(param0: com.esri.arcgisruntime.internal.jni.j): com.esri.arcgisruntime.mapping.view.AtmosphereEffect;
						public static a(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType): com.esri.arcgisruntime.internal.jni.av;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fn): com.esri.arcgisruntime.portal.PortalItem.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ht): com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fo): com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption;
						public static a(param0: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style): com.esri.arcgisruntime.internal.jni.hf;
						public static a(param0: com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration): com.esri.arcgisruntime.internal.jni.bn;
						public static a(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter): com.esri.arcgisruntime.internal.jni.af;
						public static a(param0: com.esri.arcgisruntime.layers.BingMapsLayer.Style): com.esri.arcgisruntime.internal.jni.r;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreJob): com.esri.arcgisruntime.concurrent.Job;
						public static a(param0: com.esri.arcgisruntime.symbology.SymbolSizeUnits): com.esri.arcgisruntime.internal.jni.ia;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fb): com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bn): com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration;
						public static a(param0: com.esri.arcgisruntime.UnitSystem): com.esri.arcgisruntime.internal.jni.iw;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat): com.esri.arcgisruntime.internal.jni.fh;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ka): com.esri.arcgisruntime.mapping.view.WrapAroundMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jd): com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ey): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type;
						public static a(param0: com.esri.arcgisruntime.mapping.NavigationConstraint): com.esri.arcgisruntime.internal.jni.et;
						public static a(param0: com.esri.arcgisruntime.internal.jni.du): com.esri.arcgisruntime.LicenseLevel;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ih): com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode): com.esri.arcgisruntime.internal.jni.db;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jq): com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator): com.esri.arcgisruntime.internal.jni.jg;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ez): com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability;
						public static a(param0: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D): com.esri.arcgisruntime.internal.jni.ht;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dy): com.esri.arcgisruntime.geoanalysis.LineOfSight.TargetVisibility;
						public static a(param0: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style): com.esri.arcgisruntime.internal.jni.hg;
						public static a(param0: number): java.util.EnumSet<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType): com.esri.arcgisruntime.internal.jni.df;
						public static a(param0: com.esri.arcgisruntime.portal.PortalItem.Type): com.esri.arcgisruntime.internal.jni.fn;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hw): com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
						public static a(param0: com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit): com.esri.arcgisruntime.internal.jni.el;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceType): com.esri.arcgisruntime.internal.jni.jt;
						public static a(param0: com.esri.arcgisruntime.data.QueryParameters.SortOrder): com.esri.arcgisruntime.internal.jni.hi;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometryBuilder): com.esri.arcgisruntime.geometry.GeometryBuilder;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDatumTransformation): com.esri.arcgisruntime.geometry.DatumTransformation;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ju): com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jx): com.esri.arcgisruntime.mapping.Viewpoint.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fk): com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreLocatorInfo): com.esri.arcgisruntime.tasks.geocode.LocatorInfo;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jf): com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
						public static a(param0: com.esri.arcgisruntime.internal.jni.k): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
						public static a(param0: com.esri.arcgisruntime.data.StatisticType): com.esri.arcgisruntime.internal.jni.ho;
						public static a(param0: com.esri.arcgisruntime.geometry.AreaUnitId): com.esri.arcgisruntime.internal.jni.h;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type): com.esri.arcgisruntime.internal.jni.js;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bf): com.esri.arcgisruntime.mapping.ExpirationType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.eu): com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dx): com.esri.arcgisruntime.mapping.view.LightingMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.h): com.esri.arcgisruntime.geometry.AreaUnitId;
						public static a(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode): com.esri.arcgisruntime.internal.jni.ch;
						public static a(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement): com.esri.arcgisruntime.internal.jni.hc;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreUnit): com.esri.arcgisruntime.geometry.Unit;
						public static a(param0: com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat): com.esri.arcgisruntime.internal.jni.dq;
						public static a(param0: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition): com.esri.arcgisruntime.internal.jni.ci;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ji): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreCameraController): com.esri.arcgisruntime.mapping.view.CameraController;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hh): com.esri.arcgisruntime.raster.SlopeType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fh): com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
						public static a(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection): com.esri.arcgisruntime.internal.jni.k;
						public static a(param0: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat): com.esri.arcgisruntime.internal.jni.em;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ex): com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreIdInfo): com.esri.arcgisruntime.arcgisservices.IdInfo;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dj): com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
						public static a(param0: com.esri.arcgisruntime.internal.jni.c): com.esri.arcgisruntime.arcgisservices.AntiAliasingMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDateTime): java.util.Calendar;
						public static a(param0: com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment): com.esri.arcgisruntime.internal.jni.cm;
						public static a(param0: com.esri.arcgisruntime.internal.jni.cy): com.esri.arcgisruntime.concurrent.Job.Status;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hl): com.esri.arcgisruntime.data.QueryParameters.SpatialRelationship;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition): com.esri.arcgisruntime.utilitynetworks.UtilityTraceCondition;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreItem): com.esri.arcgisruntime.mapping.Item;
						public static a(param0: com.esri.arcgisruntime.internal.jni.cc): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.he): com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType): com.esri.arcgisruntime.internal.jni.fi;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFeature): com.esri.arcgisruntime.data.Feature;
						public static a(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection): com.esri.arcgisruntime.internal.jni.ic;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hf): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dz): com.esri.arcgisruntime.geometry.LinearUnitId;
						public static a(param0: com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType): com.esri.arcgisruntime.internal.jni.da;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bz): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dk): com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
						public static a(param0: com.esri.arcgisruntime.geometry.CoordinateFormatter.GarsConversionMode): com.esri.arcgisruntime.internal.jni.br;
						public static a(param0: com.esri.arcgisruntime.raster.ColorRamp.PresetType): com.esri.arcgisruntime.internal.jni.fq;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode): com.esri.arcgisruntime.internal.jni.dm;
						public static a(param0: com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment): com.esri.arcgisruntime.internal.jni.jv;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ef): com.esri.arcgisruntime.mapping.LocalItem.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hj): com.esri.arcgisruntime.mapping.view.SpaceEffect;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGeometry): com.esri.arcgisruntime.geometry.Geometry;
						public static a(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle): com.esri.arcgisruntime.internal.jni.hd;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreRaster): com.esri.arcgisruntime.raster.Raster;
						public static a(param0: com.esri.arcgisruntime.internal.jni.gs): com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
						public static a(param0: com.esri.arcgisruntime.internal.jni.id): com.esri.arcgisruntime.data.SyncModel;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlRefreshMode): com.esri.arcgisruntime.internal.jni.di;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ij): com.esri.arcgisruntime.arcgisservices.ServiceTimeInfo.TimeRelation;
						public static a(param0: com.esri.arcgisruntime.internal.jni.di): com.esri.arcgisruntime.ogc.kml.KmlRefreshMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jm): com.esri.arcgisruntime.utilitynetworks.UtilityTierTopologyType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fz): com.esri.arcgisruntime.arcgisservices.RelationshipRole;
						public static a(param0: com.esri.arcgisruntime.symbology.TextSymbol.FontStyle): com.esri.arcgisruntime.internal.jni.bo;
						public static a(param0: com.esri.arcgisruntime.symbology.TextSymbol.FontWeight): com.esri.arcgisruntime.internal.jni.bp;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fj): com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.do): com.esri.arcgisruntime.arcgisservices.LabelingPlacement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.it): com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit;
						public static a(param0: com.esri.arcgisruntime.internal.jni.gb): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ch): com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator): com.esri.arcgisruntime.internal.jni.jf;
						public static a(param0: com.esri.arcgisruntime.data.SyncModel): com.esri.arcgisruntime.internal.jni.id;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jz): com.esri.arcgisruntime.ogc.wms.WmsVersion;
						public static a(param0: com.esri.arcgisruntime.internal.jni.gp): com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType): com.esri.arcgisruntime.internal.jni.jq;
						public static a(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption): com.esri.arcgisruntime.internal.jni.bs;
						public static a(param0: com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode): com.esri.arcgisruntime.internal.jni.bg;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreElevationSource): com.esri.arcgisruntime.mapping.ElevationSource;
						public static a(param0: com.esri.arcgisruntime.internal.jni.gm): com.esri.arcgisruntime.symbology.RotationType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bg): com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreGUID): java.util.UUID;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hc): com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreCamera): com.esri.arcgisruntime.mapping.view.Camera;
						public static a(param0: com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode): com.esri.arcgisruntime.internal.jni.gv;
						public static a(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit): com.esri.arcgisruntime.internal.jni.ca;
						public static a(param0: com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode): com.esri.arcgisruntime.internal.jni.hx;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType): com.esri.arcgisruntime.internal.jni.je;
						public static a(param0: com.esri.arcgisruntime.internal.jni.el): com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jj): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.by): com.esri.arcgisruntime.geometry.GeometryType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.da): com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hg): com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static a(param0: com.esri.arcgisruntime.raster.SlopeType): com.esri.arcgisruntime.internal.jni.hh;
						public static b(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary): java.util.Map;
						public static a(param0: com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior): com.esri.arcgisruntime.internal.jni.ew;
						public static a(param0: com.esri.arcgisruntime.geometry.CoordinateFormatter.UtmConversionMode): com.esri.arcgisruntime.internal.jni.iu;
						public static a(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope): com.esri.arcgisruntime.internal.jni.ju;
						public static a(param0: com.esri.arcgisruntime.internal.jni.gr): com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary): com.esri.arcgisruntime.internal.p.l<string,any>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dm): com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ik): com.esri.arcgisruntime.arcgisservices.TimeUnit;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ix): com.esri.arcgisruntime.geometry.UnitType;
						public static a(param0: com.esri.arcgisruntime.geometry.ExtendOptions): number;
						public static a(param0: com.esri.arcgisruntime.mapping.view.AnimationCurve): com.esri.arcgisruntime.internal.jni.b;
						public static a(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption): com.esri.arcgisruntime.internal.jni.gk;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ec): com.esri.arcgisruntime.loadable.LoadStatus;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dv): com.esri.arcgisruntime.LicenseStatus;
						public static a(param0: com.esri.arcgisruntime.internal.jni.at): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable): com.esri.arcgisruntime.data.FeatureTable;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bl): com.esri.arcgisruntime.data.Field.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ha): com.esri.arcgisruntime.arcgisservices.ServiceSourceType;
						public static a(param0: com.esri.arcgisruntime.mapping.view.AtmosphereEffect): com.esri.arcgisruntime.internal.jni.j;
						public static a(param0: com.esri.arcgisruntime.internal.jni.fy): com.esri.arcgisruntime.data.RelationshipConstraintViolation;
						public static a(param0: com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.ColorScheme): com.esri.arcgisruntime.internal.jni.at;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer): com.esri.arcgisruntime.layers.ArcGISSublayer;
						public static a(param0: com.esri.arcgisruntime.mapping.view.WrapAroundMode): com.esri.arcgisruntime.internal.jni.ka;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ho): com.esri.arcgisruntime.data.StatisticType;
						public static a(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style): com.esri.arcgisruntime.internal.jni.he;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dn): com.esri.arcgisruntime.ogc.kml.KmlViewpoint.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hx): com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.db): com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public static a(param0: com.esri.arcgisruntime.internal.jni.js): com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jg): com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bd): com.esri.arcgisruntime.ArcGISRuntimeException.ErrorDomain;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dd): com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type;
						public static a(param0: com.esri.arcgisruntime.internal.jni.bp): com.esri.arcgisruntime.symbology.TextSymbol.FontWeight;
						public static a(param0: com.esri.arcgisruntime.internal.jni.jk): com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.av): com.esri.arcgisruntime.hydrography.EncEnvironmentSettings.DisplaySettings.MarinerSettings.PointSymbolizationType;
						public static a(param0: com.esri.arcgisruntime.mapping.Basemap.Type): com.esri.arcgisruntime.internal.jni.q;
						public static a(param0: com.esri.arcgisruntime.mapping.Viewpoint.Type): com.esri.arcgisruntime.internal.jni.jx;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreSublayerSource): com.esri.arcgisruntime.layers.SublayerSource;
						public static a(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode): com.esri.arcgisruntime.internal.jni.fp;
						public static a(param0: com.esri.arcgisruntime.internal.jni.d): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureLayerInfo.ServiceType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.df): com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType;
						public static a(param0: java.lang.Class): com.esri.arcgisruntime.internal.jni.ba;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): com.esri.arcgisruntime.mapping.Viewpoint;
						public static a(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType): com.esri.arcgisruntime.internal.jni.bz;
						public static a(param0: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode): com.esri.arcgisruntime.internal.jni.bi;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hb): com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static a(param0: com.esri.arcgisruntime.internal.jni.dl): com.esri.arcgisruntime.ogc.kml.KmlUnitsType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode): com.esri.arcgisruntime.ogc.kml.KmlNode;
						public static a(param0: com.esri.arcgisruntime.geometry.AngularUnitId): com.esri.arcgisruntime.internal.jni.a;
						public static a(param0: com.esri.arcgisruntime.ogc.kml.KmlUnitsType): com.esri.arcgisruntime.internal.jni.dl;
						public static a(param0: com.esri.arcgisruntime.internal.jni.ca): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
						public static a(param0: com.esri.arcgisruntime.internal.jni.e): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo.ServiceType;
						public static a(param0: com.esri.arcgisruntime.internal.jni.hd): com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle;
						public static a(param0: com.esri.arcgisruntime.arcgisservices.TimeUnit): com.esri.arcgisruntime.internal.jni.ik;
						public static a(param0: com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption): com.esri.arcgisruntime.internal.jni.fk;
						public static a(param0: com.esri.arcgisruntime.geometry.GeometryOffsetType): com.esri.arcgisruntime.internal.jni.bx;
						public static a(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type): com.esri.arcgisruntime.internal.jni.cc;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class j extends com.esri.arcgisruntime.internal.jni.CoreError {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.j>;
						public constructor();
						public c(): number;
						public constructor(param0: java.lang.Throwable);
						public b(): string;
						public d(): com.esri.arcgisruntime.internal.jni.bd;
						public e(): string;
						public constructor(param0: number, param1: com.esri.arcgisruntime.internal.jni.bd);
						public g(): void;
						public f(): any;
						public finalize(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class k<T>  extends com.esri.arcgisruntime.internal.b.b<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.k<any>>;
						public addDoneListener(param0: java.lang.Runnable): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreTask);
						public removeDoneListener(param0: java.lang.Runnable): boolean;
						public b(param0: com.esri.arcgisruntime.internal.jni.CoreElement): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class l<K, V>  extends java.util.AbstractMap<any,any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.l<any,any>>;
						public put(param0: any, param1: any): any;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary);
						public remove(param0: any): any;
						public entrySet(): java.util.Set<java.util.Map.Entry<any,any>>;
						public get(param0: any): any;
						public a(): void;
						public size(): number;
						public containsKey(param0: any): boolean;
					}
					export module l {
						export class a extends java.util.Map.Entry<any,any> {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.l.a>;
							public getValue(): any;
							public a(): void;
							public getKey(): any;
							public setValue(param0: any): any;
						}
						export class b extends java.util.AbstractSet<java.util.Map.Entry<any,any>> {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.l.b>;
							public contains(param0: any): boolean;
							public size(): number;
							public clear(): void;
							public isEmpty(): boolean;
							public iterator(): java.util.Iterator<java.util.Map.Entry<any,any>>;
							public a(param0: java.util.Map.Entry<any,any>): boolean;
						}
						export class c extends java.util.Iterator<java.util.Map.Entry<any,any>> {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.l.c>;
							public a(): java.util.Map.Entry<any,any>;
							public hasNext(): boolean;
							public remove(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class m {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.m>;
						public static b(param0: java.lang.Class<any>, param1: any): void;
						public static a(param0: string, param1: any, param2: string): void;
						public static a(param0: java.lang.Class<any>, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class n {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.n>;
						public static a(param0: java.lang.Iterable<string>): java.util.List<string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class o {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.o>;
						public static b(param0: string): string;
						public static b(param0: java.io.InputStream): void;
						public static a(param0: java.io.InputStream): native.Array<number>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreImage): native.Array<number>;
						public static a(param0: java.io.File): native.Array<number>;
						public static b(param0: java.io.File): java.io.FileOutputStream;
						public static a(param0: string): native.Array<number>;
						public static c(param0: string): void;
						public static a(): string;
						public static a(param0: java.io.File, param1: java.io.File): java.io.File;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class p {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.p>;
						public static a(param0: com.esri.arcgisruntime.internal.jni.CoreImage, param1: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.BitmapDrawable;
						public static a(param0: globalAndroid.graphics.drawable.BitmapDrawable): native.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class q<T>  extends java.util.Iterator<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.q<any>>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreIterator);
						public a(): void;
						public next(): any;
						public hasNext(): boolean;
						public remove(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class r {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.r>;
						public static a(param0: java.io.StringWriter): com.google.gson.stream.JsonWriter;
						public static a(param0: any): string;
						public static a(param0: string, param1: java.lang.Class): any;
					}
					export module r {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.r.a>;
							public constructor();
							public translateName(param0: java.lang.reflect.Field): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export abstract class s<E>  extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.s<any>>;
						public constructor(param0: com.esri.arcgisruntime.util.ListChangedListener<E>);
						public a(param0: com.esri.arcgisruntime.util.ListChangedEvent<E>): void;
						public a(): com.esri.arcgisruntime.util.ListChangedListener<E>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class t<E>  extends com.esri.arcgisruntime.internal.p.s<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.t<any>>;
						public a(param0: com.esri.arcgisruntime.util.ListChangedEvent<any>): void;
						public constructor(param0: com.esri.arcgisruntime.util.ListChangedListener<any>);
						public a(): com.esri.arcgisruntime.util.ListChangedListener<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class u<E>  extends java.util.AbstractList<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.u<any>>;
						public b: number;
						public addAll(param0: java.util.Collection<any>): boolean;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public add(param0: any): boolean;
						public set(param0: number, param1: any): any;
						public remove(param0: number): any;
						public get(param0: number): any;
						public clear(): void;
						public size(): number;
						public add(param0: number, param1: any): void;
						public a(): com.esri.arcgisruntime.internal.jni.CoreVector;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export abstract class v<E>  extends com.esri.arcgisruntime.internal.p.u<any> {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.v<any>>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public add(param0: any): boolean;
						public set(param0: number, param1: any): any;
						public remove(param0: number): any;
						public clear(): void;
						public b(): void;
						public add(param0: number, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class w<E>  extends com.esri.arcgisruntime.internal.p.u<any> implements com.esri.arcgisruntime.util.ListenableList<any>  {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.w<any>>;
						public constructor(param0: com.esri.arcgisruntime.util.ListenableList<any>, param1: com.esri.arcgisruntime.internal.jni.CoreVector, param2: com.esri.arcgisruntime.util.ListChangedListener<any>);
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
						public addAll(param0: java.util.Collection<any>): boolean;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreVector);
						public add(param0: any): boolean;
						public remove(param0: number): any;
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public constructor(param0: com.esri.arcgisruntime.util.ListenableList<any>, param1: com.esri.arcgisruntime.internal.jni.CoreVector);
						public removeAll(param0: java.util.Collection<any>): boolean;
						public add(param0: number, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class x {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.x>;
						public static a(param0: number, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class y {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.y>;
						public static b(param0: any): number;
						public static a(param0: number, param1: number, param2: number): boolean;
						public static a(param0: number, param1: number, param2: boolean, param3: boolean): string;
						public static a(param0: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module internal {
				export module p {
					export class z {
						public static class: java.lang.Class<com.esri.arcgisruntime.internal.p.z>;
						public constructor();
						public a(): com.esri.arcgisruntime.internal.jni.CorePlatformHelpersProvider;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module io {
				export class ArcGISDownloadRequest {
					public static class: java.lang.Class<com.esri.arcgisruntime.io.ArcGISDownloadRequest>;
					public static createInstance(param0: string, param1: com.esri.arcgisruntime.security.Credential): com.esri.arcgisruntime.io.ArcGISDownloadRequest;
					public static createInstanceAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.io.ArcGISDownloadRequest>;
					public static createInstanceAsync(param0: string, param1: com.esri.arcgisruntime.security.Credential): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.io.ArcGISDownloadRequest>;
					public static createInstance(param0: string): com.esri.arcgisruntime.io.ArcGISDownloadRequest;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module io {
				export class HttpResponseException extends com.esri.arcgisruntime.internal.d.b.e {
					public static class: java.lang.Class<com.esri.arcgisruntime.io.HttpResponseException>;
					public getStatusCode(): number;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public getReasonPhrase(): string;
					public constructor();
					public constructor(param0: number, param1: string, param2: native.Array<number>);
					public constructor(param0: number, param1: string);
					public getResponseData(): native.Array<number>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module io {
				export class JsonEmbeddedException {
					public static class: java.lang.Class<com.esri.arcgisruntime.io.JsonEmbeddedException>;
					public getMessage(): string;
					public getResponseData(): native.Array<number>;
					public static fromJson(param0: string): com.esri.arcgisruntime.io.JsonEmbeddedException;
					public getDetails(): native.Array<string>;
					public setResponseData(param0: native.Array<number>): void;
					public getCode(): number;
				}
				export module JsonEmbeddedException {
					export class a extends com.google.gson.JsonDeserializer<com.esri.arcgisruntime.io.JsonEmbeddedException> {
						public static class: java.lang.Class<com.esri.arcgisruntime.io.JsonEmbeddedException.a>;
						public a(param0: com.google.gson.JsonElement, param1: java.lang.reflect.Type, param2: com.google.gson.JsonDeserializationContext): com.esri.arcgisruntime.io.JsonEmbeddedException;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module io {
				export class JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.io.JsonSerializable>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.io.JsonSerializable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						toJson(): string;
						getUnknownJson(): java.util.Map<string,any>;
						getUnsupportedJson(): java.util.Map<string,any>;
					});
					public constructor();
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public getUnknownJson(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module io {
				export class MismatchedHostnameException {
					public static class: java.lang.Class<com.esri.arcgisruntime.io.MismatchedHostnameException>;
					public getHostname(): string;
					public isSelfSigned(): boolean;
					public constructor(param0: string, param1: java.lang.Throwable, param2: java.security.cert.X509Certificate, param3: string, param4: boolean);
					public getCertificate(): java.security.cert.X509Certificate;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module io {
				export class RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.io.RemoteResource>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.io.RemoteResource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getCredential(): com.esri.arcgisruntime.security.Credential;
						setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						getUri(): string;
					});
					public constructor();
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public getUri(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module io {
				export class RequestConfiguration {
					public static class: java.lang.Class<com.esri.arcgisruntime.io.RequestConfiguration>;
					public getHeaders(): java.util.Map<string,string>;
					public setConnectionTimeout(param0: number): com.esri.arcgisruntime.io.RequestConfiguration;
					public static setProxyInfo(param0: string, param1: number, param2: com.esri.arcgisruntime.security.UserCredential): void;
					public getConnectionTimeout(): number;
					public isIssueAuthenticationChallenge(): boolean;
					public getMaxNumberOfAttempts(): number;
					public static setAdditionalUserAgentInfo(param0: string): void;
					public setMaxNumberOfAttempts(param0: number): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: number, param1: number, param2: number, param3: java.util.Map<string,string>, param4: boolean, param5: boolean);
					public static getAdditionalUserAgentInfo(): string;
					public static setProxyInfo(param0: string, param1: number, param2: string, param3: com.esri.arcgisruntime.security.UserCredential): void;
					public static setGlobalRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public static setProxyInfo(param0: string, param1: number, param2: string): void;
					public setIssueAuthenticationChallenge(param0: boolean): com.esri.arcgisruntime.io.RequestConfiguration;
					public static setProxyInfo(param0: string, param1: number): void;
					public getSocketTimeout(): number;
					public setSocketTimeout(param0: number): com.esri.arcgisruntime.io.RequestConfiguration;
					public setForcePost(param0: boolean): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor();
					public static getGlobalRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public copy(): com.esri.arcgisruntime.io.RequestConfiguration;
					public setHeaders(param0: java.util.Map<string,string>): com.esri.arcgisruntime.io.RequestConfiguration;
					public isForcePost(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class AnnotationLayer extends com.esri.arcgisruntime.layers.Layer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.AnnotationLayer>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getUri(): string;
					public getFeatureTable(): com.esri.arcgisruntime.data.ArcGISFeatureTable;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public copy(): com.esri.arcgisruntime.layers.AnnotationLayer;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable);
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnnotationLayer;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getLayerId(): number;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem, param1: number);
					public getReferenceScale(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreAnnotationLayer): com.esri.arcgisruntime.layers.AnnotationLayer;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class AnnotationSublayer extends com.esri.arcgisruntime.layers.LayerContent {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.AnnotationSublayer>;
					public isScaleSymbols(): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public getMaxScale(): number;
					public getMinScale(): number;
					public isVisibleAtScale(param0: number): boolean;
					public getSublayerId(): number;
					public setVisible(param0: boolean): void;
					public isVisible(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreAnnotationSublayer): com.esri.arcgisruntime.layers.AnnotationSublayer;
					public getName(): string;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getDefinitionExpression(): string;
					public canChangeVisibility(): boolean;
					public canShowInLegend(): boolean;
					public setCanShowInLegend(param0: boolean): void;
					public getOpacity(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class ArcGISMapImageLayer extends com.esri.arcgisruntime.layers.ImageAdjustmentLayer implements com.esri.arcgisruntime.arcgisservices.TimeAware, com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISMapImageLayer>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getGeodatabaseVersion(): string;
					public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageLayer;
					public loadTablesAndLayersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					public getImageFormat(): com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getTables(): java.util.List<com.esri.arcgisruntime.data.ServiceFeatureTable>;
					public canShowInLegend(): boolean;
					public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
					public isTimeFilteringEnabled(): boolean;
					public getRefreshInterval(): number;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public setImageFormat(param0: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public isVisible(): boolean;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public copy(): com.esri.arcgisruntime.layers.ArcGISMapImageLayer;
					public canChangeVisibility(): boolean;
					public setIsTimeFilteringEnabled(param0: boolean): void;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public isTimeFilteringSupported(): boolean;
					public getUri(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public resetSublayers(): void;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageLayer): com.esri.arcgisruntime.layers.ArcGISMapImageLayer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public getSublayers(): com.esri.arcgisruntime.layers.SublayerList;
					public setRefreshInterval(param0: number): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public getMapServiceInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceInfo;
					public getName(): string;
					public setGeodatabaseVersion(param0: string): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
				export module ArcGISMapImageLayer {
					export class ImageFormat {
						public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat>;
						public static DEFAULT: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static PNG: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static PNG8: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static PNG24: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static PNG32: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static JPG: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static JPG_PNG: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static BMP: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static GIF: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static TIFF: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static UNKNOWN: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
						public static values(): native.Array<com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat>;
						public static valueOf(param0: string): com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class ArcGISMapImageSublayer extends com.esri.arcgisruntime.layers.ArcGISSublayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISMapImageSublayer>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageSublayer;
					public isPopupEnabled(): boolean;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setOpacity(param0: number): void;
					public setMinScale(param0: number): void;
					public getSource(): com.esri.arcgisruntime.layers.SublayerSource;
					public getUri(): string;
					public setPopupEnabled(param0: boolean): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getLabelDefinitions(): java.util.List<com.esri.arcgisruntime.arcgisservices.LabelDefinition>;
					public setScaleSymbols(param0: boolean): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer);
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public constructor(param0: number);
					public canShowInLegend(): boolean;
					public setRenderer(param0: com.esri.arcgisruntime.symbology.Renderer): void;
					public copy(): com.esri.arcgisruntime.layers.ArcGISMapImageSublayer;
					public setMaxScale(param0: number): void;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public setName(param0: string): void;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: number, param1: com.esri.arcgisruntime.layers.SublayerSource);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setDefinitionExpression(param0: string): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public copy(): com.esri.arcgisruntime.layers.ArcGISSublayer;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISMapImageSublayer): com.esri.arcgisruntime.layers.ArcGISMapImageSublayer;
					public setLabelsEnabled(param0: boolean): void;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public getTable(): com.esri.arcgisruntime.data.ServiceFeatureTable;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class ArcGISSceneLayer extends com.esri.arcgisruntime.layers.Layer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISSceneLayer>;
					public constructor(param0: string);
					public selectFeatures(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public getFeatureTable(): com.esri.arcgisruntime.data.FeatureTable;
					public setSurfacePlacement(param0: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement): void;
					public getAltitudeOffset(): number;
					public getSelectedFeaturesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public unselectFeature(param0: com.esri.arcgisruntime.data.Feature): void;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public selectFeature(param0: com.esri.arcgisruntime.data.Feature): void;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISSceneLayer): com.esri.arcgisruntime.layers.ArcGISSceneLayer;
					public clearSelection(): void;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public setAltitudeOffset(param0: number): void;
					public unselectFeatures(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): void;
					public copy(): com.esri.arcgisruntime.layers.ArcGISSceneLayer;
					public getSurfacePlacement(): com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export abstract class ArcGISSublayer implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.layers.LayerContent, com.esri.arcgisruntime.loadable.Loadable, com.esri.arcgisruntime.mapping.popup.PopupSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISSublayer>;
					public isPopupEnabled(): boolean;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public copyTo(param0: com.esri.arcgisruntime.layers.ArcGISSublayer): void;
					public getRenderer(): com.esri.arcgisruntime.symbology.Renderer;
					public getUri(): string;
					public setPopupEnabled(param0: boolean): void;
					public getMinScale(): number;
					public isVisibleAtScale(param0: number): boolean;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
					public setVisible(param0: boolean): void;
					public loadAsync(): void;
					public getSublayers(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.ArcGISSublayer>;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer);
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canScaleSymbols(): boolean;
					public canShowInLegend(): boolean;
					public getOpacity(): number;
					public setRenderer(param0: com.esri.arcgisruntime.symbology.Renderer): void;
					public getId(): number;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public getMaxScale(): number;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getMapServiceSublayerInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceSublayerInfo;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public copy(): com.esri.arcgisruntime.layers.ArcGISSublayer;
					public isLabelsEnabled(): boolean;
					public isVisible(): boolean;
					public getName(): string;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getDefinitionExpression(): string;
					public canChangeVisibility(): boolean;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public setCanShowInLegend(param0: boolean): void;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class ArcGISTiledLayer extends com.esri.arcgisruntime.layers.ImageTiledLayer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISTiledLayer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer): com.esri.arcgisruntime.layers.ImageTiledLayer;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getSublayers(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.ArcGISSublayer>;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
					public getTile(param0: com.esri.arcgisruntime.data.TileKey): native.Array<number>;
					public copy(): com.esri.arcgisruntime.layers.ArcGISTiledLayer;
					public getRefreshInterval(): number;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer, param1: boolean);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TileInfo, param1: com.esri.arcgisruntime.geometry.Envelope);
					public constructor(param0: com.esri.arcgisruntime.data.TileCache);
					public setRefreshInterval(param0: number): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISTiledLayer): com.esri.arcgisruntime.layers.ArcGISTiledLayer;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public getMapServiceInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceInfo;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISTiledLayer;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class ArcGISTiledSublayer extends com.esri.arcgisruntime.layers.ArcGISSublayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISTiledSublayer>;
					public isPopupEnabled(): boolean;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getUri(): string;
					public setPopupEnabled(param0: boolean): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public setVisible(param0: boolean): void;
					public loadAsync(): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public getInternal(): com.esri.arcgisruntime.internal.jni.g;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public copy(): com.esri.arcgisruntime.layers.ArcGISSublayer;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.g): com.esri.arcgisruntime.layers.ArcGISTiledSublayer;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public copy(): com.esri.arcgisruntime.layers.ArcGISTiledSublayer;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class ArcGISVectorTiledLayer extends com.esri.arcgisruntime.layers.Layer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ArcGISVectorTiledLayer>;
					public getItemResourceCache(): com.esri.arcgisruntime.mapping.ItemResourceCache;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISVectorTiledLayer;
					public getVectorTileCache(): com.esri.arcgisruntime.data.VectorTileCache;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public constructor(param0: com.esri.arcgisruntime.data.VectorTileCache, param1: com.esri.arcgisruntime.mapping.ItemResourceCache);
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getSourceInfo(): com.esri.arcgisruntime.arcgisservices.VectorTileSourceInfo;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public getStyle(): com.esri.arcgisruntime.arcgisservices.VectorTileStyle;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public copy(): com.esri.arcgisruntime.layers.ArcGISVectorTiledLayer;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISVectorTiledLayer): com.esri.arcgisruntime.layers.ArcGISVectorTiledLayer;
					public constructor(param0: com.esri.arcgisruntime.data.VectorTileCache);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class BingMapsLayer extends com.esri.arcgisruntime.layers.ServiceImageTiledLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.BingMapsLayer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer): com.esri.arcgisruntime.layers.ImageTiledLayer;
					public copy(): com.esri.arcgisruntime.layers.BingMapsLayer;
					public setKey(param0: string): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getCulture(): string;
					public constructor(param0: com.esri.arcgisruntime.layers.BingMapsLayer.Style, param1: com.esri.arcgisruntime.portal.Portal);
					public getUri(): string;
					public getKey(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer, param1: boolean);
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getTileUrl(param0: com.esri.arcgisruntime.data.TileKey): string;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public constructor(param0: com.esri.arcgisruntime.layers.BingMapsLayer.Style, param1: string);
					public getStyle(): com.esri.arcgisruntime.layers.BingMapsLayer.Style;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreBingMapsLayer): com.esri.arcgisruntime.layers.BingMapsLayer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
					public getPortal(): com.esri.arcgisruntime.portal.Portal;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer, param1: boolean);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TileInfo, param1: com.esri.arcgisruntime.geometry.Envelope);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public setCulture(param0: string): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBingMapsLayer;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
				export module BingMapsLayer {
					export class Style {
						public static class: java.lang.Class<com.esri.arcgisruntime.layers.BingMapsLayer.Style>;
						public static AERIAL: com.esri.arcgisruntime.layers.BingMapsLayer.Style;
						public static HYBRID: com.esri.arcgisruntime.layers.BingMapsLayer.Style;
						public static ROAD: com.esri.arcgisruntime.layers.BingMapsLayer.Style;
						public static values(): native.Array<com.esri.arcgisruntime.layers.BingMapsLayer.Style>;
						public static valueOf(param0: string): com.esri.arcgisruntime.layers.BingMapsLayer.Style;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class EncLayer extends com.esri.arcgisruntime.layers.Layer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.EncLayer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreENCLayer): com.esri.arcgisruntime.layers.EncLayer;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public selectFeature(param0: com.esri.arcgisruntime.hydrography.EncFeature): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public clearSelection(): void;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.hydrography.EncCell);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreENCLayer;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getCell(): com.esri.arcgisruntime.hydrography.EncCell;
					public getName(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class FeatureCollectionLayer extends com.esri.arcgisruntime.layers.Layer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.FeatureCollectionLayer>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public copy(): com.esri.arcgisruntime.layers.FeatureCollectionLayer;
					public getLayers(): java.util.List<com.esri.arcgisruntime.layers.FeatureLayer>;
					public getFeatureCollection(): com.esri.arcgisruntime.data.FeatureCollection;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public constructor(param0: com.esri.arcgisruntime.data.FeatureCollection);
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionLayer;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureCollectionLayer): com.esri.arcgisruntime.layers.FeatureCollectionLayer;
					public isVisible(): boolean;
					public getName(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class FeatureLayer extends com.esri.arcgisruntime.layers.Layer implements com.esri.arcgisruntime.arcgisservices.TimeAware, com.esri.arcgisruntime.mapping.popup.PopupSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.FeatureLayer>;
					public setRenderingMode(param0: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode): void;
					public isPopupEnabled(): boolean;
					public selectFeatures(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getRenderer(): com.esri.arcgisruntime.symbology.Renderer;
					/** @deprecated */
					public getSelectionColor(): number;
					public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureLayer): com.esri.arcgisruntime.layers.FeatureLayer;
					public unselectFeature(param0: com.esri.arcgisruntime.data.Feature): void;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public onDoneLoadingInternal(): void;
					public canShowInLegend(): boolean;
					public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
					public resetRenderer(): void;
					public selectFeature(param0: com.esri.arcgisruntime.data.Feature): void;
					public setFeatureVisible(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): void;
					public isTimeFilteringEnabled(): boolean;
					public getRefreshInterval(): number;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public resetFeaturesVisible(): void;
					public selectFeaturesAsync(param0: com.esri.arcgisruntime.data.QueryParameters, param1: com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					/** @deprecated */
					public setSelectionWidth(param0: number): void;
					public isLabelsEnabled(): boolean;
					public isVisible(): boolean;
					/** @deprecated */
					public getSelectionWidth(): number;
					public setLabelsEnabled(param0: boolean): void;
					public canChangeVisibility(): boolean;
					public setIsTimeFilteringEnabled(param0: boolean): void;
					public getSceneProperties(): com.esri.arcgisruntime.mapping.view.LayerSceneProperties;
					public isTimeFilteringSupported(): boolean;
					public getFeatureTable(): com.esri.arcgisruntime.data.FeatureTable;
					public getUnknownJson(): java.util.Map<string,any>;
					public getSelectedFeaturesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
					public setPopupEnabled(param0: boolean): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public copy(): com.esri.arcgisruntime.layers.FeatureLayer;
					public getLabelDefinitions(): java.util.List<com.esri.arcgisruntime.arcgisservices.LabelDefinition>;
					public setScaleSymbols(param0: boolean): void;
					public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public getRenderingMode(): com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
					public setFeaturesVisible(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>, param1: boolean): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public setRenderer(param0: com.esri.arcgisruntime.symbology.Renderer): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureLayer;
					public isScaleSymbols(): boolean;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public constructor(param0: com.esri.arcgisruntime.data.FeatureTable);
					/** @deprecated */
					public setSelectionColor(param0: number): void;
					public clearSelection(): void;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public setRefreshInterval(param0: number): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setDefinitionExpression(param0: string): void;
					public retryLoadAsync(): void;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getName(): string;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem, param1: number);
					public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public unselectFeatures(param0: java.lang.Iterable<com.esri.arcgisruntime.data.Feature>): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureLayer, param1: com.esri.arcgisruntime.portal.PortalItem, param2: boolean);
					public getDefinitionExpression(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
				export module FeatureLayer {
					export class RenderingMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode>;
						public static AUTOMATIC: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
						public static STATIC: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
						public static DYNAMIC: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
						public static values(): native.Array<com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode>;
						public static valueOf(param0: string): com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
					}
					export class SelectionMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode>;
						public static ADD: com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode;
						public static NEW: com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode;
						public static SUBTRACT: com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode;
						public static values(): native.Array<com.esri.arcgisruntime.layers.FeatureLayer.SelectionMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class GroupLayer extends com.esri.arcgisruntime.layers.Layer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.GroupLayer>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getLayers(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.Layer>;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public constructor();
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGroupLayer;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.layers.Layer>);
					public isShowChildrenInLegend(): boolean;
					public copy(): com.esri.arcgisruntime.layers.GroupLayer;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public setShowChildrenInLegend(param0: boolean): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGroupLayer): com.esri.arcgisruntime.layers.GroupLayer;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export abstract class ImageAdjustmentLayer extends com.esri.arcgisruntime.layers.Layer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ImageAdjustmentLayer>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getGamma(): number;
					public setContrast(param0: number): void;
					public isVisibleAtScale(param0: number): boolean;
					public setBrightness(param0: number): void;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getContrast(): number;
					public cancelLoad(): void;
					public setGamma(param0: number): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public getBrightness(): number;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export abstract class ImageTiledLayer extends com.esri.arcgisruntime.layers.ImageAdjustmentLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ImageTiledLayer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer): com.esri.arcgisruntime.layers.ImageTiledLayer;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setNoDataTileBehavior(param0: com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getNoDataTileBehavior(): com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public setBufferSize(param0: com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
					public getTile(param0: com.esri.arcgisruntime.data.TileKey): native.Array<number>;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer, param1: boolean);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TileInfo, param1: com.esri.arcgisruntime.geometry.Envelope);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getTileInfo(): com.esri.arcgisruntime.arcgisservices.TileInfo;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public getBufferSize(): com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
				export module ImageTiledLayer {
					export class BufferSize {
						public static class: java.lang.Class<com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize>;
						public static NONE: com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize;
						public static SMALL: com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize;
						public static MEDIUM: com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize;
						public static LARGE: com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize;
						public static valueOf(param0: string): com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize;
						public static values(): native.Array<com.esri.arcgisruntime.layers.ImageTiledLayer.BufferSize>;
					}
					export class NoDataTileBehavior {
						public static class: java.lang.Class<com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior>;
						public static UPSAMPLE: com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior;
						public static BLANK: com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior;
						public static SHOW: com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior;
						public static UNKNOWN: com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior;
						public static values(): native.Array<com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior>;
						public static valueOf(param0: string): com.esri.arcgisruntime.layers.ImageTiledLayer.NoDataTileBehavior;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class IntegratedMeshLayer extends com.esri.arcgisruntime.layers.Layer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.IntegratedMeshLayer>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public getAltitudeOffset(): number;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreIntegratedMeshLayer): com.esri.arcgisruntime.layers.IntegratedMeshLayer;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public setAltitudeOffset(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreIntegratedMeshLayer;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class KmlLayer extends com.esri.arcgisruntime.layers.Layer implements com.esri.arcgisruntime.arcgisservices.TimeAware {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.KmlLayer>;
					public setIsTimeFilteringEnabled(param0: boolean): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public isTimeFilteringSupported(): boolean;
					public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLLayer): com.esri.arcgisruntime.layers.KmlLayer;
					public isTimeFilteringEnabled(): boolean;
					public getDataset(): com.esri.arcgisruntime.ogc.kml.KmlDataset;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlDataset);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLLayer;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export abstract class Layer implements com.esri.arcgisruntime.layers.LayerContent, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.Layer>;
					public mCoreLayer: com.esri.arcgisruntime.internal.jni.CoreLayer;
					public mItem: com.esri.arcgisruntime.mapping.Item;
					public setDescription(param0: string): void;
					public getId(): string;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setOpacity(param0: number): void;
					public setMinScale(param0: number): void;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public getMinScale(): number;
					public isVisibleAtScale(param0: number): boolean;
					public setVisible(param0: boolean): void;
					public loadAsync(): void;
					public getFullExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public onDoneLoadingInternal(): void;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getOpacity(): number;
					public setMaxScale(param0: number): void;
					public getAttribution(): string;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public setName(param0: string): void;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public getMaxScale(): number;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public isIdentifyEnabled(): boolean;
					public setId(param0: string): void;
					public getDescription(): string;
					public canChangeVisibility(): boolean;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public setCanShowInLegend(param0: boolean): void;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class LayerContent {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.LayerContent>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.layers.LayerContent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						canChangeVisibility(): boolean;
						isVisible(): boolean;
						setVisible(param0: boolean): void;
						canShowInLegend(): boolean;
						setCanShowInLegend(param0: boolean): void;
						getName(): string;
						getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
						fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
						isVisibleAtScale(param0: number): boolean;
					});
					public constructor();
					public isVisibleAtScale(param0: number): boolean;
					public setVisible(param0: boolean): void;
					public isVisible(): boolean;
					public getName(): string;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canChangeVisibility(): boolean;
					public canShowInLegend(): boolean;
					public setCanShowInLegend(param0: boolean): void;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class LegendInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.LegendInfo>;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLegendInfo): com.esri.arcgisruntime.layers.LegendInfo;
					public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLegendInfo;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class MapSublayerSource extends com.esri.arcgisruntime.layers.SublayerSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.MapSublayerSource>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMapSublayerSource;
					public setGeodatabaseVersion(param0: string): void;
					public getGeodatabaseVersion(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSublayerSource);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMapSublayerSource): com.esri.arcgisruntime.layers.MapSublayerSource;
					public getMapSublayerId(): number;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class MobileBasemapLayer extends com.esri.arcgisruntime.layers.Layer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.MobileBasemapLayer>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMobileBasemapLayer;
					public copy(): com.esri.arcgisruntime.layers.MobileBasemapLayer;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMobileBasemapLayer): com.esri.arcgisruntime.layers.MobileBasemapLayer;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public getSublayerIds(): java.util.List<java.lang.Long>;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class OpenStreetMapLayer extends com.esri.arcgisruntime.layers.WebTiledLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.OpenStreetMapLayer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer): com.esri.arcgisruntime.layers.WebTiledLayer;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer): com.esri.arcgisruntime.layers.ImageTiledLayer;
					public constructor(param0: string);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer, param1: boolean);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getUri(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public setAttribution(param0: string): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer, param1: boolean);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOpenStreetMapLayer): com.esri.arcgisruntime.layers.OpenStreetMapLayer;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public constructor();
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public constructor(param0: string, param1: com.esri.arcgisruntime.arcgisservices.TileInfo, param2: com.esri.arcgisruntime.geometry.Envelope);
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public copy(): com.esri.arcgisruntime.layers.OpenStreetMapLayer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
					public constructor(param0: string, param1: java.lang.Iterable<string>, param2: com.esri.arcgisruntime.arcgisservices.TileInfo, param3: com.esri.arcgisruntime.geometry.Envelope);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOpenStreetMapLayer;
					public constructor(param0: string, param1: java.lang.Iterable<string>);
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer, param1: boolean);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TileInfo, param1: com.esri.arcgisruntime.geometry.Envelope);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public copy(): com.esri.arcgisruntime.layers.WebTiledLayer;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class PointCloudLayer extends com.esri.arcgisruntime.layers.Layer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.PointCloudLayer>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public getAltitudeOffset(): number;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePointCloudLayer): com.esri.arcgisruntime.layers.PointCloudLayer;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CorePointCloudLayer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public setAltitudeOffset(param0: number): void;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class RasterLayer extends com.esri.arcgisruntime.layers.ImageAdjustmentLayer implements com.esri.arcgisruntime.arcgisservices.TimeAware {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.RasterLayer>;
					public setIsTimeFilteringEnabled(param0: boolean): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public isTimeFilteringSupported(): boolean;
					public constructor(param0: com.esri.arcgisruntime.raster.Raster);
					public getRasterRenderer(): com.esri.arcgisruntime.raster.RasterRenderer;
					public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRasterLayer): com.esri.arcgisruntime.layers.RasterLayer;
					public copy(): com.esri.arcgisruntime.layers.RasterLayer;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
					public isTimeFilteringEnabled(): boolean;
					public setRasterRenderer(param0: com.esri.arcgisruntime.raster.RasterRenderer): void;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public getRaster(): com.esri.arcgisruntime.raster.Raster;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class RasterSublayerSource extends com.esri.arcgisruntime.layers.SublayerSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.RasterSublayerSource>;
					public constructor(param0: string, param1: string);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRasterSublayerSource): com.esri.arcgisruntime.layers.RasterSublayerSource;
					public getDataSourceName(): string;
					public getWorkspaceId(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSublayerSource);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export abstract class ServiceImageTiledLayer extends com.esri.arcgisruntime.layers.ImageTiledLayer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.ServiceImageTiledLayer>;
					public copyTo(param0: com.esri.arcgisruntime.layers.ServiceImageTiledLayer): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer, param1: boolean);
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getTileUrl(param0: com.esri.arcgisruntime.data.TileKey): string;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
					public getTile(param0: com.esri.arcgisruntime.data.TileKey): native.Array<number>;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer, param1: boolean);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TileInfo, param1: com.esri.arcgisruntime.geometry.Envelope);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class SublayerList extends com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.ArcGISSublayer> {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.SublayerList>;
					public addAll(param0: java.util.Collection<any>): boolean;
					public isEmpty(): boolean;
					public listIterator(param0: number): java.util.ListIterator<com.esri.arcgisruntime.layers.ArcGISSublayer>;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public listIterator(): java.util.ListIterator<com.esri.arcgisruntime.layers.ArcGISSublayer>;
					public size(): number;
					public lastIndexOf(param0: any): number;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public get(param0: number): com.esri.arcgisruntime.layers.ArcGISSublayer;
					public toArray(): native.Array<any>;
					public clear(): void;
					public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
					public contains(param0: any): boolean;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public addAll(param0: number, param1: java.util.Collection<any>): boolean;
					public iterator(): java.util.Iterator<com.esri.arcgisruntime.layers.ArcGISSublayer>;
					public add(param0: com.esri.arcgisruntime.layers.ArcGISSublayer): boolean;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public remove(param0: number): com.esri.arcgisruntime.layers.ArcGISSublayer;
					public indexOf(param0: any): number;
					public subList(param0: number, param1: number): java.util.List<com.esri.arcgisruntime.layers.ArcGISSublayer>;
					public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.layers.ArcGISSublayer>): boolean;
					public add(param0: number, param1: com.esri.arcgisruntime.layers.ArcGISSublayer): void;
					public set(param0: number, param1: com.esri.arcgisruntime.layers.ArcGISSublayer): com.esri.arcgisruntime.layers.ArcGISSublayer;
					public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.layers.ArcGISSublayer>): void;
					public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export abstract class SublayerSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.SublayerSource>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSublayerSource);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSublayerSource;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class SubtypeFeatureLayer extends com.esri.arcgisruntime.layers.FeatureLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.SubtypeFeatureLayer>;
					public setIsTimeFilteringEnabled(param0: boolean): void;
					public isPopupEnabled(): boolean;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getSubtypeSublayers(): java.util.List<com.esri.arcgisruntime.layers.SubtypeSublayer>;
					public isTimeFilteringSupported(): boolean;
					public getSublayerWithSubtypeCode(param0: any): com.esri.arcgisruntime.layers.SubtypeSublayer;
					public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
					public setPopupEnabled(param0: boolean): void;
					public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
					public isVisibleAtScale(param0: number): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSubtypeFeatureLayer): com.esri.arcgisruntime.layers.SubtypeFeatureLayer;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureLayer): com.esri.arcgisruntime.layers.FeatureLayer;
					public constructor(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable);
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureLayer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSubtypeFeatureLayer;
					public getSublayerWithSubtypeName(param0: string): com.esri.arcgisruntime.layers.SubtypeSublayer;
					public isTimeFilteringEnabled(): boolean;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public constructor(param0: com.esri.arcgisruntime.data.FeatureTable);
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getName(): string;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem, param1: number);
					public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureLayer, param1: com.esri.arcgisruntime.portal.PortalItem, param2: boolean);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class SubtypeSublayer extends com.esri.arcgisruntime.layers.ArcGISSublayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.SubtypeSublayer>;
					public isPopupEnabled(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setOpacity(param0: number): void;
					public setMinScale(param0: number): void;
					public getUri(): string;
					public setPopupEnabled(param0: boolean): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreArcGISSublayer;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
					public getLabelDefinitions(): java.util.List<com.esri.arcgisruntime.arcgisservices.LabelDefinition>;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canShowInLegend(): boolean;
					public setRenderer(param0: com.esri.arcgisruntime.symbology.Renderer): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSubtypeSublayer): com.esri.arcgisruntime.layers.SubtypeSublayer;
					public setMaxScale(param0: number): void;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public getSubtype(): com.esri.arcgisruntime.data.FeatureSubtype;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public copy(): com.esri.arcgisruntime.layers.ArcGISSublayer;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public setLabelsEnabled(param0: boolean): void;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class TableJoinSublayerSource extends com.esri.arcgisruntime.layers.SublayerSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.TableJoinSublayerSource>;
					public getJoinType(): com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTableJoinSublayerSource): com.esri.arcgisruntime.layers.TableJoinSublayerSource;
					public constructor(param0: string, param1: com.esri.arcgisruntime.layers.SublayerSource, param2: string, param3: com.esri.arcgisruntime.layers.SublayerSource, param4: com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSublayerSource);
					public getLeftFieldName(): string;
					public getRightFieldName(): string;
					public getLeftTableSublayerSource(): com.esri.arcgisruntime.layers.SublayerSource;
					public getRightTableSublayerSource(): com.esri.arcgisruntime.layers.SublayerSource;
				}
				export module TableJoinSublayerSource {
					export class JoinType {
						public static class: java.lang.Class<com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType>;
						public static INNER_JOIN: com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType;
						public static LEFT_OUTER_JOIN: com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType;
						public static values(): native.Array<com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.layers.TableJoinSublayerSource.JoinType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class TableQuerySublayerSource extends com.esri.arcgisruntime.layers.SublayerSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.TableQuerySublayerSource>;
					public constructor(param0: string, param1: string, param2: java.lang.Iterable<string>);
					public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
					public getWorkspaceId(): string;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public setSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSublayerSource);
					public getSqlQuery(): string;
					public setGeometryType(param0: com.esri.arcgisruntime.geometry.GeometryType): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTableQuerySublayerSource): com.esri.arcgisruntime.layers.TableQuerySublayerSource;
					public getObjectIdFieldNames(): java.util.List<string>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class TableSublayerSource extends com.esri.arcgisruntime.layers.SublayerSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.TableSublayerSource>;
					public constructor(param0: string, param1: string);
					public getDataSourceName(): string;
					public getWorkspaceId(): string;
					public setGeodatabaseVersion(param0: string): void;
					public getGeodatabaseVersion(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSublayerSource);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTableSublayerSource): com.esri.arcgisruntime.layers.TableSublayerSource;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class UnknownLayer extends com.esri.arcgisruntime.layers.Layer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.UnknownLayer>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.iy): com.esri.arcgisruntime.layers.UnknownLayer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public setVisible(param0: boolean): void;
					public isVisible(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.iy;
					public getName(): string;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public canShowInLegend(): boolean;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class UnsupportedLayer extends com.esri.arcgisruntime.layers.Layer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.UnsupportedLayer>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLayer): com.esri.arcgisruntime.layers.UnsupportedLayer;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public setVisible(param0: boolean): void;
					public isVisible(): boolean;
					public getName(): string;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public canShowInLegend(): boolean;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class WebTiledLayer extends com.esri.arcgisruntime.layers.ServiceImageTiledLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.WebTiledLayer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer): com.esri.arcgisruntime.layers.WebTiledLayer;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer): com.esri.arcgisruntime.layers.ImageTiledLayer;
					public constructor(param0: string);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer, param1: boolean);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getSubDomains(): java.util.List<string>;
					public getUri(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public setAttribution(param0: string): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer, param1: boolean);
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public getTileUrl(param0: com.esri.arcgisruntime.data.TileKey): string;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public constructor(param0: string, param1: com.esri.arcgisruntime.arcgisservices.TileInfo, param2: com.esri.arcgisruntime.geometry.Envelope);
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
					public getTemplateUri(): string;
					public constructor(param0: string, param1: java.lang.Iterable<string>, param2: com.esri.arcgisruntime.arcgisservices.TileInfo, param3: com.esri.arcgisruntime.geometry.Envelope);
					public constructor(param0: string, param1: java.lang.Iterable<string>);
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer, param1: boolean);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceImageTiledLayer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWebTiledLayer;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TileInfo, param1: com.esri.arcgisruntime.geometry.Envelope);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public copy(): com.esri.arcgisruntime.layers.WebTiledLayer;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class WmsLayer extends com.esri.arcgisruntime.layers.ImageAdjustmentLayer implements com.esri.arcgisruntime.arcgisservices.TimeAware, com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.WmsLayer>;
					public setIsTimeFilteringEnabled(param0: boolean): void;
					public getLayerNames(): java.util.List<string>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMSLayer): com.esri.arcgisruntime.layers.WmsLayer;
					public isTimeFilteringSupported(): boolean;
					public getSublayers(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.WmsSublayer>;
					public setTimeOffset(param0: com.esri.arcgisruntime.mapping.TimeValue): void;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public addFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): void;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public getVersion(): com.esri.arcgisruntime.ogc.wms.WmsVersion;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public removeFullTimeExtentChangedListener(param0: com.esri.arcgisruntime.arcgisservices.FullTimeExtentChangedListener): boolean;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public setPreferredImageFormat(param0: com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat): void;
					public getFullTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public getTimeOffset(): com.esri.arcgisruntime.mapping.TimeValue;
					public getLayerInfos(): java.util.List<com.esri.arcgisruntime.ogc.wms.WmsLayerInfo>;
					public getCustomParameters(): java.util.Map<string,string>;
					public constructor(param0: string, param1: java.lang.Iterable<string>);
					public isTimeFilteringEnabled(): boolean;
					public getRefreshInterval(): number;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public getPreferredImageFormat(): com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public setRefreshInterval(param0: number): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.ogc.wms.WmsLayerInfo>);
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public copy(): com.esri.arcgisruntime.layers.WmsLayer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public getTimeInterval(): com.esri.arcgisruntime.mapping.TimeValue;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class WmsSublayer extends com.esri.arcgisruntime.layers.LayerContent {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.WmsSublayer>;
					public getCurrentStyle(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMSSublayer): com.esri.arcgisruntime.layers.WmsSublayer;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public isVisibleAtScale(param0: number): boolean;
					public setVisible(param0: boolean): void;
					public isVisible(): boolean;
					public getName(): string;
					public getSublayerInfo(): com.esri.arcgisruntime.ogc.wms.WmsLayerInfo;
					public setCurrentStyle(param0: string): void;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public canChangeVisibility(): boolean;
					public canShowInLegend(): boolean;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module layers {
				export class WmtsLayer extends com.esri.arcgisruntime.layers.ImageTiledLayer implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.layers.WmtsLayer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer): com.esri.arcgisruntime.layers.ImageTiledLayer;
					public getLayerId(): string;
					public getPreferredImageFormat(): com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public copy(): com.esri.arcgisruntime.layers.WmtsLayer;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMTSLayer;
					public constructor(param0: string, param1: string);
					public getLayerInfo(): com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public isVisibleAtScale(param0: number): boolean;
					public loadAsync(): void;
					public setVisible(param0: boolean): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSLayer): com.esri.arcgisruntime.layers.WmtsLayer;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public fetchLegendInfosAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.layers.LegendInfo>>;
					public constructor(param0: com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo);
					public constructor(param0: string, param1: string, param2: string);
					public canShowInLegend(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLayer);
					public constructor(param0: com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo, param1: com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer;
					public getTile(param0: com.esri.arcgisruntime.data.TileKey): native.Array<number>;
					public constructor(param0: com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo, param1: com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet, param2: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat);
					public getCustomParameters(): java.util.Map<string,string>;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageTiledLayer, param1: boolean);
					public constructor(param0: string, param1: string, param2: string, param3: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat);
					public getTileMatrixSet(): com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayer;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSubLayerContents(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.LayerContent>;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.TileInfo, param1: com.esri.arcgisruntime.geometry.Envelope);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public isVisible(): boolean;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo, param1: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreImageAdjustmentLayer);
					public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public canChangeVisibility(): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public setCanShowInLegend(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module loadable {
				export class LoadStatus {
					public static class: java.lang.Class<com.esri.arcgisruntime.loadable.LoadStatus>;
					public static NOT_LOADED: com.esri.arcgisruntime.loadable.LoadStatus;
					public static LOADING: com.esri.arcgisruntime.loadable.LoadStatus;
					public static LOADED: com.esri.arcgisruntime.loadable.LoadStatus;
					public static FAILED_TO_LOAD: com.esri.arcgisruntime.loadable.LoadStatus;
					public static valueOf(param0: string): com.esri.arcgisruntime.loadable.LoadStatus;
					public static values(): native.Array<com.esri.arcgisruntime.loadable.LoadStatus>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module loadable {
				export class LoadStatusChangedEvent {
					public static class: java.lang.Class<com.esri.arcgisruntime.loadable.LoadStatusChangedEvent>;
					public constructor(param0: any, param1: com.esri.arcgisruntime.loadable.LoadStatus);
					public getNewLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module loadable {
				export class LoadStatusChangedListener {
					public static class: java.lang.Class<com.esri.arcgisruntime.loadable.LoadStatusChangedListener>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.loadable.LoadStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						loadStatusChanged(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedEvent): void;
					});
					public constructor();
					public loadStatusChanged(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module loadable {
				export class Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.loadable.Loadable>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.loadable.Loadable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						cancelLoad(): void;
						loadAsync(): void;
						retryLoadAsync(): void;
						addDoneLoadingListener(param0: java.lang.Runnable): void;
						removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					});
					public constructor();
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module location {
				export class AndroidLocationDataSource extends com.esri.arcgisruntime.location.LocationDataSource implements com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedListener {
					public static class: java.lang.Class<com.esri.arcgisruntime.location.AndroidLocationDataSource>;
					public constructor(param0: globalAndroid.content.Context);
					public requestLocationUpdates(param0: globalAndroid.location.Criteria, param1: number, param2: number): void;
					public onStart(): void;
					public onAutoPanModeChanged(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedEvent): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.location.Criteria, param2: number, param3: number);
					public constructor();
					public onStop(): void;
					public requestLocationUpdates(param0: string, param1: number, param2: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number);
				}
				export module AndroidLocationDataSource {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.AndroidLocationDataSource.a>;
						public onAccuracyChanged(param0: globalAndroid.hardware.Sensor, param1: number): void;
						public onSensorChanged(param0: globalAndroid.hardware.SensorEvent): void;
					}
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.AndroidLocationDataSource.b>;
						public onProviderEnabled(param0: string): void;
						public onLocationChanged(param0: globalAndroid.location.Location): void;
						public onStatusChanged(param0: string, param1: number, param2: globalAndroid.os.Bundle): void;
						public onProviderDisabled(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module location {
				export abstract class LocationDataSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource>;
					public removeHeadingChangedListener(param0: com.esri.arcgisruntime.location.LocationDataSource.HeadingChangedListener): boolean;
					public removeStartedListener(param0: java.lang.Runnable): boolean;
					public addStartedListener(param0: java.lang.Runnable): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocationDataSource;
					public startAsync(): void;
					public addStatusChangedListener(param0: com.esri.arcgisruntime.location.LocationDataSource.StatusChangedListener): void;
					public setLastKnownLocation(param0: com.esri.arcgisruntime.location.LocationDataSource.Location): void;
					public isStarted(): boolean;
					public removeLocationChangedListener(param0: com.esri.arcgisruntime.location.LocationDataSource.LocationChangedListener): boolean;
					public getError(): java.lang.Throwable;
					public updateHeading(param0: number): void;
					public onStart(): void;
					public onStartCompleted(param0: java.lang.Throwable): void;
					public constructor();
					public addLocationChangedListener(param0: com.esri.arcgisruntime.location.LocationDataSource.LocationChangedListener): void;
					public removeStatusChangedListener(param0: com.esri.arcgisruntime.location.LocationDataSource.StatusChangedListener): boolean;
					public stop(): void;
					public addHeadingChangedListener(param0: com.esri.arcgisruntime.location.LocationDataSource.HeadingChangedListener): void;
					public onStop(): void;
					public updateLocation(param0: com.esri.arcgisruntime.location.LocationDataSource.Location): void;
				}
				export module LocationDataSource {
					export class HeadingChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.HeadingChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.location.LocationDataSource, param1: com.esri.arcgisruntime.location.LocationDataSource, param2: number);
						public getSource(): com.esri.arcgisruntime.location.LocationDataSource;
						public getHeading(): number;
					}
					export class HeadingChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.HeadingChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.location.LocationDataSource$HeadingChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							headingChanged(param0: com.esri.arcgisruntime.location.LocationDataSource.HeadingChangedEvent): void;
						});
						public constructor();
						public headingChanged(param0: com.esri.arcgisruntime.location.LocationDataSource.HeadingChangedEvent): void;
					}
					export class Location {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.Location>;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point);
						public getCourse(): number;
						public getTimeStamp(): java.util.Calendar;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLocation);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocation;
						public getHorizontalAccuracy(): number;
						public getVerticalAccuracy(): number;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: boolean);
						public getVelocity(): number;
						public getPosition(): com.esri.arcgisruntime.geometry.Point;
						public isLastKnown(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocation): com.esri.arcgisruntime.location.LocationDataSource.Location;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: number, param5: boolean, param6: java.util.Calendar);
					}
					export class LocationChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.LocationChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.location.LocationDataSource, param1: com.esri.arcgisruntime.location.LocationDataSource, param2: com.esri.arcgisruntime.location.LocationDataSource.Location);
						public getSource(): com.esri.arcgisruntime.location.LocationDataSource;
						public getLocation(): com.esri.arcgisruntime.location.LocationDataSource.Location;
					}
					export class LocationChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.LocationChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.location.LocationDataSource$LocationChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							locationChanged(param0: com.esri.arcgisruntime.location.LocationDataSource.LocationChangedEvent): void;
						});
						public constructor();
						public locationChanged(param0: com.esri.arcgisruntime.location.LocationDataSource.LocationChangedEvent): void;
					}
					export class Status {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.Status>;
						public static STOPPED: com.esri.arcgisruntime.location.LocationDataSource.Status;
						public static STARTING: com.esri.arcgisruntime.location.LocationDataSource.Status;
						public static STARTED: com.esri.arcgisruntime.location.LocationDataSource.Status;
						public static FAILED_TO_START: com.esri.arcgisruntime.location.LocationDataSource.Status;
						public static values(): native.Array<com.esri.arcgisruntime.location.LocationDataSource.Status>;
						public static valueOf(param0: string): com.esri.arcgisruntime.location.LocationDataSource.Status;
					}
					export class StatusChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.StatusChangedEvent>;
						public getStatus(): com.esri.arcgisruntime.location.LocationDataSource.Status;
						public constructor(param0: com.esri.arcgisruntime.location.LocationDataSource, param1: com.esri.arcgisruntime.location.LocationDataSource, param2: com.esri.arcgisruntime.location.LocationDataSource.Status);
						public getSource(): com.esri.arcgisruntime.location.LocationDataSource;
					}
					export class StatusChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.StatusChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.location.LocationDataSource$StatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							statusChanged(param0: com.esri.arcgisruntime.location.LocationDataSource.StatusChangedEvent): void;
						});
						public constructor();
						public statusChanged(param0: com.esri.arcgisruntime.location.LocationDataSource.StatusChangedEvent): void;
					}
					export class a extends com.esri.arcgisruntime.internal.jni.hm {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.LocationDataSource.a>;
						public a(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module location {
				export class NmeaDataSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.location.NmeaDataSource>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreNMEADataSource;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreNMEADataSource): com.esri.arcgisruntime.location.NmeaDataSource;
					public constructor();
					public removeLocationChangedListener(param0: com.esri.arcgisruntime.location.NmeaDataSource.LocationChangedListener): boolean;
					public addLocationChangedListener(param0: com.esri.arcgisruntime.location.NmeaDataSource.LocationChangedListener): void;
					public parseData(param0: native.Array<number>): void;
				}
				export module NmeaDataSource {
					export class Location extends com.esri.arcgisruntime.location.LocationDataSource.Location {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.NmeaDataSource.Location>;
						public getVdop(): number;
						public getSatellites(): java.util.List<com.esri.arcgisruntime.location.NmeaDataSource.Location.SatelliteInfo>;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point);
						public getFixType(): com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLocation);
						public getPdop(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocation;
						public constructor(param0: java.util.Calendar, param1: com.esri.arcgisruntime.geometry.Point, param2: number, param3: number, param4: number, param5: number, param6: boolean, param7: number, param8: number, param9: number, param10: number, param11: number, param12: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType, param13: java.lang.Iterable<com.esri.arcgisruntime.location.NmeaDataSource.Location.SatelliteInfo>, param14: com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType, param15: number);
						public getHdop(): number;
						public getGeoidSeparation(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreNMEALocation): com.esri.arcgisruntime.location.NmeaDataSource.Location;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: boolean);
						public getReferenceStationId(): number;
						public getAccuracyType(): com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocation): com.esri.arcgisruntime.location.LocationDataSource.Location;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: number, param5: boolean, param6: java.util.Calendar);
						public getDgpsAge(): number;
					}
					export module Location {
						export class AccuracyType {
							public static class: java.lang.Class<com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType>;
							public static GST: com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType;
							public static GSA: com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType;
							public static GGA: com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType;
							public static valueOf(param0: string): com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType;
							public static values(): native.Array<com.esri.arcgisruntime.location.NmeaDataSource.Location.AccuracyType>;
						}
						export class FixType {
							public static class: java.lang.Class<com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType>;
							public static INVALID: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static STANDARD: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static DGPS: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static PPS: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static RTK: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static FRTK: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static ESTIMATED: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static MANUAL: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static SIMULATION: com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
							public static values(): native.Array<com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType>;
							public static valueOf(param0: string): com.esri.arcgisruntime.location.NmeaDataSource.Location.FixType;
						}
						export class SatelliteInfo {
							public static class: java.lang.Class<com.esri.arcgisruntime.location.NmeaDataSource.Location.SatelliteInfo>;
							public constructor(param0: number, param1: number, param2: number, param3: boolean);
							public getAzimuth(): number;
							public getElevation(): number;
							public getId(): number;
							public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreNMEASatelliteInfo): com.esri.arcgisruntime.location.NmeaDataSource.Location.SatelliteInfo;
							public isInUse(): boolean;
							public getInternal(): com.esri.arcgisruntime.internal.jni.CoreNMEASatelliteInfo;
						}
					}
					export class LocationChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.NmeaDataSource.LocationChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.location.NmeaDataSource, param1: com.esri.arcgisruntime.location.NmeaDataSource.Location);
						public getSource(): com.esri.arcgisruntime.location.NmeaDataSource;
						public getLocation(): com.esri.arcgisruntime.location.NmeaDataSource.Location;
					}
					export class LocationChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.location.NmeaDataSource.LocationChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.location.NmeaDataSource$LocationChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLocationChanged(param0: com.esri.arcgisruntime.location.NmeaDataSource.LocationChangedEvent): void;
						});
						public constructor();
						public onLocationChanged(param0: com.esri.arcgisruntime.location.NmeaDataSource.LocationChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class ArcGISMap implements com.esri.arcgisruntime.io.JsonSerializable, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISMap>;
					public constructor(param0: com.esri.arcgisruntime.mapping.Basemap.Type, param1: number, param2: number, param3: number);
					public static fromJson(param0: string): com.esri.arcgisruntime.mapping.ArcGISMap;
					public getVersion(): string;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public setMinScale(param0: number): void;
					public copy(): com.esri.arcgisruntime.mapping.ArcGISMap;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMap): com.esri.arcgisruntime.mapping.ArcGISMap;
					public getBackgroundColor(): java.lang.Integer;
					public getBasemap(): com.esri.arcgisruntime.mapping.Basemap;
					public getUnknownJson(): java.util.Map<string,any>;
					public addBasemapChangedListener(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedListener): void;
					public getOfflineSettings(): com.esri.arcgisruntime.mapping.OfflineSettings;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMap;
					public getMinScale(): number;
					public loadAsync(): void;
					public getBookmarks(): com.esri.arcgisruntime.mapping.BookmarkList;
					public constructor();
					public saveAsAsync(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalFolder, param2: string, param3: java.lang.Iterable<string>, param4: string, param5: native.Array<number>, param6: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalItem>;
					public removeBasemapChangedListener(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedListener): boolean;
					public getLoadSettings(): com.esri.arcgisruntime.mapping.LoadSettings;
					public toJson(): string;
					public getInitialViewpoint(): com.esri.arcgisruntime.mapping.Viewpoint;
					public setMaxScale(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.geometry.SpatialReference);
					public saveAsync(param0: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalItem>;
					public cancelLoad(): void;
					public getTransportationNetworks(): java.util.List<com.esri.arcgisruntime.data.TransportationNetworkDataset>;
					public setBackgroundColor(param0: java.lang.Integer): void;
					public constructor(param0: com.esri.arcgisruntime.mapping.Basemap);
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public setBasemap(param0: com.esri.arcgisruntime.mapping.Basemap): void;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getTables(): java.util.List<com.esri.arcgisruntime.data.FeatureTable>;
					public getMaxScale(): number;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getOperationalLayers(): com.esri.arcgisruntime.mapping.LayerList;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setLoadSettings(param0: com.esri.arcgisruntime.mapping.LoadSettings): void;
					public retryLoadAsync(): void;
					public setInitialViewpoint(param0: com.esri.arcgisruntime.mapping.Viewpoint): void;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public setReferenceScale(param0: number): void;
					public getReferenceScale(): number;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module ArcGISMap {
					export class BasemapChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISMap, param1: com.esri.arcgisruntime.mapping.Basemap);
						public getSource(): com.esri.arcgisruntime.mapping.ArcGISMap;
						public getOldBasemap(): com.esri.arcgisruntime.mapping.Basemap;
					}
					export class BasemapChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.ArcGISMap$BasemapChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							basemapChanged(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedEvent): void;
						});
						public constructor();
						public basemapChanged(param0: com.esri.arcgisruntime.mapping.ArcGISMap.BasemapChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class ArcGISScene extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISScene>;
					public addBasemapChangedListener(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedListener): void;
					public getVersion(): string;
					public setBaseSurface(param0: com.esri.arcgisruntime.mapping.Surface): void;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public static fromJson(param0: string): com.esri.arcgisruntime.mapping.ArcGISScene;
					public getBasemap(): com.esri.arcgisruntime.mapping.Basemap;
					public getUnknownJson(): java.util.Map<string,any>;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public loadAsync(): void;
					public getBookmarks(): com.esri.arcgisruntime.mapping.BookmarkList;
					public constructor();
					public getLoadSettings(): com.esri.arcgisruntime.mapping.LoadSettings;
					public getInitialViewpoint(): com.esri.arcgisruntime.mapping.Viewpoint;
					public getBaseSurface(): com.esri.arcgisruntime.mapping.Surface;
					public getTransportationNetworks(): java.util.List<com.esri.arcgisruntime.data.TransportationNetworkDataset>;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.mapping.Basemap.Type);
					public constructor(param0: com.esri.arcgisruntime.mapping.Basemap);
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreScene): com.esri.arcgisruntime.mapping.ArcGISScene;
					public setBasemap(param0: com.esri.arcgisruntime.mapping.Basemap): void;
					public getTables(): java.util.List<com.esri.arcgisruntime.data.FeatureTable>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getOperationalLayers(): com.esri.arcgisruntime.mapping.LayerList;
					public setLoadSettings(param0: com.esri.arcgisruntime.mapping.LoadSettings): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setInitialViewpoint(param0: com.esri.arcgisruntime.mapping.Viewpoint): void;
					public retryLoadAsync(): void;
					public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreScene;
					public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
					public constructor(param0: com.esri.arcgisruntime.mapping.Basemap, param1: com.esri.arcgisruntime.mapping.Surface);
					public getSceneViewTilingScheme(): com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme;
					public removeBasemapChangedListener(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedListener): boolean;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module ArcGISScene {
					export class BasemapChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedEvent>;
						public getOldBasemap(): com.esri.arcgisruntime.mapping.Basemap;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISScene, param1: com.esri.arcgisruntime.mapping.Basemap);
						public getSource(): com.esri.arcgisruntime.mapping.ArcGISScene;
					}
					export class BasemapChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.ArcGISScene$BasemapChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							basemapChanged(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedEvent): void;
						});
						public constructor();
						public basemapChanged(param0: com.esri.arcgisruntime.mapping.ArcGISScene.BasemapChangedEvent): void;
					}
					export class SceneViewTilingScheme {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme>;
						public static GEOGRAPHIC: com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme;
						public static WEB_MERCATOR: com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme>;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.ArcGISScene.SceneViewTilingScheme;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class ArcGISTiledElevationSource extends com.esri.arcgisruntime.mapping.ElevationSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public cancelLoad(): void;
					public getUri(): string;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElevationSource);
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreArcGISTiledElevationSource): com.esri.arcgisruntime.mapping.ArcGISTiledElevationSource;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class Basemap implements com.esri.arcgisruntime.io.JsonSerializable, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Basemap>;
					public static fromJson(param0: string): com.esri.arcgisruntime.mapping.Basemap;
					public static createImageryWithLabelsVector(): com.esri.arcgisruntime.mapping.Basemap;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
					public constructor(param0: com.esri.arcgisruntime.layers.Layer);
					public getUnknownJson(): java.util.Map<string,any>;
					public static createNationalGeographic(): com.esri.arcgisruntime.mapping.Basemap;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public static createOceans(): com.esri.arcgisruntime.mapping.Basemap;
					public static createTopographic(): com.esri.arcgisruntime.mapping.Basemap;
					public static createTopographicVector(): com.esri.arcgisruntime.mapping.Basemap;
					public loadAsync(): void;
					public constructor();
					public static createImagery(): com.esri.arcgisruntime.mapping.Basemap;
					public toJson(): string;
					public static createImageryWithLabels(): com.esri.arcgisruntime.mapping.Basemap;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.layers.Layer>, param1: java.lang.Iterable<com.esri.arcgisruntime.layers.Layer>);
					public static createTerrainWithLabelsVector(): com.esri.arcgisruntime.mapping.Basemap;
					public static createNavigationVector(): com.esri.arcgisruntime.mapping.Basemap;
					public static createTerrainWithLabels(): com.esri.arcgisruntime.mapping.Basemap;
					public cancelLoad(): void;
					public static createOpenStreetMap(): com.esri.arcgisruntime.mapping.Basemap;
					public static createStreetsWithReliefVector(): com.esri.arcgisruntime.mapping.Basemap;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public static createLightGrayCanvas(): com.esri.arcgisruntime.mapping.Basemap;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public setName(param0: string): void;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public static createStreets(): com.esri.arcgisruntime.mapping.Basemap;
					public copy(): com.esri.arcgisruntime.mapping.Basemap;
					public static createLightGrayCanvasVector(): com.esri.arcgisruntime.mapping.Basemap;
					public retryLoadAsync(): void;
					public getReferenceLayers(): com.esri.arcgisruntime.mapping.LayerList;
					public getName(): string;
					public static createDarkGrayCanvasVector(): com.esri.arcgisruntime.mapping.Basemap;
					public static createStreetsVector(): com.esri.arcgisruntime.mapping.Basemap;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBasemap;
					public static createStreetsNightVector(): com.esri.arcgisruntime.mapping.Basemap;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public getBaseLayers(): com.esri.arcgisruntime.mapping.LayerList;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreBasemap): com.esri.arcgisruntime.mapping.Basemap;
				}
				export module Basemap {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Basemap.Type>;
						public static DARK_GRAY_CANVAS_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static IMAGERY: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static IMAGERY_WITH_LABELS: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static IMAGERY_WITH_LABELS_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static LIGHT_GRAY_CANVAS: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static LIGHT_GRAY_CANVAS_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static NATIONAL_GEOGRAPHIC: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static NAVIGATION_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static OCEANS: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static OPEN_STREET_MAP: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static STREETS: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static STREETS_NIGHT_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static STREETS_WITH_RELIEF_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static STREETS_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static TOPOGRAPHIC: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static TERRAIN_WITH_LABELS: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static TERRAIN_WITH_LABELS_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static TOPOGRAPHIC_VECTOR: com.esri.arcgisruntime.mapping.Basemap.Type;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.Basemap.Type;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.Basemap.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class Bookmark {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Bookmark>;
					public getViewpoint(): com.esri.arcgisruntime.mapping.Viewpoint;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBookmark;
					public constructor(param0: string, param1: com.esri.arcgisruntime.mapping.Viewpoint);
					public constructor();
					public setViewpoint(param0: com.esri.arcgisruntime.mapping.Viewpoint): void;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreBookmark): com.esri.arcgisruntime.mapping.Bookmark;
					public copy(): com.esri.arcgisruntime.mapping.Bookmark;
					public setName(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class BookmarkList extends com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.Bookmark> {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.BookmarkList>;
					public addAll(param0: java.util.Collection<any>): boolean;
					public subList(param0: number, param1: number): java.util.List<com.esri.arcgisruntime.mapping.Bookmark>;
					public isEmpty(): boolean;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public set(param0: number, param1: com.esri.arcgisruntime.mapping.Bookmark): com.esri.arcgisruntime.mapping.Bookmark;
					public listIterator(): java.util.ListIterator<com.esri.arcgisruntime.mapping.Bookmark>;
					public size(): number;
					public lastIndexOf(param0: any): number;
					public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.Bookmark>): boolean;
					public listIterator(param0: number): java.util.ListIterator<com.esri.arcgisruntime.mapping.Bookmark>;
					public add(param0: com.esri.arcgisruntime.mapping.Bookmark): boolean;
					public get(param0: number): com.esri.arcgisruntime.mapping.Bookmark;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public toArray(): native.Array<any>;
					public clear(): void;
					public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
					public iterator(): java.util.Iterator<com.esri.arcgisruntime.mapping.Bookmark>;
					public contains(param0: any): boolean;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public add(param0: number, param1: com.esri.arcgisruntime.mapping.Bookmark): void;
					public addAll(param0: number, param1: java.util.Collection<any>): boolean;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public indexOf(param0: any): number;
					public remove(param0: number): com.esri.arcgisruntime.mapping.Bookmark;
					public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.Bookmark>): void;
					public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export abstract class ElevationSource implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ElevationSource>;
					public setEnabled(param0: boolean): void;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public getUri(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElevationSource);
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public setName(param0: string): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getName(): string;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public isEnabled(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreElevationSource;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class Expiration {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Expiration>;
					public getDateTime(): java.util.Calendar;
					public getType(): com.esri.arcgisruntime.mapping.ExpirationType;
					public isExpired(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreExpiration): com.esri.arcgisruntime.mapping.Expiration;
					public getMessage(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreExpiration;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class ExpirationType {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ExpirationType>;
					public static ALLOW_EXPIRED_ACCESS: com.esri.arcgisruntime.mapping.ExpirationType;
					public static PREVENT_EXPIRED_ACCESS: com.esri.arcgisruntime.mapping.ExpirationType;
					public static values(): native.Array<com.esri.arcgisruntime.mapping.ExpirationType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.mapping.ExpirationType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class GeoElement {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.GeoElement>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.mapping.GeoElement interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAttributes(): java.util.Map<string,any>;
						getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
					});
					public constructor();
					public computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
					public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public getAttributes(): java.util.Map<string,any>;
					public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export abstract class Item extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Item>;
					public mTags: java.util.List<string>;
					public getTitle(): string;
					public setDescription(param0: string): void;
					public fetchThumbnailAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setTitle(param0: string): void;
					public getTermsOfUse(): string;
					public getTypeKeywords(): java.util.List<string>;
					public setSnippet(param0: string): void;
					/** @deprecated */
					public setExtent(param0: number, param1: number, param2: number, param3: number): void;
					public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public setAccessInformation(param0: string): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreItem;
					public getSnippet(): string;
					public fetchData(): java.io.InputStream;
					public loadAsync(): void;
					public constructor();
					public getTags(): java.util.List<string>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
					public fetchDataAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.io.InputStream>;
					public getItemId(): string;
					public setCoreItem(param0: com.esri.arcgisruntime.internal.jni.CoreItem): void;
					public setExtent(param0: com.esri.arcgisruntime.geometry.Envelope): void;
					public setThumbnailData(param0: native.Array<number>): void;
					public updateItemPropertiesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public cancelLoad(): void;
					public getModified(): java.util.Calendar;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getSpatialReferenceName(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getCreated(): java.util.Calendar;
					public retryLoadAsync(): void;
					public getName(): string;
					public getAccessInformation(): string;
					public getThumbnailData(): native.Array<number>;
					public setTermsOfUse(param0: string): void;
					public getDescription(): string;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class ItemResourceCache extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.ItemResourceCache>;
					public constructor(param0: string);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreItemResourceCache): com.esri.arcgisruntime.mapping.ItemResourceCache;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreItemResourceCache;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getPath(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getItem(): com.esri.arcgisruntime.mapping.LocalItem;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class LayerList extends com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.layers.Layer> {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.LayerList>;
					public addAll(param0: java.util.Collection<any>): boolean;
					public iterator(): java.util.Iterator<com.esri.arcgisruntime.layers.Layer>;
					public isEmpty(): boolean;
					public containsAll(param0: java.util.Collection<any>): boolean;
					public remove(param0: number): com.esri.arcgisruntime.layers.Layer;
					public get(param0: number): com.esri.arcgisruntime.layers.Layer;
					public size(): number;
					public lastIndexOf(param0: any): number;
					public toArray(param0: native.Array<any>): native.Array<any>;
					public toArray(): native.Array<any>;
					public clear(): void;
					public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
					public add(param0: com.esri.arcgisruntime.layers.Layer): boolean;
					public contains(param0: any): boolean;
					public remove(param0: any): boolean;
					public removeAll(param0: java.util.Collection<any>): boolean;
					public set(param0: number, param1: com.esri.arcgisruntime.layers.Layer): com.esri.arcgisruntime.layers.Layer;
					public addAll(param0: number, param1: java.util.Collection<any>): boolean;
					public retainAll(param0: java.util.Collection<any>): boolean;
					public indexOf(param0: any): number;
					public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.layers.Layer>): boolean;
					public listIterator(): java.util.ListIterator<com.esri.arcgisruntime.layers.Layer>;
					public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.layers.Layer>): void;
					public listIterator(param0: number): java.util.ListIterator<com.esri.arcgisruntime.layers.Layer>;
					public subList(param0: number, param1: number): java.util.List<com.esri.arcgisruntime.layers.Layer>;
					public add(param0: number, param1: com.esri.arcgisruntime.layers.Layer): void;
					public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class LoadSettings {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.LoadSettings>;
					public getPreferredPolygonFeatureRenderingMode(): com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
					public setPreferredPointFeatureRenderingMode(param0: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLoadSettings): com.esri.arcgisruntime.mapping.LoadSettings;
					public getPreferredPointFeatureRenderingMode(): com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
					public constructor();
					public setPreferredPolylineFeatureRenderingMode(param0: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode): void;
					public isUseAdvancedSymbology(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLoadSettings;
					public getPreferredPolylineFeatureRenderingMode(): com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode;
					public setPreferredPolygonFeatureRenderingMode(param0: com.esri.arcgisruntime.layers.FeatureLayer.RenderingMode): void;
					public setUseAdvancedSymbology(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class LocalItem extends com.esri.arcgisruntime.mapping.Item {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.LocalItem>;
					public fetchThumbnailAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setThumbnailData(param0: native.Array<number>): void;
					public updateItemPropertiesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public cancelLoad(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocalItem;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocalItem): com.esri.arcgisruntime.mapping.LocalItem;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public getPortalUrl(): string;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getPath(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreItem;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public fetchData(): java.io.InputStream;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getThumbnailData(): native.Array<number>;
					public fetchDataAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.io.InputStream>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public getType(): com.esri.arcgisruntime.mapping.LocalItem.Type;
					public getOriginalPortalItemID(): string;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module LocalItem {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.LocalItem.Type>;
						public static UNKNOWN: com.esri.arcgisruntime.mapping.LocalItem.Type;
						public static MOBILE_MAP: com.esri.arcgisruntime.mapping.LocalItem.Type;
						public static MOBILE_SCENE: com.esri.arcgisruntime.mapping.LocalItem.Type;
						public static MOBILE_MAP_PACKAGE: com.esri.arcgisruntime.mapping.LocalItem.Type;
						public static MOBILE_SCENE_PACKAGE: com.esri.arcgisruntime.mapping.LocalItem.Type;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.LocalItem.Type>;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.LocalItem.Type;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class MobileMapPackage extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.MobileMapPackage>;
					public getVersion(): string;
					public constructor(param0: string);
					/** @deprecated */
					public static isDirectReadSupportedAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public getPath(): string;
					public getMaps(): java.util.List<com.esri.arcgisruntime.mapping.ArcGISMap>;
					public getLocatorTask(): com.esri.arcgisruntime.tasks.geocode.LocatorTask;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getExpiration(): com.esri.arcgisruntime.mapping.Expiration;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMobileMapPackage): com.esri.arcgisruntime.mapping.MobileMapPackage;
					public static unpackAsync(param0: string, param1: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public close(): void;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class MobileScenePackage extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.MobileScenePackage>;
					public getVersion(): string;
					public constructor(param0: string);
					/** @deprecated */
					public static isDirectReadSupportedAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getScenes(): java.util.List<com.esri.arcgisruntime.mapping.ArcGISScene>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMobileScenePackage): com.esri.arcgisruntime.mapping.MobileScenePackage;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getItem(): com.esri.arcgisruntime.mapping.Item;
					public getPath(): string;
					public getLocatorTask(): com.esri.arcgisruntime.tasks.geocode.LocatorTask;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getExpiration(): com.esri.arcgisruntime.mapping.Expiration;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public static unpackAsync(param0: string, param1: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public close(): void;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class NavigationConstraint {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.NavigationConstraint>;
					public static NONE: com.esri.arcgisruntime.mapping.NavigationConstraint;
					public static STAY_ABOVE: com.esri.arcgisruntime.mapping.NavigationConstraint;
					public static valueOf(param0: string): com.esri.arcgisruntime.mapping.NavigationConstraint;
					public static values(): native.Array<com.esri.arcgisruntime.mapping.NavigationConstraint>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class OfflineSettings {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.OfflineSettings>;
					public getReturnLayerAttachmentOption(): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineSettings): com.esri.arcgisruntime.mapping.OfflineSettings;
					public getAttachmentSyncDirection(): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
					public getReferenceBasemapFilename(): string;
					public getReturnSchemaOnlyForEditableLayers(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class RasterElevationSource extends com.esri.arcgisruntime.mapping.ElevationSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.RasterElevationSource>;
					public constructor(param0: java.lang.Iterable<string>);
					public getFilePaths(): java.util.List<string>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getUri(): string;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreElevationSource);
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRasterElevationSource): com.esri.arcgisruntime.mapping.RasterElevationSource;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getFullExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class SelectionProperties {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.SelectionProperties>;
					public setColor(param0: number): void;
					public getColor(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSelectionProperties): com.esri.arcgisruntime.mapping.SelectionProperties;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSelectionProperties;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class Surface extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Surface>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getElevationExaggeration(): number;
					public setOpacity(param0: number): void;
					public getNavigationConstraint(): com.esri.arcgisruntime.mapping.NavigationConstraint;
					public loadAsync(): void;
					public constructor();
					public setElevationExaggeration(param0: number): void;
					public getElevationSources(): com.esri.arcgisruntime.mapping.Surface.ElevationSourceList;
					public setBackgroundGrid(param0: com.esri.arcgisruntime.mapping.view.BackgroundGrid): void;
					public isEnabled(): boolean;
					public getOpacity(): number;
					public setEnabled(param0: boolean): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSurface): com.esri.arcgisruntime.mapping.Surface;
					public cancelLoad(): void;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.mapping.ElevationSource>);
					public setNavigationConstraint(param0: com.esri.arcgisruntime.mapping.NavigationConstraint): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public setName(param0: string): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public retryLoadAsync(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSurface;
					public getName(): string;
					public getBackgroundGrid(): com.esri.arcgisruntime.mapping.view.BackgroundGrid;
					public getElevationAsync(param0: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Double>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module Surface {
					export class ElevationSourceList extends com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.ElevationSource> {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Surface.ElevationSourceList>;
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
						public get(param0: number): com.esri.arcgisruntime.mapping.ElevationSource;
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.ElevationSource>): boolean;
						public iterator(): java.util.Iterator<com.esri.arcgisruntime.mapping.ElevationSource>;
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.ElevationSource>): void;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public isEmpty(): boolean;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public set(param0: number, param1: com.esri.arcgisruntime.mapping.ElevationSource): com.esri.arcgisruntime.mapping.ElevationSource;
						public contains(param0: any): boolean;
						public lastIndexOf(param0: any): number;
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
						public listIterator(): java.util.ListIterator<com.esri.arcgisruntime.mapping.ElevationSource>;
						public remove(param0: any): boolean;
						public subList(param0: number, param1: number): java.util.List<com.esri.arcgisruntime.mapping.ElevationSource>;
						public add(param0: number, param1: com.esri.arcgisruntime.mapping.ElevationSource): void;
						public indexOf(param0: any): number;
						public add(param0: com.esri.arcgisruntime.mapping.ElevationSource): boolean;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public listIterator(param0: number): java.util.ListIterator<com.esri.arcgisruntime.mapping.ElevationSource>;
						public remove(param0: number): com.esri.arcgisruntime.mapping.ElevationSource;
						public toArray(): native.Array<any>;
						public containsAll(param0: java.util.Collection<any>): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class TimeExtent {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.TimeExtent>;
					public static MIN_CALENDAR: java.util.Calendar;
					public static MAX_CALENDAR: java.util.Calendar;
					public constructor(param0: java.util.Calendar);
					public constructor(param0: java.util.Calendar, param1: java.util.Calendar);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTimeExtent;
					public getEndTime(): java.util.Calendar;
					public getStartTime(): java.util.Calendar;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTimeExtent): com.esri.arcgisruntime.mapping.TimeExtent;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class TimeValue {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.TimeValue>;
					public getTimeUnit(): com.esri.arcgisruntime.arcgisservices.TimeUnit;
					public getDuration(): number;
					public constructor(param0: number, param1: com.esri.arcgisruntime.arcgisservices.TimeUnit);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTimeValue): com.esri.arcgisruntime.mapping.TimeValue;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTimeValue;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export class Viewpoint extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Viewpoint>;
					public toJson(): string;
					public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.mapping.view.Camera);
					public static fromJson(param0: string): com.esri.arcgisruntime.mapping.Viewpoint;
					public getCamera(): com.esri.arcgisruntime.mapping.view.Camera;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number);
					public getType(): com.esri.arcgisruntime.mapping.Viewpoint.Type;
					public getUnknownJson(): java.util.Map<string,any>;
					public getTargetGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public getTargetScale(): number;
					public constructor(param0: com.esri.arcgisruntime.geometry.Envelope, param1: number, param2: com.esri.arcgisruntime.mapping.view.Camera);
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: com.esri.arcgisruntime.mapping.view.Camera);
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: com.esri.arcgisruntime.mapping.view.Camera);
					public getRotation(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreViewpoint;
					public constructor(param0: com.esri.arcgisruntime.geometry.Envelope, param1: com.esri.arcgisruntime.mapping.view.Camera);
					public constructor(param0: com.esri.arcgisruntime.geometry.Envelope);
					public constructor(param0: number, param1: number, param2: number);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreViewpoint): com.esri.arcgisruntime.mapping.Viewpoint;
					public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number);
					public constructor(param0: com.esri.arcgisruntime.geometry.Envelope, param1: number);
				}
				export module Viewpoint {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.Viewpoint.Type>;
						public static CENTER_AND_SCALE: com.esri.arcgisruntime.mapping.Viewpoint.Type;
						public static BOUNDING_GEOMETRY: com.esri.arcgisruntime.mapping.Viewpoint.Type;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.Viewpoint.Type;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.Viewpoint.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class FeatureTypeChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.FeatureTypeChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.popup.PopupManager);
						public getSource(): com.esri.arcgisruntime.mapping.popup.PopupManager;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class FeatureTypeChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.FeatureTypeChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.popup.FeatureTypeChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							featureTypeChanged(param0: com.esri.arcgisruntime.mapping.popup.FeatureTypeChangedEvent): void;
						});
						public constructor();
						public featureTypeChanged(param0: com.esri.arcgisruntime.mapping.popup.FeatureTypeChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class GeoElementValidityChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.GeoElementValidityChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.popup.PopupManager);
						public getSource(): com.esri.arcgisruntime.mapping.popup.PopupManager;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class GeoElementValidityChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.GeoElementValidityChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.popup.GeoElementValidityChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							geoElementValidityChanged(param0: com.esri.arcgisruntime.mapping.popup.GeoElementValidityChangedEvent): void;
						});
						public constructor();
						public geoElementValidityChanged(param0: com.esri.arcgisruntime.mapping.popup.GeoElementValidityChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class Popup {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.Popup>;
						public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
						public constructor(param0: com.esri.arcgisruntime.mapping.GeoElement);
						public constructor(param0: com.esri.arcgisruntime.mapping.GeoElement, param1: com.esri.arcgisruntime.mapping.popup.PopupDefinition);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopup): com.esri.arcgisruntime.mapping.popup.Popup;
						public getFormattedValue(param0: com.esri.arcgisruntime.mapping.popup.PopupField): string;
						public getGeoElement(): com.esri.arcgisruntime.mapping.GeoElement;
						public getDescription(): string;
						public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public getTitle(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupAttachment extends com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupAttachment>;
						public isLocal(): boolean;
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public getAttachment(): com.esri.arcgisruntime.data.Attachment;
						public retryLoadAsync(): void;
						public getName(): string;
						public getType(): com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type;
						public createFullImageAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<globalAndroid.graphics.Bitmap>;
						public constructor(param0: com.esri.arcgisruntime.data.Attachment);
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public constructor(param0: native.Array<number>, param1: string, param2: string);
						public getSize(): number;
						public getFilePath(): string;
						public getContentType(): string;
						public setEditState(param0: com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState): void;
						public createThumbnailAsync(param0: number, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<globalAndroid.graphics.Bitmap>;
						public setAttachment(param0: com.esri.arcgisruntime.data.Attachment): void;
						public getEditState(): com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState;
						public loadAsync(): void;
					}
					export module PopupAttachment {
						export class EditState {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState>;
							public static ORIGINAL: com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState;
							public static ADDED: com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState;
							public static DELETED: com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupAttachment.EditState>;
						}
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type>;
							public static IMAGE: com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type;
							public static VIDEO: com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type;
							public static DOCUMENT: com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type;
							public static OTHER: com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type>;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupAttachment.Type;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupAttachmentManager {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupAttachmentManager>;
						public constructor(param0: com.esri.arcgisruntime.data.ArcGISFeature);
						public deleteAttachment(param0: com.esri.arcgisruntime.mapping.popup.PopupAttachment): void;
						public filterAttachments(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupAttachment>;
						public revertChanges(): void;
						public addAttachment(param0: string, param1: globalAndroid.graphics.Bitmap, param2: globalAndroid.graphics.Bitmap.CompressFormat): com.esri.arcgisruntime.mapping.popup.PopupAttachment;
						public fetchAttachmentsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.popup.PopupAttachment>>;
						public getAttachments(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupAttachment>;
						public addAttachment(param0: string, param1: string, param2: java.io.InputStream): com.esri.arcgisruntime.mapping.popup.PopupAttachment;
						public applyChangesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupDefinition {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupDefinition>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupDefinition): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
						public setAllowEdit(param0: boolean): void;
						/** @deprecated */
						public setShowRelatedRecords(param0: boolean): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupDefinition;
						public getMedia(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupMedia>;
						/** @deprecated */
						public isShowRelatedRecords(): boolean;
						public isAllowEdit(): boolean;
						public getExpressions(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupExpression>;
						public getFields(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupField>;
						public getRelatedFeaturesDefinition(): com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesDefinition;
						public setShowEditSummary(param0: boolean): void;
						public isShowEditSummary(): boolean;
						public setShowAttachments(param0: boolean): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.mapping.GeoElement);
						public isShowAttachments(): boolean;
						public isAllowDelete(): boolean;
						public isAllowEditGeometry(): boolean;
						public setDescription(param0: string): void;
						public getTitle(): string;
						public setAllowDelete(param0: boolean): void;
						public setTitle(param0: string): void;
						public setAllowEditGeometry(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.mapping.popup.PopupSource);
						public getDescription(): string;
						public setRelatedFeaturesDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesDefinition): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupExpression {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupExpression>;
						public setExpression(param0: string): void;
						public constructor();
						public setTitle(param0: string): void;
						public setReturnType(param0: com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType): void;
						public setName(param0: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupExpression;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupExpression): com.esri.arcgisruntime.mapping.popup.PopupExpression;
						public getExpression(): string;
						public getReturnType(): com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType;
						public getName(): string;
						public getTitle(): string;
					}
					export module PopupExpression {
						export class ReturnType {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType>;
							public static STRING: com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType;
							public static NUMBER: com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupExpression.ReturnType>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupField {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupField>;
						public constructor();
						public setFieldName(param0: string): void;
						public setStringFieldOption(param0: com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption): void;
						public setPopupFieldFormat(param0: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat): void;
						public getLabel(): string;
						public getFormat(): com.esri.arcgisruntime.mapping.popup.PopupFieldFormat;
						public getStringFieldOption(): com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption;
						public setEditable(param0: boolean): void;
						public getFieldName(): string;
						public setTooltip(param0: string): void;
						public getTooltip(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupField): com.esri.arcgisruntime.mapping.popup.PopupField;
						public setLabel(param0: string): void;
						public isEditable(): boolean;
						public isVisible(): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupField;
						public setVisible(param0: boolean): void;
					}
					export module PopupField {
						export class StringFieldOption {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption>;
							public static SINGLE_LINE: com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption;
							public static MULTI_LINE: com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption;
							public static RICH_TEXT: com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption;
							public static UNKNOWN: com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption>;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupField.StringFieldOption;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupFieldFormat {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupFieldFormat>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupFieldFormat): com.esri.arcgisruntime.mapping.popup.PopupFieldFormat;
						public constructor();
						public getDecimalPlaces(): number;
						public setDateFormat(param0: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat): void;
						public isUseThousandsSeparator(): boolean;
						public setDecimalPlaces(param0: number): void;
						public getDateFormat(): com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
						public setUseThousandsSeparator(param0: boolean): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupFieldFormat;
					}
					export module PopupFieldFormat {
						export class DateFormat {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat>;
							public static DAY_SHORT_MONTH_YEAR: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static LONG_DATE: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static LONG_MONTH_DAY_YEAR: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static LONG_MONTH_YEAR: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_LE: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_LE_LONG_TIME: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_LE_LONG_TIME_24: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_LE_SHORT_TIME: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_LE_SHORT_TIME_24: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_LONG_TIME: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_LONG_TIME_24: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_SHORT_TIME: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_DATE_SHORT_TIME_24: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static SHORT_MONTH_YEAR: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static YEAR: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static UNKNOWN: com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat>;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupFieldFormat.DateFormat;
							public getFormatter(): java.text.DateFormat;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupManager {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupManager>;
						public substitute(param0: string): string;
						public getMaxLength(param0: com.esri.arcgisruntime.mapping.popup.PopupField): number;
						public isNullable(param0: com.esri.arcgisruntime.mapping.popup.PopupField): boolean;
						public isShowMedia(): boolean;
						public getPopup(): com.esri.arcgisruntime.mapping.popup.Popup;
						/** @deprecated */
						public getRelatedRecords(): string;
						public getFormattedValue(param0: com.esri.arcgisruntime.mapping.popup.PopupField): string;
						public getFieldValue(param0: com.esri.arcgisruntime.mapping.popup.PopupField): any;
						public getFieldLabel(param0: com.esri.arcgisruntime.mapping.popup.PopupField): string;
						public getAttachmentManager(): com.esri.arcgisruntime.mapping.popup.PopupAttachmentManager;
						public getValidationError(param0: com.esri.arcgisruntime.mapping.popup.PopupField): com.esri.arcgisruntime.ArcGISRuntimeException;
						public isAllowEdit(): boolean;
						public updateValue(param0: any, param1: com.esri.arcgisruntime.mapping.popup.PopupField): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getValidationWarning(param0: com.esri.arcgisruntime.mapping.popup.PopupField): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getFeatureTypes(): java.util.List<com.esri.arcgisruntime.data.FeatureType>;
						public getFieldType(param0: com.esri.arcgisruntime.mapping.popup.PopupField): com.esri.arcgisruntime.data.Field.Type;
						public getRangeDomainValidationText(param0: com.esri.arcgisruntime.mapping.popup.PopupField): string;
						public getDomain(param0: com.esri.arcgisruntime.mapping.popup.PopupField): com.esri.arcgisruntime.data.Domain;
						public constructor(param0: globalAndroid.content.Context, param1: com.esri.arcgisruntime.mapping.popup.Popup);
						public finishEditingAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.ArcGISRuntimeException>;
						public isShowEditSummary(): boolean;
						public getField(param0: com.esri.arcgisruntime.mapping.popup.PopupField): com.esri.arcgisruntime.data.Field;
						public getCustomHtmlDescription(): string;
						public getEditableFields(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupField>;
						public doesChangeRequireNotification(param0: com.esri.arcgisruntime.data.FeatureTemplate): boolean;
						public isAllowDelete(): boolean;
						public isShowAttachments(): boolean;
						public isEditing(): boolean;
						public isGeoElementValid(): boolean;
						public startEditing(): boolean;
						public isAllowEditGeometry(): boolean;
						public setGeoElementValidityChangedListener(param0: com.esri.arcgisruntime.mapping.popup.GeoElementValidityChangedListener): void;
						public setFeatureTypeChangedListener(param0: com.esri.arcgisruntime.mapping.popup.FeatureTypeChangedListener): void;
						public getField(param0: string): com.esri.arcgisruntime.data.Field;
						public updateValue(param0: com.esri.arcgisruntime.data.FeatureTemplate, param1: com.esri.arcgisruntime.mapping.popup.PopupManager.FeatureTypeChangeMode): com.esri.arcgisruntime.ArcGISRuntimeException;
						public isShowCustomHtmlDescription(): boolean;
						public getTitle(): string;
						public getEditInfo(): com.esri.arcgisruntime.arcgisservices.EditFieldsInfo;
						public cancelEditing(): void;
						public isFeatureType(param0: com.esri.arcgisruntime.mapping.popup.PopupField): boolean;
						public getDisplayedFields(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupField>;
						public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						/** @deprecated */
						public isShowRelatedRecords(param0: com.esri.arcgisruntime.mapping.ArcGISMap): boolean;
						public getEditSummary(): string;
					}
					export module PopupManager {
						export class FeatureTypeChangeMode {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupManager.FeatureTypeChangeMode>;
							public static RESET_TO_DEFAULTS: com.esri.arcgisruntime.mapping.popup.PopupManager.FeatureTypeChangeMode;
							public static KEEP_VALUES: com.esri.arcgisruntime.mapping.popup.PopupManager.FeatureTypeChangeMode;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupManager.FeatureTypeChangeMode;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupManager.FeatureTypeChangeMode>;
						}
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupManager.a>;
							public static b: com.esri.arcgisruntime.mapping.popup.PopupManager.a;
							public static c: com.esri.arcgisruntime.mapping.popup.PopupManager.a;
							public static d: com.esri.arcgisruntime.mapping.popup.PopupManager.a;
							public static e: com.esri.arcgisruntime.mapping.popup.PopupManager.a;
							public a(): number;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupManager.a>;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupManager.a;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupMedia {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupMedia>;
						public constructor();
						public setTitle(param0: string): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupMedia): com.esri.arcgisruntime.mapping.popup.PopupMedia;
						public setType(param0: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type): void;
						public setCaption(param0: string): void;
						public getCaption(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupMedia;
						public getType(): com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
						public getValue(): com.esri.arcgisruntime.mapping.popup.PopupMediaValue;
						public setValue(param0: com.esri.arcgisruntime.mapping.popup.PopupMediaValue): void;
						public getTitle(): string;
					}
					export module PopupMedia {
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupMedia.Type>;
							public static IMAGE: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
							public static BAR_CHART: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
							public static COLUMN_CHART: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
							public static LINE_CHART: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
							public static PIE_CHART: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
							public static UNKNOWN: com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.popup.PopupMedia.Type>;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.popup.PopupMedia.Type;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupMediaValue {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupMediaValue>;
						public constructor();
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupMediaValue): com.esri.arcgisruntime.mapping.popup.PopupMediaValue;
						public setLinkUrl(param0: string): void;
						public setNormalizeFieldName(param0: string): void;
						public getTooltipFieldName(): string;
						public getSourceUrl(): string;
						public setSourceUrl(param0: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupMediaValue;
						public getFieldNames(): java.util.List<string>;
						public getNormalizeFieldName(): string;
						public setTooltipFieldName(param0: string): void;
						public getLinkUrl(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupRelatedFeaturesDefinition {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesDefinition>;
						public getSortOrder(): java.util.List<com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesSortOrder>;
						public constructor();
						public isShowRelatedFeatures(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesDefinition): com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesDefinition;
						public setShowRelatedFeatures(param0: boolean): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesDefinition;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupRelatedFeaturesSortOrder {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesSortOrder>;
						public constructor();
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesSortOrder): com.esri.arcgisruntime.mapping.popup.PopupRelatedFeaturesSortOrder;
						public setOrderByField(param0: com.esri.arcgisruntime.data.QueryParameters.OrderBy): void;
						public getRelationshipId(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePopupRelatedFeaturesSortOrder;
						public getOrderByField(): com.esri.arcgisruntime.data.QueryParameters.OrderBy;
						public setRelationshipId(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module popup {
					export class PopupSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.popup.PopupSource>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.popup.PopupSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
							setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
							isPopupEnabled(): boolean;
							setPopupEnabled(param0: boolean): void;
						});
						public constructor();
						public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
						public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
						public setPopupEnabled(param0: boolean): void;
						public isPopupEnabled(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class AnalysisOverlay {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.AnalysisOverlay>;
						public constructor();
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreAnalysisOverlay): com.esri.arcgisruntime.mapping.view.AnalysisOverlay;
						public isVisible(): boolean;
						public setVisible(param0: boolean): void;
						public getAnalyses(): java.util.List<com.esri.arcgisruntime.geoanalysis.Analysis>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAnalysisOverlay;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class AnimationCurve {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.AnimationCurve>;
						public static LINEAR: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_QUAD: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_OUT_QUAD: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_OUT_QUAD: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_CUBIC: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_OUT_CUBIC: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_OUT_CUBIC: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_QUART: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_OUT_QUART: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_OUT_QUART: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_QUINT: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_OUT_QUINT: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_OUT_QUINT: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_SINE: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_OUT_SINE: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_OUT_SINE: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_EXPO: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_OUT_EXPO: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_OUT_EXPO: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_CIRC: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_OUT_CIRC: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static EASE_IN_OUT_CIRC: com.esri.arcgisruntime.mapping.view.AnimationCurve;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.AnimationCurve>;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.AnimationCurve;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class AtmosphereEffect {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.AtmosphereEffect>;
						public static NONE: com.esri.arcgisruntime.mapping.view.AtmosphereEffect;
						public static HORIZON_ONLY: com.esri.arcgisruntime.mapping.view.AtmosphereEffect;
						public static REALISTIC: com.esri.arcgisruntime.mapping.view.AtmosphereEffect;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.AtmosphereEffect;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.AtmosphereEffect>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class AttributionTextChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.AttributionTextChangedEvent>;
						public getAttributionText(): string;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView);
						public getSource(): com.esri.arcgisruntime.mapping.view.GeoView;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class AttributionTextChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							attributionTextChanged(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedEvent): void;
						});
						public constructor();
						public attributionTextChanged(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class BackgroundGrid {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.BackgroundGrid>;
						public getColor(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid;
						public constructor();
						public setGridLineWidth(param0: number): void;
						public setColor(param0: number): void;
						public constructor(param0: number, param1: number, param2: number, param3: number);
						public getGridLineColor(): number;
						public isVisible(): boolean;
						public setGridLineColor(param0: number): void;
						public setGridSize(param0: number): void;
						public getGridLineWidth(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreBackgroundGrid): com.esri.arcgisruntime.mapping.view.BackgroundGrid;
						public setVisible(param0: boolean): void;
						public getGridSize(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class Callout {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Callout>;
						public isPassTouchEventsToMapView(): boolean;
						public show(param0: globalAndroid.view.View, param1: com.esri.arcgisruntime.mapping.GeoElement, param2: com.esri.arcgisruntime.geometry.Point): void;
						public dismiss(): void;
						public setContent(param0: globalAndroid.view.View): void;
						public getLocation(): com.esri.arcgisruntime.geometry.Point;
						public getShowOptions(): com.esri.arcgisruntime.mapping.view.Callout.ShowOptions;
						public getTapLocation(): com.esri.arcgisruntime.geometry.Point;
						public refresh(): void;
						public getContent(): globalAndroid.view.View;
						public setStyle(param0: com.esri.arcgisruntime.mapping.view.Callout.Style): void;
						public show(): void;
						public getGeoElement(): com.esri.arcgisruntime.mapping.GeoElement;
						public setLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
						public getStyle(): com.esri.arcgisruntime.mapping.view.Callout.Style;
						public setPassTouchEventsToMapView(param0: boolean): void;
						public show(param0: globalAndroid.view.View, param1: com.esri.arcgisruntime.geometry.Point): void;
						public setShowOptions(param0: com.esri.arcgisruntime.mapping.view.Callout.ShowOptions): void;
						public isShowing(): boolean;
						public setGeoElement(param0: com.esri.arcgisruntime.mapping.GeoElement, param1: com.esri.arcgisruntime.geometry.Point): void;
					}
					export module Callout {
						export class ShowOptions {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Callout.ShowOptions>;
							public constructor();
							public isAnimateRecenter(): boolean;
							public isRecenterMap(): boolean;
							public isAnimateCallout(): boolean;
							public setAnimateCallout(param0: boolean): void;
							public setAnimateRecenter(param0: boolean): void;
							public setRecenterMap(param0: boolean): void;
							public constructor(param0: boolean, param1: boolean, param2: boolean);
						}
						export class Style {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Callout.Style>;
							public getBorderWidth(): number;
							public getLeaderLength(): number;
							public setMinHeight(param0: number): void;
							public setMinWidth(param0: number): void;
							public setBorderColor(param0: number): void;
							public setCornerRadius(param0: number): void;
							public setLeaderWidth(param0: number): void;
							public getMinHeight(): number;
							public getMinWidth(): number;
							public getLeaderPosition(): com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
							public getLeaderWidth(): number;
							public constructor(param0: globalAndroid.content.Context, param1: number);
							public getCornerRadius(): number;
							public getBorderColor(): number;
							public getMaxWidth(): number;
							public setLeaderLength(param0: number): void;
							public setLeaderPosition(param0: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition): void;
							public getMaxHeight(): number;
							public setBackgroundColor(param0: number): void;
							public getBackgroundColor(): number;
							public setBorderWidth(param0: number): void;
							public setMaxHeight(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
							public setMaxWidth(param0: number): void;
						}
						export module Style {
							export class LeaderPosition {
								public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition>;
								public static UPPER_LEFT_CORNER: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static UPPER_MIDDLE: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static UPPER_RIGHT_CORNER: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static RIGHT_MIDDLE: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static LOWER_RIGHT_CORNER: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static LOWER_MIDDLE: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static LOWER_LEFT_CORNER: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static LEFT_MIDDLE: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static AUTOMATIC: com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition;
								public static values(): native.Array<com.esri.arcgisruntime.mapping.view.Callout.Style.LeaderPosition>;
							}
						}
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Callout.a>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.Callout, param1: globalAndroid.graphics.drawable.shapes.Shape, param2: number, param3: number, param4: number);
							public onDraw(param0: globalAndroid.graphics.drawable.shapes.Shape, param1: globalAndroid.graphics.Canvas, param2: globalAndroid.graphics.Paint): void;
						}
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Callout.b>;
							public d(): void;
							public a(): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.Callout, param1: globalAndroid.content.Context);
							public onMeasure(param0: number, param1: number): void;
							public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
							public c(): void;
							public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
							public a(param0: globalAndroid.view.View): void;
							public b(): void;
						}
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Callout.c>;
							public static a: com.esri.arcgisruntime.mapping.view.Callout.c;
							public static b: com.esri.arcgisruntime.mapping.view.Callout.c;
							public static c: com.esri.arcgisruntime.mapping.view.Callout.c;
							public static d: com.esri.arcgisruntime.mapping.view.Callout.c;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.Callout.c>;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.Callout.c;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class Camera {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Camera>;
						public getRoll(): number;
						public getPitch(): number;
						public getLocation(): com.esri.arcgisruntime.geometry.Point;
						public elevate(param0: number): com.esri.arcgisruntime.mapping.view.Camera;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.TransformationMatrix);
						public getTransformationMatrix(): com.esri.arcgisruntime.mapping.view.TransformationMatrix;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number);
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: number);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreCamera): com.esri.arcgisruntime.mapping.view.Camera;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCamera;
						public moveToward(param0: com.esri.arcgisruntime.geometry.Point, param1: number): com.esri.arcgisruntime.mapping.view.Camera;
						public moveForward(param0: number): com.esri.arcgisruntime.mapping.view.Camera;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
						public rotateTo(param0: number, param1: number, param2: number): com.esri.arcgisruntime.mapping.view.Camera;
						public moveTo(param0: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.mapping.view.Camera;
						public getHeading(): number;
						public rotateAround(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number): com.esri.arcgisruntime.mapping.view.Camera;
						public zoomToward(param0: com.esri.arcgisruntime.geometry.Point, param1: number): com.esri.arcgisruntime.mapping.view.Camera;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export abstract class CameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.CameraController>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreCameraController);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCameraController;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class CameraDistanceChangedEvent<S>  extends java.util.EventObject {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.CameraDistanceChangedEvent<any>>;
						public constructor(param0: any);
						public getSource(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class CameraDistanceChangedListener<S>  extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<any>>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							cameraDistanceChanged(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedEvent<S>): void;
						});
						public constructor();
						public cameraDistanceChanged(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedEvent<S>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class CameraHeadingOffsetChangedEvent<S>  extends java.util.EventObject {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedEvent<any>>;
						public constructor(param0: any);
						public getSource(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class CameraHeadingOffsetChangedListener<S>  extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<any>>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							cameraHeadingOffsetChanged(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedEvent<S>): void;
						});
						public constructor();
						public cameraHeadingOffsetChanged(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedEvent<S>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class CameraPitchOffsetChangedEvent<S>  extends java.util.EventObject {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedEvent<any>>;
						public constructor(param0: any);
						public getSource(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class CameraPitchOffsetChangedListener<S>  extends java.lang.Object {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<any>>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							cameraPitchOffsetChanged(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedEvent<S>): void;
						});
						public constructor();
						public cameraPitchOffsetChanged(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedEvent<S>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class DefaultMapViewOnTouchListener extends com.esri.arcgisruntime.mapping.view.MapView.OnTouchListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DefaultMapViewOnTouchListener>;
						public static DOUBLE_TAP_TIMEOUT: number;
						public static LONG_PRESS_TIMEOUT: number;
						public static TAP_TIMEOUT: number;
						public static FLING_VELOCITY_THRESHOLD_DP: number;
						public mMapView: com.esri.arcgisruntime.mapping.view.MapView;
						public onDown(param0: globalAndroid.view.MotionEvent): boolean;
						public onScaleEnd(param0: globalAndroid.view.ScaleGestureDetector): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.esri.arcgisruntime.mapping.view.MapView);
						public onMultiPointerTap(param0: globalAndroid.view.MotionEvent): boolean;
						public onDoubleTap(param0: globalAndroid.view.MotionEvent): boolean;
						public onScaleBegin(param0: globalAndroid.view.ScaleGestureDetector): boolean;
						public onDoubleTouchDrag(param0: globalAndroid.view.MotionEvent): boolean;
						public onScale(param0: globalAndroid.view.ScaleGestureDetector): boolean;
						public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
						public onRotate(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
						public onSingleTapConfirmed(param0: globalAndroid.view.MotionEvent): boolean;
						public onShowPress(param0: globalAndroid.view.MotionEvent): void;
						public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
						public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
						public onDoubleTapEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onFling(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
						public onLongPress(param0: globalAndroid.view.MotionEvent): void;
						public onUp(param0: globalAndroid.view.MotionEvent): boolean;
					}
					export module DefaultMapViewOnTouchListener {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DefaultMapViewOnTouchListener.a>;
							public run(): void;
						}
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DefaultMapViewOnTouchListener.b>;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class DefaultSceneViewOnTouchListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DefaultSceneViewOnTouchListener>;
						public static DOUBLE_TAP_TIMEOUT: number;
						public static LONG_PRESS_TIMEOUT: number;
						public static TAP_TIMEOUT: number;
						public onScaleEnd(param0: globalAndroid.view.ScaleGestureDetector): void;
						public onMultiPointerTap(param0: globalAndroid.view.MotionEvent): boolean;
						public onDoubleTap(param0: globalAndroid.view.MotionEvent): boolean;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.SceneView);
						public onDoubleTouchDrag(param0: globalAndroid.view.MotionEvent): boolean;
						public onScaleBegin(param0: globalAndroid.view.ScaleGestureDetector): boolean;
						public onScale(param0: globalAndroid.view.ScaleGestureDetector): boolean;
						public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
						public onSinglePointerDown(param0: globalAndroid.view.MotionEvent): boolean;
						public onTwoPointerPitch(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
						public onFling(): boolean;
						public onSingleTapConfirmed(param0: globalAndroid.view.MotionEvent): boolean;
						public onTwoPointerRotate(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
						public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
						public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
						public onSinglePointerUp(param0: globalAndroid.view.MotionEvent): boolean;
						public onLongPress(param0: globalAndroid.view.MotionEvent): void;
					}
					export module DefaultSceneViewOnTouchListener {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DefaultSceneViewOnTouchListener.a>;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class DeviceOrientation {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DeviceOrientation>;
						public static PORTRAIT: com.esri.arcgisruntime.mapping.view.DeviceOrientation;
						public static LANDSCAPE_LEFT: com.esri.arcgisruntime.mapping.view.DeviceOrientation;
						public static REVERSE_PORTRAIT: com.esri.arcgisruntime.mapping.view.DeviceOrientation;
						public static LANDSCAPE_RIGHT: com.esri.arcgisruntime.mapping.view.DeviceOrientation;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.DeviceOrientation>;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.DeviceOrientation;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class DrawStatus {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DrawStatus>;
						public static IN_PROGRESS: com.esri.arcgisruntime.mapping.view.DrawStatus;
						public static COMPLETED: com.esri.arcgisruntime.mapping.view.DrawStatus;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.DrawStatus;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.DrawStatus>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class DrawStatusChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DrawStatusChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView, param1: com.esri.arcgisruntime.mapping.view.DrawStatus);
						public getSource(): com.esri.arcgisruntime.mapping.view.GeoView;
						public getDrawStatus(): com.esri.arcgisruntime.mapping.view.DrawStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class DrawStatusChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							drawStatusChanged(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedEvent): void;
						});
						public constructor();
						public drawStatusChanged(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export abstract class GeoView {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.GeoView>;
						public mCoreDevice: com.esri.arcgisruntime.internal.jni.CoreDevice;
						public mGeoViewImpl: com.esri.arcgisruntime.internal.h.b.g;
						public mSurface: globalAndroid.opengl.GLSurfaceView;
						public setViewpointAsync(param0: com.esri.arcgisruntime.mapping.Viewpoint): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public addNavigationChangedListener(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): void;
						public identifyLayerAsync(param0: com.esri.arcgisruntime.layers.Layer, param1: globalAndroid.graphics.Point, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
						public pause(): void;
						public isWrapAroundEnabled(): boolean;
						public finalize(): void;
						public resume(): void;
						public isAttributionTextVisible(): boolean;
						public getLayerViewState(param0: com.esri.arcgisruntime.layers.Layer): java.util.EnumSet<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
						public setBookmarkAsync(param0: com.esri.arcgisruntime.mapping.Bookmark): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public removeAttributionViewLayoutChangeListener(param0: globalAndroid.view.View.OnLayoutChangeListener): void;
						public identifyLayerAsync(param0: com.esri.arcgisruntime.layers.Layer, param1: globalAndroid.graphics.Point, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
						public onDrawFrame(param0: javax.microedition.khronos.opengles.GL10): void;
						public getAttributionText(): string;
						public identifyGraphicsOverlaysAsync(param0: globalAndroid.graphics.Point, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
						public identifyGraphicsOverlayAsync(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: globalAndroid.graphics.Point, param2: number, param3: boolean, param4: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
						public getSelectionProperties(): com.esri.arcgisruntime.mapping.SelectionProperties;
						public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public removeViewpointChangedListener(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): boolean;
						public identifyLayersAsync(param0: globalAndroid.graphics.Point, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
						public dispose(): void;
						public identifyGraphicsOverlaysAsync(param0: globalAndroid.graphics.Point, param1: number, param2: boolean, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>>;
						public removeDrawStatusChangedListener(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): boolean;
						public isNavigating(): boolean;
						public getTimeExtent(): com.esri.arcgisruntime.mapping.TimeExtent;
						public exportImageAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<globalAndroid.graphics.Bitmap>;
						public addAttributionViewLayoutChangeListener(param0: globalAndroid.view.View.OnLayoutChangeListener): void;
						public addDrawStatusChangedListener(param0: com.esri.arcgisruntime.mapping.view.DrawStatusChangedListener): void;
						public addSpatialReferenceChangedListener(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): void;
						public removeLayerViewStateChangedListener(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): boolean;
						public setupSurface(): void;
						public removeAttributionTextChangedListener(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): boolean;
						public removeNavigationChangedListener(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedListener): boolean;
						public identifyLayersAsync(param0: globalAndroid.graphics.Point, param1: number, param2: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>>;
						public getCurrentViewpoint(param0: com.esri.arcgisruntime.mapping.Viewpoint.Type): com.esri.arcgisruntime.mapping.Viewpoint;
						public getGLESVersionLog(): string;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getDrawStatus(): com.esri.arcgisruntime.mapping.view.DrawStatus;
						public addLayerViewStateChangedListener(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener): void;
						public addViewpointChangedListener(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedListener): void;
						public identifyGraphicsOverlayAsync(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay, param1: globalAndroid.graphics.Point, param2: number, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
						public setViewpoint(param0: com.esri.arcgisruntime.mapping.Viewpoint): void;
						public setAttributionTextVisible(param0: boolean): void;
						public addAttributionTextChangedListener(param0: com.esri.arcgisruntime.mapping.view.AttributionTextChangedListener): void;
						public removeSpatialReferenceChangedListener(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener): boolean;
						public createCoreView(param0: globalAndroid.content.Context): com.esri.arcgisruntime.internal.jni.CoreGeoView;
						public onSurfaceCreated(): void;
						public setViewpointAsync(param0: com.esri.arcgisruntime.mapping.Viewpoint, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public setTimeExtent(param0: com.esri.arcgisruntime.mapping.TimeExtent): void;
						public getGraphicsOverlays(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
					}
					export module GeoView {
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.GeoView.a>;
							public chooseConfig(param0: javax.microedition.khronos.egl.EGL10, param1: javax.microedition.khronos.egl.EGLDisplay): javax.microedition.khronos.egl.EGLConfig;
						}
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.GeoView.b>;
							public onDrawFrame(param0: javax.microedition.khronos.opengles.GL10): void;
							public createContext(param0: javax.microedition.khronos.egl.EGL10, param1: javax.microedition.khronos.egl.EGLDisplay, param2: javax.microedition.khronos.egl.EGLConfig): javax.microedition.khronos.egl.EGLContext;
							public onSurfaceChanged(param0: javax.microedition.khronos.opengles.GL10, param1: number, param2: number): void;
							public destroyContext(param0: javax.microedition.khronos.egl.EGL10, param1: javax.microedition.khronos.egl.EGLDisplay, param2: javax.microedition.khronos.egl.EGLContext): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView);
							public onSurfaceCreated(param0: javax.microedition.khronos.opengles.GL10, param1: javax.microedition.khronos.egl.EGLConfig): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class GlobeCameraController extends com.esri.arcgisruntime.mapping.view.CameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.GlobeCameraController>;
						public constructor();
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGlobeCameraController;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreCameraController);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGlobeCameraController): com.esri.arcgisruntime.mapping.view.GlobeCameraController;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class Graphic extends com.esri.arcgisruntime.mapping.GeoElement {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Graphic>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: java.util.Map<string,any>);
						public isSelected(): boolean;
						public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGraphic;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGraphic): com.esri.arcgisruntime.mapping.view.Graphic;
						public getZIndex(): number;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						public setSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry);
						public getGraphicsOverlay(): com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: java.util.Map<string,any>, param2: com.esri.arcgisruntime.symbology.Symbol);
						public isVisible(): boolean;
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.symbology.Symbol);
						public setSelected(param0: boolean): void;
						public setZIndex(param0: number): void;
						public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public setVisible(param0: boolean): void;
						public constructor(param0: number, param1: number);
						public getAttributes(): java.util.Map<string,any>;
					}
					export module Graphic {
						export class a extends com.esri.arcgisruntime.internal.p.c {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Graphic.a>;
							public a(param0: string, param1: any): any;
							public a(): void;
							public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreDictionary);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class GraphicsOverlay extends com.esri.arcgisruntime.mapping.popup.PopupSource {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.GraphicsOverlay>;
						public setMinScale(param0: number): void;
						/** @deprecated */
						public getSelectionColor(): number;
						public setScaleSymbols(param0: boolean): void;
						public getRenderingMode(): com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode;
						public getGraphics(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.Graphic>;
						/** @deprecated */
						public setSelectionColor(param0: number): void;
						public setLabelsEnabled(param0: boolean): void;
						public isVisible(): boolean;
						public selectGraphics(param0: java.lang.Iterable<com.esri.arcgisruntime.mapping.view.Graphic>): void;
						public setPopupEnabled(param0: boolean): void;
						public clearSelection(): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay;
						public isPopupEnabled(): boolean;
						public getRenderer(): com.esri.arcgisruntime.symbology.Renderer;
						public getSceneProperties(): com.esri.arcgisruntime.mapping.view.LayerSceneProperties;
						public setOpacity(param0: number): void;
						public constructor();
						public isLabelsEnabled(): boolean;
						public setMaxScale(param0: number): void;
						public getOpacity(): number;
						public getMaxScale(): number;
						public setRenderer(param0: com.esri.arcgisruntime.symbology.Renderer): void;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode);
						public getMinScale(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGraphicsOverlay): com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
						public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
						public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
						public getLabelDefinitions(): java.util.List<com.esri.arcgisruntime.arcgisservices.LabelDefinition>;
						public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
						public getSelectedGraphics(): java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>;
						public unselectGraphics(param0: java.lang.Iterable<com.esri.arcgisruntime.mapping.view.Graphic>): void;
						public setVisible(param0: boolean): void;
						public isScaleSymbols(): boolean;
					}
					export module GraphicsOverlay {
						export class RenderingMode {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode>;
							public static DYNAMIC: com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode;
							public static STATIC: com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode>;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.GraphicsOverlay.RenderingMode;
						}
						export class a extends com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.Graphic> {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.GraphicsOverlay.a>;
							public contains(param0: any): boolean;
							public size(): number;
							public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
							public toArray(): native.Array<any>;
							public subList(param0: number, param1: number): java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>;
							public addAll(param0: java.util.Collection<any>): boolean;
							public listIterator(param0: number): java.util.ListIterator<com.esri.arcgisruntime.mapping.view.Graphic>;
							public removeAll(param0: java.util.Collection<any>): boolean;
							public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.view.Graphic>): void;
							public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.mapping.view.Graphic>): boolean;
							public b(param0: number): com.esri.arcgisruntime.mapping.view.Graphic;
							public toArray(param0: native.Array<any>): native.Array<any>;
							public a(param0: com.esri.arcgisruntime.mapping.view.Graphic): boolean;
							public retainAll(param0: java.util.Collection<any>): boolean;
							public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
							public a(param0: number): com.esri.arcgisruntime.mapping.view.Graphic;
							public b(param0: number, param1: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.mapping.view.Graphic;
							public iterator(): java.util.Iterator<com.esri.arcgisruntime.mapping.view.Graphic>;
							public containsAll(param0: java.util.Collection<any>): boolean;
							public lastIndexOf(param0: any): number;
							public remove(param0: any): boolean;
							public clear(): void;
							public indexOf(param0: any): number;
							public addAll(param0: number, param1: java.util.Collection<any>): boolean;
							public listIterator(): java.util.ListIterator<com.esri.arcgisruntime.mapping.view.Graphic>;
							public a(param0: number, param1: com.esri.arcgisruntime.mapping.view.Graphic): void;
							public isEmpty(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export abstract class Grid {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Grid>;
						public setTextSymbol(param0: number, param1: com.esri.arcgisruntime.symbology.Symbol): void;
						public getLineSymbol(param0: number): com.esri.arcgisruntime.symbology.Symbol;
						public setLabelOffset(param0: number): void;
						public isLabelVisible(): boolean;
						public setLabelPosition(param0: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition): void;
						public getLevelCount(): number;
						public getTextSymbol(param0: number): com.esri.arcgisruntime.symbology.Symbol;
						public getLabelPosition(): com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
						public setLineSymbol(param0: number, param1: com.esri.arcgisruntime.symbology.Symbol): void;
						public isVisible(): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGrid;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGrid);
						public setLabelVisible(param0: boolean): void;
						public setVisible(param0: boolean): void;
						public getLabelOffset(): number;
					}
					export module Grid {
						export class LabelPosition {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.Grid.LabelPosition>;
							public static GEOGRAPHIC: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static BOTTOM_LEFT: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static TOP_LEFT: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static BOTTOM_RIGHT: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static TOP_RIGHT: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static CENTER: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static ALL_SIDES: com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.Grid.LabelPosition;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.Grid.LabelPosition>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class IdentifyGraphicsOverlayResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult>;
						public getGraphicsOverlay(): com.esri.arcgisruntime.mapping.view.GraphicsOverlay;
						public getPopups(): java.util.List<com.esri.arcgisruntime.mapping.popup.Popup>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreIdentifyGraphicsOverlayResult): com.esri.arcgisruntime.mapping.view.IdentifyGraphicsOverlayResult;
						public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getGraphics(): java.util.List<com.esri.arcgisruntime.mapping.view.Graphic>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreIdentifyGraphicsOverlayResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class IdentifyLayerResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
						public getLayerContent(): com.esri.arcgisruntime.layers.LayerContent;
						public getPopups(): java.util.List<com.esri.arcgisruntime.mapping.popup.Popup>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreIdentifyLayerResult): com.esri.arcgisruntime.mapping.view.IdentifyLayerResult;
						public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public isTransferLimitExceeded(): boolean;
						public getSublayerResults(): java.util.List<com.esri.arcgisruntime.mapping.view.IdentifyLayerResult>;
						public getElements(): java.util.List<com.esri.arcgisruntime.mapping.GeoElement>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LatitudeLongitudeGrid extends com.esri.arcgisruntime.mapping.view.Grid {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid>;
						public constructor();
						public setLabelFormat(param0: com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGrid);
						public getLabelFormat(): com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat;
					}
					export module LatitudeLongitudeGrid {
						export class LabelFormat {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat>;
							public static DECIMAL_DEGREES: com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat;
							public static DEGREES_MINUTES_SECONDS: com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.LatitudeLongitudeGrid.LabelFormat>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LayerSceneProperties {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LayerSceneProperties>;
						public getAltitudeOffset(): number;
						public setAltitudeOffset(param0: number): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLayerSceneProperties): com.esri.arcgisruntime.mapping.view.LayerSceneProperties;
						public getSurfacePlacement(): com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLayerSceneProperties;
						public setSurfacePlacement(param0: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement): void;
					}
					export module LayerSceneProperties {
						export class SurfacePlacement {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement>;
							public static DRAPED: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
							public static ABSOLUTE: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
							public static RELATIVE: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
							public static DRAPED_BILLBOARDED: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
							public static RELATIVE_TO_SCENE: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
							public static DRAPED_FLAT: com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.LayerSceneProperties.SurfacePlacement>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LayerViewStateChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LayerViewStateChangedEvent>;
						public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getSource(): com.esri.arcgisruntime.mapping.view.GeoView;
						public getLayerViewStatus(): java.util.EnumSet<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
						public getLayer(): com.esri.arcgisruntime.layers.Layer;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView, param1: com.esri.arcgisruntime.layers.Layer, param2: java.util.EnumSet<com.esri.arcgisruntime.mapping.view.LayerViewStatus>, param3: com.esri.arcgisruntime.ArcGISRuntimeException);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LayerViewStateChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.LayerViewStateChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							layerViewStateChanged(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedEvent): void;
						});
						public constructor();
						public layerViewStateChanged(param0: com.esri.arcgisruntime.mapping.view.LayerViewStateChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LayerViewStatus {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
						public static ACTIVE: com.esri.arcgisruntime.mapping.view.LayerViewStatus;
						public static NOT_VISIBLE: com.esri.arcgisruntime.mapping.view.LayerViewStatus;
						public static OUT_OF_SCALE: com.esri.arcgisruntime.mapping.view.LayerViewStatus;
						public static LOADING: com.esri.arcgisruntime.mapping.view.LayerViewStatus;
						public static ERROR: com.esri.arcgisruntime.mapping.view.LayerViewStatus;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.LayerViewStatus;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.LayerViewStatus>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LightingMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LightingMode>;
						public static NO_LIGHT: com.esri.arcgisruntime.mapping.view.LightingMode;
						public static LIGHT: com.esri.arcgisruntime.mapping.view.LightingMode;
						public static LIGHT_AND_SHADOWS: com.esri.arcgisruntime.mapping.view.LightingMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.LightingMode;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.LightingMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LocationDisplay {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay>;
						public removeLocationChangedListener(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedListener): boolean;
						public setShowPingAnimation(param0: boolean): void;
						public setCourseSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public removeAutoPanModeChangedListener(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedListener): boolean;
						public addLocationChangedListener(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedListener): void;
						public startAsync(): void;
						public setWanderExtentFactor(param0: number): void;
						public setLocationDataSource(param0: com.esri.arcgisruntime.location.LocationDataSource): void;
						public getLocationDataSource(): com.esri.arcgisruntime.location.LocationDataSource;
						public setAcquiringSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public getAcquiringSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public getDefaultSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public getPingAnimationSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public getWanderExtentFactor(): number;
						public setInitialZoomScale(param0: number): void;
						public setAccuracySymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public setOpacity(param0: number): void;
						public getNavigationPointHeightFactor(): number;
						public setShowLocation(param0: boolean): void;
						public getAccuracySymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public setDefaultSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public getInitialZoomScale(): number;
						public isShowLocation(): boolean;
						public getOpacity(): number;
						public isShowAccuracy(): boolean;
						public addAutoPanModeChangedListener(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedListener): void;
						public setPingAnimationSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public stop(): void;
						public getLocation(): com.esri.arcgisruntime.location.LocationDataSource.Location;
						public getMapLocation(): com.esri.arcgisruntime.geometry.Point;
						public setNavigationPointHeightFactor(param0: number): void;
						public getCourseSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public addDataSourceStatusChangedListener(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedListener): void;
						public isStarted(): boolean;
						public getAutoPanMode(): com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode;
						public setHeadingSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public setShowAccuracy(param0: boolean): void;
						public getHeadingSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public setAutoPanMode(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode): void;
						public setUseCourseSymbolOnMovement(param0: boolean): void;
						public isUseCourseSymbolOnMovement(): boolean;
						public removeDataSourceStatusChangedListener(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedListener): boolean;
						public getHeading(): number;
						public isShowPingAnimation(): boolean;
					}
					export module LocationDisplay {
						export class AutoPanMode {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode>;
							public static OFF: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode;
							public static RECENTER: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode;
							public static NAVIGATION: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode;
							public static COMPASS_NAVIGATION: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode>;
						}
						export class AutoPanModeChangedEvent {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedEvent>;
							public getAutoPanMode(): com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay, param1: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanMode);
							public getSource(): com.esri.arcgisruntime.mapping.view.LocationDisplay;
						}
						export class AutoPanModeChangedListener {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedListener>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.LocationDisplay$AutoPanModeChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onAutoPanModeChanged(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedEvent): void;
							});
							public constructor();
							public onAutoPanModeChanged(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedEvent): void;
						}
						export class DataSourceStatusChangedEvent {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedEvent>;
							public getError(): java.lang.Throwable;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay, param1: boolean);
							public isStarted(): boolean;
							public getSource(): com.esri.arcgisruntime.mapping.view.LocationDisplay;
						}
						export class DataSourceStatusChangedListener {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedListener>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.LocationDisplay$DataSourceStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onStatusChanged(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedEvent): void;
							});
							public constructor();
							public onStatusChanged(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedEvent): void;
						}
						export class LocationChangedEvent {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedEvent>;
							public getLocation(): com.esri.arcgisruntime.location.LocationDataSource.Location;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay, param1: com.esri.arcgisruntime.location.LocationDataSource.Location);
							public getSource(): com.esri.arcgisruntime.mapping.view.LocationDisplay;
						}
						export class LocationChangedListener {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedListener>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.LocationDisplay$LocationChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLocationChanged(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedEvent): void;
							});
							public constructor();
							public onLocationChanged(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedEvent): void;
						}
						export class a {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.a>;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedListener);
							public a(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.LocationDisplay.AutoPanModeChangedListener;
						}
						export class b {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.b>;
							public a(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedEvent): void;
							public a(): com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedListener;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.DataSourceStatusChangedListener);
						}
						export class c {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationDisplay.c>;
							public a(): com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedListener;
							public a(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedEvent): void;
							public constructor(param0: com.esri.arcgisruntime.mapping.view.LocationDisplay.LocationChangedListener);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class LocationToScreenResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationToScreenResult>;
						public getVisibility(): com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
						public getScreenPoint(): globalAndroid.graphics.Point;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocationToScreenResult): com.esri.arcgisruntime.mapping.view.LocationToScreenResult;
					}
					export module LocationToScreenResult {
						export class SceneLocationVisibility {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility>;
							public static VISIBLE: com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
							public static HIDDEN_BY_BASE_SURFACE: com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
							public static HIDDEN_BY_EARTH: com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
							public static HIDDEN_BY_ELEVATION: com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
							public static NOT_ON_SCREEN: com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.LocationToScreenResult.SceneLocationVisibility>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class MapRotationChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MapRotationChangedEvent>;
						public getSource(): com.esri.arcgisruntime.mapping.view.MapView;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.MapView);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class MapRotationChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MapRotationChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.MapRotationChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							mapRotationChanged(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedEvent): void;
						});
						public constructor();
						public mapRotationChanged(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class MapScaleChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MapScaleChangedEvent>;
						public getSource(): com.esri.arcgisruntime.mapping.view.MapView;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.MapView);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class MapScaleChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MapScaleChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.MapScaleChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							mapScaleChanged(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedEvent): void;
						});
						public constructor();
						public mapScaleChanged(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class MapView extends com.esri.arcgisruntime.mapping.view.GeoView {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MapView>;
						public setViewpointAsync(param0: com.esri.arcgisruntime.mapping.Viewpoint): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public setViewpointRotationAsync(param0: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public constructor(param0: globalAndroid.content.Context);
						public getLocationDisplay(): com.esri.arcgisruntime.mapping.view.LocationDisplay;
						public setCanMagnifierPanMap(param0: boolean): void;
						public drag(param0: number, param1: number): void;
						public getOnTouchListener(): globalAndroid.view.View.OnTouchListener;
						public canMagnifierPanMap(): boolean;
						public setViewpointGeometryAsync(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public setZOrderMediaOverlay(param0: boolean): void;
						public setMap(param0: com.esri.arcgisruntime.mapping.ArcGISMap): void;
						public zoomInAnimated(param0: number, param1: number): void;
						public zoomToScale(param0: number, param1: number, param2: number): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public getViewInsetLeft(): number;
						public setWrapAroundMode(param0: com.esri.arcgisruntime.mapping.view.WrapAroundMode): void;
						public setBackgroundGrid(param0: com.esri.arcgisruntime.mapping.view.BackgroundGrid): void;
						public getViewInsetTop(): number;
						public isMagnifierEnabled(): boolean;
						public getUnitsPerDensityIndependentPixel(): number;
						public getLabeling(): com.esri.arcgisruntime.mapping.view.ViewLabelProperties;
						public logFrameRate(param0: globalAndroid.widget.TextView): void;
						public getMapRotation(): number;
						public fling(param0: number, param1: number): void;
						public onMeasure(param0: number, param1: number): void;
						public onDrawFrame(param0: javax.microedition.khronos.opengles.GL10): void;
						public removeMapRotationChangedListener(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedListener): boolean;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public getGrid(): com.esri.arcgisruntime.mapping.view.Grid;
						public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getSketchEditor(): com.esri.arcgisruntime.mapping.view.SketchEditor;
						public dispose(): void;
						public setViewpointCenterAsync(param0: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public addMapRotationChangedListener(param0: com.esri.arcgisruntime.mapping.view.MapRotationChangedListener): void;
						public setIsInteracting(param0: boolean): void;
						public getViewInsetRight(): number;
						public screenToLocation(param0: globalAndroid.graphics.Point): com.esri.arcgisruntime.geometry.Point;
						public setMagnifierEnabled(param0: boolean): void;
						public setViewInsets(param0: number, param1: number, param2: number, param3: number): void;
						public addMapScaleChangedListener(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedListener): void;
						public createCoreView(param0: globalAndroid.content.Context): com.esri.arcgisruntime.internal.jni.CoreMapView;
						public getVisibleArea(): com.esri.arcgisruntime.geometry.Polygon;
						public setOnTouchListener(param0: globalAndroid.view.View.OnTouchListener): void;
						public setGrid(param0: com.esri.arcgisruntime.mapping.view.Grid): void;
						public setSketchEditor(param0: com.esri.arcgisruntime.mapping.view.SketchEditor): void;
						public getMap(): com.esri.arcgisruntime.mapping.ArcGISMap;
						public isViewInsetsValid(): boolean;
						public zoomOutAnimated(param0: number, param1: number): void;
						public setLabeling(param0: com.esri.arcgisruntime.mapping.view.ViewLabelProperties): void;
						public isUseLocationDisplayAnchor(): boolean;
						public rotate(param0: number, param1: number, param2: number): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMapView;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getBackgroundGrid(): com.esri.arcgisruntime.mapping.view.BackgroundGrid;
						public setViewpointGeometryAsync(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public getViewInsetBottom(): number;
						public getMapScale(): number;
						public setViewpointAsync(param0: com.esri.arcgisruntime.mapping.Viewpoint, param1: number, param2: com.esri.arcgisruntime.mapping.view.AnimationCurve): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public getCallout(): com.esri.arcgisruntime.mapping.view.Callout;
						public getWrapAroundMode(): com.esri.arcgisruntime.mapping.view.WrapAroundMode;
						public removeMapScaleChangedListener(param0: com.esri.arcgisruntime.mapping.view.MapScaleChangedListener): boolean;
						public setViewpointScaleAsync(param0: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public setViewpointCenterAsync(param0: com.esri.arcgisruntime.geometry.Point, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public onSurfaceCreated(): void;
						public createCoreView(param0: globalAndroid.content.Context): com.esri.arcgisruntime.internal.jni.CoreGeoView;
						public setViewpointAsync(param0: com.esri.arcgisruntime.mapping.Viewpoint, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public locationToScreen(param0: com.esri.arcgisruntime.geometry.Point): globalAndroid.graphics.Point;
					}
					export module MapView {
						export class OnTouchListener {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MapView.OnTouchListener>;
							/**
							 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.MapView$OnTouchListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onMultiPointerTap(param0: globalAndroid.view.MotionEvent): boolean;
								onDoubleTouchDrag(param0: globalAndroid.view.MotionEvent): boolean;
								onUp(param0: globalAndroid.view.MotionEvent): boolean;
								onRotate(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
							});
							public constructor();
							public onUp(param0: globalAndroid.view.MotionEvent): boolean;
							public onRotate(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
							public onDoubleTouchDrag(param0: globalAndroid.view.MotionEvent): boolean;
							public onMultiPointerTap(param0: globalAndroid.view.MotionEvent): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class MgrsGrid extends com.esri.arcgisruntime.mapping.view.Grid {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MgrsGrid>;
						public setLabelUnit(param0: com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit): void;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGrid);
						public getLabelUnit(): com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit;
					}
					export module MgrsGrid {
						export class LabelUnit {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit>;
							public static KILOMETERS_METERS: com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit;
							public static METERS: com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.MgrsGrid.LabelUnit>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class NavigationChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.NavigationChangedEvent>;
						public isNavigating(): boolean;
						public getSource(): com.esri.arcgisruntime.mapping.view.GeoView;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView, param1: boolean);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class NavigationChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.NavigationChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.NavigationChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							navigationChanged(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedEvent): void;
						});
						public constructor();
						public navigationChanged(param0: com.esri.arcgisruntime.mapping.view.NavigationChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class OrbitGeoElementCameraController extends com.esri.arcgisruntime.mapping.view.CameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController>;
						public removeCameraHeadingOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController>): boolean;
						public getMaxCameraPitchOffset(): number;
						public addCameraDistanceChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController>): void;
						public getCameraHeadingOffset(): number;
						public moveCameraAsync(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public getCameraPitchOffset(): number;
						public setCameraPitchOffsetInteractive(param0: boolean): void;
						public addCameraPitchOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController>): void;
						public isAutoPitchEnabled(): boolean;
						public setMinCameraHeadingOffset(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreCameraController);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public getMaxCameraDistance(): number;
						public removeCameraDistanceChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController>): boolean;
						public getMaxCameraHeadingOffset(): number;
						public setAutoRollEnabled(param0: boolean): void;
						public setCameraHeadingOffset(param0: number): void;
						public isCameraDistanceInteractive(): boolean;
						public getTargetOffsetY(): number;
						public removeCameraPitchOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController>): boolean;
						public setCameraDistanceInteractive(param0: boolean): void;
						public setTargetOffsetsAsync(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public setTargetOffsetZ(param0: number): void;
						public getTargetGeoElement(): com.esri.arcgisruntime.mapping.GeoElement;
						public setMaxCameraPitchOffset(param0: number): void;
						public getTargetOffsetX(): number;
						public addCameraHeadingOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController>): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOrbitGeoElementCameraController;
						public setAutoPitchEnabled(param0: boolean): void;
						public getMinCameraPitchOffset(): number;
						public getMinCameraDistance(): number;
						public setCameraHeadingOffsetInteractive(param0: boolean): void;
						public isCameraPitchOffsetInteractive(): boolean;
						public getTargetOffsetZ(): number;
						public setMinCameraPitchOffset(param0: number): void;
						public isAutoHeadingEnabled(): boolean;
						public setMaxCameraDistance(param0: number): void;
						public isAutoRollEnabled(): boolean;
						public setMinCameraDistance(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.mapping.GeoElement, param1: number);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOrbitGeoElementCameraController): com.esri.arcgisruntime.mapping.view.OrbitGeoElementCameraController;
						public setTargetOffsetY(param0: number): void;
						public getTargetVerticalScreenFactor(): number;
						public setTargetVerticalScreenFactor(param0: number): void;
						public setMaxCameraHeadingOffset(param0: number): void;
						public setAutoHeadingEnabled(param0: boolean): void;
						public getMinCameraHeadingOffset(): number;
						public isCameraHeadingOffsetInteractive(): boolean;
						public getCameraDistance(): number;
						public setCameraPitchOffset(param0: number): void;
						public setTargetOffsetX(param0: number): void;
						public setCameraDistance(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class OrbitLocationCameraController extends com.esri.arcgisruntime.mapping.view.CameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController>;
						public getMinCameraDistance(): number;
						public setCameraHeadingOffsetInteractive(param0: boolean): void;
						public isCameraPitchOffsetInteractive(): boolean;
						public getMaxCameraPitchOffset(): number;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: number);
						public setMinCameraPitchOffset(param0: number): void;
						public getCameraHeadingOffset(): number;
						public setMaxCameraDistance(param0: number): void;
						public getTargetLocation(): com.esri.arcgisruntime.geometry.Point;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOrbitLocationCameraController;
						public moveCameraAsync(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public getCameraPitchOffset(): number;
						public setMinCameraDistance(param0: number): void;
						public setCameraPitchOffsetInteractive(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.geometry.Point);
						public setMinCameraHeadingOffset(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreCameraController);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCameraController;
						public getMaxCameraDistance(): number;
						public addCameraPitchOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController>): void;
						public setMaxCameraHeadingOffset(param0: number): void;
						public getMaxCameraHeadingOffset(): number;
						public removeCameraDistanceChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController>): boolean;
						public removeCameraPitchOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController>): boolean;
						public getMinCameraHeadingOffset(): number;
						public setCameraHeadingOffset(param0: number): void;
						public isCameraDistanceInteractive(): boolean;
						public isCameraHeadingOffsetInteractive(): boolean;
						public removeCameraHeadingOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController>): boolean;
						public getCameraDistance(): number;
						public setCameraDistanceInteractive(param0: boolean): void;
						public addCameraHeadingOffsetChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener<com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController>): void;
						public setCameraPitchOffset(param0: number): void;
						public addCameraDistanceChangedListener(param0: com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener<com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController>): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOrbitLocationCameraController): com.esri.arcgisruntime.mapping.view.OrbitLocationCameraController;
						public setMaxCameraPitchOffset(param0: number): void;
						public setCameraDistance(param0: number): void;
						public getMinCameraPitchOffset(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class OriginCameraChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.OriginCameraChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.TransformationMatrixCameraController);
						public getSource(): com.esri.arcgisruntime.mapping.view.TransformationMatrixCameraController;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class OriginCameraChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.OriginCameraChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.OriginCameraChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							originCameraChanged(param0: com.esri.arcgisruntime.mapping.view.OriginCameraChangedEvent): void;
						});
						public constructor();
						public originCameraChanged(param0: com.esri.arcgisruntime.mapping.view.OriginCameraChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SceneView extends com.esri.arcgisruntime.mapping.view.GeoView {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SceneView>;
						public isManualRenderingEnabled(): boolean;
						public constructor(param0: globalAndroid.content.Context);
						public setViewpointCameraAsync(param0: com.esri.arcgisruntime.mapping.view.Camera): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public setZOrderMediaOverlay(param0: boolean): void;
						public createCoreView(param0: globalAndroid.content.Context): com.esri.arcgisruntime.internal.jni.CoreSceneView;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public setFieldOfViewAndDistortionRatio(param0: number, param1: number): void;
						public getCurrentViewpointCamera(): com.esri.arcgisruntime.mapping.view.Camera;
						public setFieldOfView(param0: number): void;
						public setFieldOfViewFromLensIntrinsics(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: com.esri.arcgisruntime.mapping.view.DeviceOrientation): void;
						public getAmbientLightColor(): number;
						public onMeasure(param0: number, param1: number): void;
						public setScene(param0: com.esri.arcgisruntime.mapping.ArcGISScene): void;
						public onDrawFrame(param0: javax.microedition.khronos.opengles.GL10): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public getFieldOfViewDistortionRatio(): number;
						public interactionSetInteractionOrigin(param0: number, param1: number): void;
						public setSpaceEffect(param0: com.esri.arcgisruntime.mapping.view.SpaceEffect): void;
						public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getAtmosphereEffect(): com.esri.arcgisruntime.mapping.view.AtmosphereEffect;
						public screenToLocationAsync(param0: globalAndroid.graphics.Point): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.geometry.Point>;
						public setViewpointCameraAsync(param0: com.esri.arcgisruntime.mapping.view.Camera, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Boolean>;
						public interactionActivateFlick(): void;
						public interactionPan(param0: number, param1: number): void;
						public getAnalysisOverlays(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.mapping.view.AnalysisOverlay>;
						public getSpaceEffect(): com.esri.arcgisruntime.mapping.view.SpaceEffect;
						public getSunLighting(): com.esri.arcgisruntime.mapping.view.LightingMode;
						public setOnTouchListener(param0: globalAndroid.view.View.OnTouchListener): void;
						public screenToBaseSurface(param0: globalAndroid.graphics.Point): com.esri.arcgisruntime.geometry.Point;
						public renderFrame(): void;
						public static getMemoryLimit(): number;
						public getSunTime(): java.util.Calendar;
						public interactionRotate(param0: number): void;
						public locationToScreen(param0: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.mapping.view.LocationToScreenResult;
						public getCameraController(): com.esri.arcgisruntime.mapping.view.CameraController;
						public setViewpointCamera(param0: com.esri.arcgisruntime.mapping.view.Camera): void;
						public static setMemoryLimit(param0: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setAtmosphereEffect(param0: com.esri.arcgisruntime.mapping.view.AtmosphereEffect): void;
						public interactionPitch(param0: number): void;
						public setSunTime(param0: java.util.Calendar): void;
						public getFieldOfView(): number;
						public setManualRenderingEnabled(param0: boolean): void;
						public setCameraController(param0: com.esri.arcgisruntime.mapping.view.CameraController): void;
						public setAmbientLightColor(param0: number): void;
						public interactionZoomToOrigin(param0: number): void;
						public interactionZoomInAnimated(param0: number, param1: number): void;
						public getScene(): com.esri.arcgisruntime.mapping.ArcGISScene;
						public interactionSetInteracting(param0: boolean): void;
						public onSurfaceCreated(): void;
						public createCoreView(param0: globalAndroid.content.Context): com.esri.arcgisruntime.internal.jni.CoreGeoView;
						public interactionZoomOutAnimated(param0: number, param1: number): void;
						public setSunLighting(param0: com.esri.arcgisruntime.mapping.view.LightingMode): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SelectedVertexChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SelectedVertexChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.SketchEditor, param1: com.esri.arcgisruntime.mapping.view.SketchVertex);
						public getSource(): com.esri.arcgisruntime.mapping.view.SketchEditor;
						public getSketchVertex(): com.esri.arcgisruntime.mapping.view.SketchVertex;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SelectedVertexChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SelectedVertexChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.SelectedVertexChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							selectedVertexChanged(param0: com.esri.arcgisruntime.mapping.view.SelectedVertexChangedEvent): void;
						});
						public constructor();
						public selectedVertexChanged(param0: com.esri.arcgisruntime.mapping.view.SelectedVertexChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SketchCreationMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchCreationMode>;
						public static POINT: com.esri.arcgisruntime.mapping.view.SketchCreationMode;
						public static MULTIPOINT: com.esri.arcgisruntime.mapping.view.SketchCreationMode;
						public static POLYLINE: com.esri.arcgisruntime.mapping.view.SketchCreationMode;
						public static POLYGON: com.esri.arcgisruntime.mapping.view.SketchCreationMode;
						public static FREEHAND_LINE: com.esri.arcgisruntime.mapping.view.SketchCreationMode;
						public static FREEHAND_POLYGON: com.esri.arcgisruntime.mapping.view.SketchCreationMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.SketchCreationMode;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.SketchCreationMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SketchEditConfiguration {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchEditConfiguration>;
						public setAllowPartSelection(param0: boolean): void;
						public constructor();
						public isRequireSelectionBeforeDrag(): boolean;
						public setVertexEditMode(param0: com.esri.arcgisruntime.mapping.view.SketchEditConfiguration.SketchVertexEditMode): void;
						public isContextMenuEnabled(): boolean;
						public setRequireSelectionBeforeDrag(param0: boolean): void;
						public isAllowPartSelection(): boolean;
						public getVertexEditMode(): com.esri.arcgisruntime.mapping.view.SketchEditConfiguration.SketchVertexEditMode;
						public setContextMenuEnabled(param0: boolean): void;
					}
					export module SketchEditConfiguration {
						export class SketchVertexEditMode {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchEditConfiguration.SketchVertexEditMode>;
							public static INTERACTION_EDIT: com.esri.arcgisruntime.mapping.view.SketchEditConfiguration.SketchVertexEditMode;
							public static SELECT_ONLY: com.esri.arcgisruntime.mapping.view.SketchEditConfiguration.SketchVertexEditMode;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.SketchEditConfiguration.SketchVertexEditMode;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.SketchEditConfiguration.SketchVertexEditMode>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SketchEditor {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchEditor>;
						public removeSelectedVertex(): boolean;
						public removeSelectedVertexChangedListener(param0: com.esri.arcgisruntime.mapping.view.SelectedVertexChangedListener): boolean;
						public removeGeometryChangedListener(param0: com.esri.arcgisruntime.mapping.view.SketchGeometryChangedListener): boolean;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						public undo(): void;
						public moveSelectedVertex(param0: com.esri.arcgisruntime.geometry.Point): boolean;
						public insertVertexAfterSelectedVertex(param0: com.esri.arcgisruntime.geometry.Point): boolean;
						public isVisible(): boolean;
						public start(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.mapping.view.SketchCreationMode): void;
						public getSketchEditConfiguration(): com.esri.arcgisruntime.mapping.view.SketchEditConfiguration;
						public setSelectedVertex(param0: com.esri.arcgisruntime.mapping.view.SketchVertex): boolean;
						public start(param0: com.esri.arcgisruntime.mapping.view.SketchCreationMode, param1: com.esri.arcgisruntime.mapping.view.SketchEditConfiguration): void;
						public start(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public setOpacity(param0: number): void;
						public constructor();
						public start(param0: com.esri.arcgisruntime.mapping.view.SketchCreationMode): void;
						public isSketchValid(): boolean;
						public addGeometryChangedListener(param0: com.esri.arcgisruntime.mapping.view.SketchGeometryChangedListener): void;
						public canUndo(): boolean;
						public setSketchStyle(param0: com.esri.arcgisruntime.mapping.view.SketchStyle): void;
						public redo(): void;
						public getOpacity(): number;
						public stop(): void;
						public start(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.mapping.view.SketchCreationMode, param2: com.esri.arcgisruntime.mapping.view.SketchEditConfiguration): void;
						public getSketchStyle(): com.esri.arcgisruntime.mapping.view.SketchStyle;
						public replaceGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public getSelectedVertex(): com.esri.arcgisruntime.mapping.view.SketchVertex;
						public canRedo(): boolean;
						public setVisible(param0: boolean): void;
						public addSelectedVertexChangedListener(param0: com.esri.arcgisruntime.mapping.view.SelectedVertexChangedListener): void;
						public clearGeometry(): void;
						public getSketchCreationMode(): com.esri.arcgisruntime.mapping.view.SketchCreationMode;
					}
					export module SketchEditor {
						export class a extends com.esri.arcgisruntime.mapping.view.DefaultMapViewOnTouchListener {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchEditor.a>;
							public onSingleTapConfirmed(param0: globalAndroid.view.MotionEvent): boolean;
							public onDown(param0: globalAndroid.view.MotionEvent): boolean;
							public onUp(param0: globalAndroid.view.MotionEvent): boolean;
							public onRotate(param0: globalAndroid.view.MotionEvent, param1: number): boolean;
							public onDoubleTouchDrag(param0: globalAndroid.view.MotionEvent): boolean;
							public onLongPress(param0: globalAndroid.view.MotionEvent): void;
							public onFling(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
							public onMultiPointerTap(param0: globalAndroid.view.MotionEvent): boolean;
							public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SketchGeometryChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchGeometryChangedEvent>;
						public getSource(): com.esri.arcgisruntime.mapping.view.SketchEditor;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.SketchEditor);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SketchGeometryChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchGeometryChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.SketchGeometryChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							geometryChanged(param0: com.esri.arcgisruntime.mapping.view.SketchGeometryChangedEvent): void;
						});
						public constructor();
						public geometryChanged(param0: com.esri.arcgisruntime.mapping.view.SketchGeometryChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SketchStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchStyle>;
						public getVertexSymbol(): com.esri.arcgisruntime.symbology.MarkerSymbol;
						public setMultilayerMidVertexSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPointSymbol): void;
						public setMultilayerLineSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol): void;
						/** @deprecated */
						public getSelectionColor(): number;
						public setShowNumbersForVertices(param0: boolean): void;
						public setMultilayerFeedbackLineSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol): void;
						public setSelectedMidVertexSymbol(param0: com.esri.arcgisruntime.symbology.MarkerSymbol): void;
						public setMultilayerFeedbackFillSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPolygonSymbol): void;
						public getMultilayerFeedbackFillSymbol(): com.esri.arcgisruntime.symbology.MultilayerPolygonSymbol;
						public getMultilayerMidVertexSymbol(): com.esri.arcgisruntime.symbology.MultilayerPointSymbol;
						/** @deprecated */
						public setSelectionColor(param0: number): void;
						public getMultilayerFillSymbol(): com.esri.arcgisruntime.symbology.MultilayerPolygonSymbol;
						public getFeedbackVertexSymbol(): com.esri.arcgisruntime.symbology.MarkerSymbol;
						public getMultilayerFeedbackLineSymbol(): com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol;
						public setLineSymbol(param0: com.esri.arcgisruntime.symbology.LineSymbol): void;
						public getLineSymbol(): com.esri.arcgisruntime.symbology.LineSymbol;
						public setMidVertexSymbol(param0: com.esri.arcgisruntime.symbology.MarkerSymbol): void;
						public getMidVertexSymbol(): com.esri.arcgisruntime.symbology.MarkerSymbol;
						public getSelectedVertexSymbol(): com.esri.arcgisruntime.symbology.MarkerSymbol;
						public getFillSymbol(): com.esri.arcgisruntime.symbology.FillSymbol;
						public getMultilayerFeedbackVertexSymbol(): com.esri.arcgisruntime.symbology.MultilayerPointSymbol;
						public constructor();
						public getMultilayerLineSymbol(): com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol;
						public getFeedbackLineSymbol(): com.esri.arcgisruntime.symbology.LineSymbol;
						public setFeedbackVertexSymbol(param0: com.esri.arcgisruntime.symbology.MarkerSymbol): void;
						public setVertexTextSymbol(param0: com.esri.arcgisruntime.symbology.TextSymbol): void;
						public getMultilayerVertexSymbol(): com.esri.arcgisruntime.symbology.MultilayerPointSymbol;
						public setMultilayerVertexSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPointSymbol): void;
						public setFillSymbol(param0: com.esri.arcgisruntime.symbology.FillSymbol): void;
						public setMultilayerFillSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPolygonSymbol): void;
						public setFeedbackLineSymbol(param0: com.esri.arcgisruntime.symbology.LineSymbol): void;
						public getVertexTextSymbol(): com.esri.arcgisruntime.symbology.TextSymbol;
						public getSelectedMidVertexSymbol(): com.esri.arcgisruntime.symbology.MarkerSymbol;
						public setMultilayerSelectedMidVertexSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPointSymbol): void;
						public setMultilayerSelectedVertexSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPointSymbol): void;
						public setFeedbackFillSymbol(param0: com.esri.arcgisruntime.symbology.FillSymbol): void;
						public getFeedbackFillSymbol(): com.esri.arcgisruntime.symbology.FillSymbol;
						public setMultilayerFeedbackVertexSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerPointSymbol): void;
						public setSelectedVertexSymbol(param0: com.esri.arcgisruntime.symbology.MarkerSymbol): void;
						public isShowNumbersForVertices(): boolean;
						public getMultilayerSelectedMidVertexSymbol(): com.esri.arcgisruntime.symbology.MultilayerPointSymbol;
						public getMultilayerSelectedVertexSymbol(): com.esri.arcgisruntime.symbology.MultilayerPointSymbol;
						public setVertexSymbol(param0: com.esri.arcgisruntime.symbology.MarkerSymbol): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SketchVertex {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SketchVertex>;
						public setPoint(param0: com.esri.arcgisruntime.geometry.Point): void;
						public static createVertex(param0: number, param1: number): com.esri.arcgisruntime.mapping.view.SketchVertex;
						public getPointIndex(): number;
						public getPartIndex(): number;
						public static createMidVertex(param0: number, param1: number): com.esri.arcgisruntime.mapping.view.SketchVertex;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getPoint(): com.esri.arcgisruntime.geometry.Point;
						public getInsertionIndex(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SpaceEffect {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SpaceEffect>;
						public static TRANSPARENT: com.esri.arcgisruntime.mapping.view.SpaceEffect;
						public static STARS: com.esri.arcgisruntime.mapping.view.SpaceEffect;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.SpaceEffect>;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.SpaceEffect;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SpatialReferenceChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView);
						public getSource(): com.esri.arcgisruntime.mapping.view.GeoView;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class SpatialReferenceChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							spatialReferenceChanged(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedEvent): void;
						});
						public constructor();
						public spatialReferenceChanged(param0: com.esri.arcgisruntime.mapping.view.SpatialReferenceChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class TransformationMatrix {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.TransformationMatrix>;
						public getQuaternionY(): number;
						public getTranslationX(): number;
						public subtractTransformation(param0: com.esri.arcgisruntime.mapping.view.TransformationMatrix): com.esri.arcgisruntime.mapping.view.TransformationMatrix;
						public getQuaternionX(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix): com.esri.arcgisruntime.mapping.view.TransformationMatrix;
						public static createIdentityMatrix(): com.esri.arcgisruntime.mapping.view.TransformationMatrix;
						public getQuaternionZ(): number;
						public getTranslationZ(): number;
						public static createWithQuaternionAndTranslation(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number): com.esri.arcgisruntime.mapping.view.TransformationMatrix;
						public getQuaternionW(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrix;
						public getTranslationY(): number;
						public addTransformation(param0: com.esri.arcgisruntime.mapping.view.TransformationMatrix): com.esri.arcgisruntime.mapping.view.TransformationMatrix;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class TransformationMatrixCameraController extends com.esri.arcgisruntime.mapping.view.CameraController {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.TransformationMatrixCameraController>;
						public constructor();
						public getOriginCamera(): com.esri.arcgisruntime.mapping.view.Camera;
						public setClippingDistance(param0: number): void;
						public setOriginCamera(param0: com.esri.arcgisruntime.mapping.view.Camera): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTransformationMatrixCameraController;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.Camera);
						public removeTranslationFactorChangedListener(param0: com.esri.arcgisruntime.mapping.view.TranslationFactorChangedListener): boolean;
						public getTransformationMatrix(): com.esri.arcgisruntime.mapping.view.TransformationMatrix;
						public setTransformationMatrix(param0: com.esri.arcgisruntime.mapping.view.TransformationMatrix): void;
						public getClippingDistance(): number;
						public removeOriginCameraChangedListener(param0: com.esri.arcgisruntime.mapping.view.OriginCameraChangedListener): boolean;
						public getTranslationFactor(): number;
						public addTranslationFactorChangedListener(param0: com.esri.arcgisruntime.mapping.view.TranslationFactorChangedListener): void;
						public setTranslationFactor(param0: number): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTransformationMatrixCameraController): com.esri.arcgisruntime.mapping.view.TransformationMatrixCameraController;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreCameraController);
						public addOriginCameraChangedListener(param0: com.esri.arcgisruntime.mapping.view.OriginCameraChangedListener): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCameraController;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class TranslationFactorChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.TranslationFactorChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.TransformationMatrixCameraController);
						public getSource(): com.esri.arcgisruntime.mapping.view.TransformationMatrixCameraController;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class TranslationFactorChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.TranslationFactorChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.TranslationFactorChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							translationFactorChanged(param0: com.esri.arcgisruntime.mapping.view.TranslationFactorChangedEvent): void;
						});
						public constructor();
						public translationFactorChanged(param0: com.esri.arcgisruntime.mapping.view.TranslationFactorChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class UsngGrid extends com.esri.arcgisruntime.mapping.view.Grid {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.UsngGrid>;
						public constructor();
						public setLabelUnit(param0: com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGrid);
						public getLabelUnit(): com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit;
					}
					export module UsngGrid {
						export class LabelUnit {
							public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit>;
							public static KILOMETERS_METERS: com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit;
							public static METERS: com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit;
							public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit;
							public static values(): native.Array<com.esri.arcgisruntime.mapping.view.UsngGrid.LabelUnit>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class UtmGrid extends com.esri.arcgisruntime.mapping.view.Grid {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.UtmGrid>;
						public constructor();
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGrid);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class ViewLabelProperties {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.ViewLabelProperties>;
						public isAnimationEnabled(): boolean;
						public setAnimationEnabled(param0: boolean): void;
						public constructor();
						public setLabelingEnabled(param0: boolean): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreViewLabelProperties): com.esri.arcgisruntime.mapping.view.ViewLabelProperties;
						public isLabelingEnabled(): boolean;
						public constructor(param0: boolean, param1: boolean);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreViewLabelProperties;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class ViewpointChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.ViewpointChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.mapping.view.GeoView);
						public getSource(): com.esri.arcgisruntime.mapping.view.GeoView;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class ViewpointChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.ViewpointChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.mapping.view.ViewpointChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							viewpointChanged(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedEvent): void;
						});
						public constructor();
						public viewpointChanged(param0: com.esri.arcgisruntime.mapping.view.ViewpointChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module mapping {
				export module view {
					export class WrapAroundMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.mapping.view.WrapAroundMode>;
						public static DISABLED: com.esri.arcgisruntime.mapping.view.WrapAroundMode;
						public static ENABLE_WHEN_SUPPORTED: com.esri.arcgisruntime.mapping.view.WrapAroundMode;
						public static values(): native.Array<com.esri.arcgisruntime.mapping.view.WrapAroundMode>;
						public static valueOf(param0: string): com.esri.arcgisruntime.mapping.view.WrapAroundMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module navigation {
				export class DestinationStatus {
					public static class: java.lang.Class<com.esri.arcgisruntime.navigation.DestinationStatus>;
					public static NOT_REACHED: com.esri.arcgisruntime.navigation.DestinationStatus;
					public static APPROACHING: com.esri.arcgisruntime.navigation.DestinationStatus;
					public static REACHED: com.esri.arcgisruntime.navigation.DestinationStatus;
					public static valueOf(param0: string): com.esri.arcgisruntime.navigation.DestinationStatus;
					public static values(): native.Array<com.esri.arcgisruntime.navigation.DestinationStatus>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module navigation {
				export class RouteTracker {
					public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker>;
					public removeRerouteStartedListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedListener): boolean;
					public setVoiceGuidanceUnitSystem(param0: com.esri.arcgisruntime.UnitSystem): void;
					public cancelRerouting(): void;
					public generateVoiceGuidance(): com.esri.arcgisruntime.navigation.VoiceGuidance;
					public constructor(param0: globalAndroid.content.Context, param1: com.esri.arcgisruntime.tasks.networkanalysis.RouteResult, param2: number);
					public getVoiceGuidanceUnitSystem(): com.esri.arcgisruntime.UnitSystem;
					public removeRerouteCompletedListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedListener): boolean;
					public trackLocationAsync(param0: com.esri.arcgisruntime.location.LocationDataSource.Location): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public isReroutingEnabled(): boolean;
					public addTrackingStatusChangedListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedListener): void;
					public switchToNextDestinationAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public removeTrackingStatusChangedListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedListener): boolean;
					public enableReroutingAsync(param0: com.esri.arcgisruntime.tasks.networkanalysis.RouteTask, param1: com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters, param2: com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy, param3: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public addNewVoiceGuidanceListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceListener): void;
					public getTrackingStatus(): com.esri.arcgisruntime.navigation.TrackingStatus;
					public disableRerouting(): void;
					public removeNewVoiceGuidanceListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceListener): boolean;
					public addRerouteCompletedListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedListener): void;
					public addRerouteStartedListener(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedListener): void;
				}
				export module RouteTracker {
					export class NewVoiceGuidanceEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceEvent>;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker, param1: com.esri.arcgisruntime.navigation.VoiceGuidance);
						public getSource(): com.esri.arcgisruntime.navigation.RouteTracker;
						public getVoiceGuidance(): com.esri.arcgisruntime.navigation.VoiceGuidance;
					}
					export class NewVoiceGuidanceListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.navigation.RouteTracker$NewVoiceGuidanceListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onNewVoiceGuidance(param0: com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceEvent): void;
						});
						public constructor();
						public onNewVoiceGuidance(param0: com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceEvent): void;
					}
					export class RerouteCompletedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedEvent>;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker, param1: com.esri.arcgisruntime.navigation.TrackingStatus, param2: com.esri.arcgisruntime.ArcGISRuntimeException);
						public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getSource(): com.esri.arcgisruntime.navigation.RouteTracker;
						public getTrackingStatus(): com.esri.arcgisruntime.navigation.TrackingStatus;
					}
					export class RerouteCompletedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.navigation.RouteTracker$RerouteCompletedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onRerouteCompleted(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedEvent): void;
						});
						public constructor();
						public onRerouteCompleted(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedEvent): void;
					}
					export class RerouteStartedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedEvent>;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker);
						public getSource(): com.esri.arcgisruntime.navigation.RouteTracker;
					}
					export class RerouteStartedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.navigation.RouteTracker$RerouteStartedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onRerouteStarted(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedEvent): void;
						});
						public constructor();
						public onRerouteStarted(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedEvent): void;
					}
					export class ReroutingStrategy {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy>;
						public static TO_NEXT_WAYPOINT: com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy;
						public static TO_NEXT_STOP: com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy;
						public static RESEQUENCE_STOPS_ONLY: com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy;
						public static values(): native.Array<com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy>;
						public static valueOf(param0: string): com.esri.arcgisruntime.navigation.RouteTracker.ReroutingStrategy;
					}
					export class TrackingStatusChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedEvent>;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker, param1: com.esri.arcgisruntime.navigation.TrackingStatus);
						public getSource(): com.esri.arcgisruntime.navigation.RouteTracker;
						public getTrackingStatus(): com.esri.arcgisruntime.navigation.TrackingStatus;
					}
					export class TrackingStatusChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.navigation.RouteTracker$TrackingStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onTrackingStatusChanged(param0: com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedEvent): void;
						});
						public constructor();
						public onTrackingStatusChanged(param0: com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedEvent): void;
					}
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.a>;
						public a(): com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceListener;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceListener);
						public a(param0: com.esri.arcgisruntime.navigation.RouteTracker.NewVoiceGuidanceEvent): void;
					}
					export class b {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.b>;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedListener);
						public a(): com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedListener;
						public a(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteCompletedEvent): void;
					}
					export class c {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.c>;
						public a(): com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedListener;
						public a(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedEvent): void;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker.RerouteStartedListener);
					}
					export class d {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.RouteTracker.d>;
						public a(param0: com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedEvent): void;
						public constructor(param0: com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedListener);
						public a(): com.esri.arcgisruntime.navigation.RouteTracker.TrackingStatusChangedListener;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module navigation {
				export class TrackingStatus {
					public static class: java.lang.Class<com.esri.arcgisruntime.navigation.TrackingStatus>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTrackingStatus): com.esri.arcgisruntime.navigation.TrackingStatus;
					public getManeuverProgress(): com.esri.arcgisruntime.navigation.TrackingStatus.Progress;
					public getDestinationProgress(): com.esri.arcgisruntime.navigation.TrackingStatus.Progress;
					public getDestinationStatus(): com.esri.arcgisruntime.navigation.DestinationStatus;
					public isOnRoute(): boolean;
					public isRouteCalculating(): boolean;
					public getDisplayLocation(): com.esri.arcgisruntime.location.LocationDataSource.Location;
					public getRouteResult(): com.esri.arcgisruntime.tasks.networkanalysis.RouteResult;
					public getRouteProgress(): com.esri.arcgisruntime.navigation.TrackingStatus.Progress;
					public getCurrentManeuverIndex(): number;
					public getRemainingDestinationCount(): number;
					public getLocationOnRoute(): com.esri.arcgisruntime.location.LocationDataSource.Location;
				}
				export module TrackingStatus {
					export class Distance {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.TrackingStatus.Distance>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTrackingDistance): com.esri.arcgisruntime.navigation.TrackingStatus.Distance;
						public getDistance(): number;
						public getDisplayText(): string;
						public getDisplayTextUnits(): com.esri.arcgisruntime.geometry.LinearUnit;
					}
					export class Progress {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.TrackingStatus.Progress>;
						public getTraversedGeometry(): com.esri.arcgisruntime.geometry.Polyline;
						public getRemainingGeometry(): com.esri.arcgisruntime.geometry.Polyline;
						public getRemainingTime(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTrackingProgress): com.esri.arcgisruntime.navigation.TrackingStatus.Progress;
						public getRemainingDistance(): com.esri.arcgisruntime.navigation.TrackingStatus.Distance;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module navigation {
				export class VoiceGuidance {
					public static class: java.lang.Class<com.esri.arcgisruntime.navigation.VoiceGuidance>;
					public getType(): com.esri.arcgisruntime.navigation.VoiceGuidance.Type;
					public getText(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreVoiceGuidance): com.esri.arcgisruntime.navigation.VoiceGuidance;
				}
				export module VoiceGuidance {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.navigation.VoiceGuidance.Type>;
						public static APPROACHING_MANEUVER: com.esri.arcgisruntime.navigation.VoiceGuidance.Type;
						public static AT_MANEUVER: com.esri.arcgisruntime.navigation.VoiceGuidance.Type;
						public static APPROACHING_DESTINATION: com.esri.arcgisruntime.navigation.VoiceGuidance.Type;
						public static values(): native.Array<com.esri.arcgisruntime.navigation.VoiceGuidance.Type>;
						public static valueOf(param0: string): com.esri.arcgisruntime.navigation.VoiceGuidance.Type;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class IconUpdatedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.IconUpdatedEvent>;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlNode;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class IconUpdatedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.IconUpdatedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.IconUpdatedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onIconUpdated(param0: com.esri.arcgisruntime.ogc.kml.IconUpdatedEvent): void;
						});
						public constructor();
						public onIconUpdated(param0: com.esri.arcgisruntime.ogc.kml.IconUpdatedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlAltitudeMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode>;
						public static CLAMP_TO_GROUND: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public static RELATIVE_TO_GROUND: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public static ABSOLUTE: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlColorMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlColorMode>;
						public static NORMAL: com.esri.arcgisruntime.ogc.kml.KmlColorMode;
						public static RANDOM: com.esri.arcgisruntime.ogc.kml.KmlColorMode;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlColorMode>;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlColorMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export abstract class KmlColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlColorStyle>;
						public getColor(): number;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle);
						public setColor(param0: number): void;
						public getColorMode(): com.esri.arcgisruntime.ogc.kml.KmlColorMode;
						public setColorMode(param0: com.esri.arcgisruntime.ogc.kml.KmlColorMode): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export abstract class KmlContainer extends com.esri.arcgisruntime.ogc.kml.KmlNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlContainer>;
						public isPartiallyVisible(): boolean;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLContainer);
						public setOpen(param0: boolean): void;
						public setListItemType(param0: com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType): void;
						public isOpen(): boolean;
						public getListItemType(): com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType;
						public getChildNodes(): java.util.List<com.esri.arcgisruntime.ogc.kml.KmlNode>;
						public onRefresh(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
					}
					export module KmlContainer {
						export class ListItemType {
							public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType>;
							public static CHECK: com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType;
							public static RADIO_FOLDER: com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType;
							public static CHECK_HIDE_CHILDREN: com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType;
							public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType>;
							public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlDataset implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlDataset>;
						public cancelLoad(): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLDataset): com.esri.arcgisruntime.ogc.kml.KmlDataset;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addKmlNodeBalloonVisibilityChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeBalloonVisibilityChangedListener): void;
						public getUri(): string;
						public addKmlNodeRefreshStatusChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeRefreshStatusChangedListener): void;
						public loadAsync(): void;
						public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlNode);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLDataset;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public removeKmlNodeRefreshStatusChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeRefreshStatusChangedListener): boolean;
						public getRootNodes(): java.util.List<com.esri.arcgisruntime.ogc.kml.KmlNode>;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public removeKmlNodeBalloonVisibilityChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeBalloonVisibilityChangedListener): boolean;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public removeKmlNetworkLinkMessageReceivedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlNetworkLinkMessageReceivedListener): boolean;
						public addKmlNetworkLinkMessageReceivedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlNetworkLinkMessageReceivedListener): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlDocument extends com.esri.arcgisruntime.ogc.kml.KmlContainer {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlDocument>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLContainer);
						public constructor();
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLDocument): com.esri.arcgisruntime.ogc.kml.KmlDocument;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlFolder extends com.esri.arcgisruntime.ogc.kml.KmlContainer {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlFolder>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLContainer);
						public constructor();
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLFolder): com.esri.arcgisruntime.ogc.kml.KmlFolder;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlGeometry>;
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode);
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode, param2: boolean, param3: boolean);
						public isTessellated(): boolean;
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode, param2: boolean);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLGeometry): com.esri.arcgisruntime.ogc.kml.KmlGeometry;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLGeometry;
						public getType(): com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type;
						public getAltitudeMode(): com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public isExtruded(): boolean;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					}
					export module KmlGeometry {
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type>;
							public static POINT: com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type;
							public static POLYLINE: com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type;
							public static POLYGON: com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type;
							public static MODEL: com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type;
							public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type;
							public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlGeometry.Type>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlGroundOverlay extends com.esri.arcgisruntime.ogc.kml.KmlNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlGroundOverlay>;
						public getColor(): number;
						public getDrawOrder(): number;
						public setIcon(param0: com.esri.arcgisruntime.ogc.kml.KmlIcon): void;
						public getAltitude(): number;
						public setColor(param0: number): void;
						public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.ogc.kml.KmlIcon);
						public getAltitudeMode(): com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public setAltitudeMode(param0: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode): void;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						public setDrawOrder(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
						public getIcon(): com.esri.arcgisruntime.ogc.kml.KmlIcon;
						public setRotation(param0: number): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLGroundOverlay): com.esri.arcgisruntime.ogc.kml.KmlGroundOverlay;
						public getRotation(): number;
						public setAltitude(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlIcon {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlIcon>;
						public getRefreshMode(): com.esri.arcgisruntime.ogc.kml.KmlRefreshMode;
						public setRefreshMode(param0: com.esri.arcgisruntime.ogc.kml.KmlRefreshMode): void;
						public getRefreshInterval(): number;
						public setRefreshInterval(param0: number): void;
						public getViewRefreshMode(): com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIcon): com.esri.arcgisruntime.ogc.kml.KmlIcon;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLIcon;
						public getURI(): string;
						public setViewRefreshMode(param0: com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode): void;
						public getViewRefreshTime(): number;
						public constructor(param0: string);
						public setViewRefreshTime(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlIconStyle extends com.esri.arcgisruntime.ogc.kml.KmlColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlIconStyle>;
						public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlIcon, param1: number);
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle);
						public getIcon(): com.esri.arcgisruntime.ogc.kml.KmlIcon;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLIconStyle): com.esri.arcgisruntime.ogc.kml.KmlIconStyle;
						public getHotSpot(): com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate;
						public setHotSpot(param0: com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate): void;
						public setHeading(param0: number): void;
						public getScale(): number;
						public setIcon(param0: com.esri.arcgisruntime.ogc.kml.KmlIcon): void;
						public setScale(param0: number): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLIconStyle;
						public getHeading(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlImageCoordinate {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate;
						public constructor(param0: number, param1: number, param2: com.esri.arcgisruntime.ogc.kml.KmlUnitsType, param3: com.esri.arcgisruntime.ogc.kml.KmlUnitsType);
						public getX(): number;
						public getY(): number;
						public getYUnits(): com.esri.arcgisruntime.ogc.kml.KmlUnitsType;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLImageCoordinate): com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate;
						public getXUnits(): com.esri.arcgisruntime.ogc.kml.KmlUnitsType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlLabelStyle extends com.esri.arcgisruntime.ogc.kml.KmlColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlLabelStyle>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLLabelStyle;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLLabelStyle): com.esri.arcgisruntime.ogc.kml.KmlLabelStyle;
						public getScale(): number;
						public setScale(param0: number): void;
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlLineStyle extends com.esri.arcgisruntime.ogc.kml.KmlColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlLineStyle>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle);
						public setWidth(param0: number): void;
						public getWidth(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLLineStyle;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLLineStyle): com.esri.arcgisruntime.ogc.kml.KmlLineStyle;
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlNetworkLink extends com.esri.arcgisruntime.ogc.kml.KmlNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNetworkLink>;
						public setRefreshMode(param0: com.esri.arcgisruntime.ogc.kml.KmlRefreshMode): void;
						public setUri(param0: string): void;
						public hasRefreshVisibility(): boolean;
						public setViewRefreshTime(param0: number): void;
						public getRefreshMode(): com.esri.arcgisruntime.ogc.kml.KmlRefreshMode;
						public getUri(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNetworkLink): com.esri.arcgisruntime.ogc.kml.KmlNetworkLink;
						public isOpen(): boolean;
						public setCanFlyToNode(param0: boolean): void;
						public canFlyToNode(): boolean;
						public getRefreshInterval(): number;
						public getViewRefreshMode(): com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
						public setOpen(param0: boolean): void;
						public setViewRefreshMode(param0: com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode): void;
						public setListItemType(param0: com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType): void;
						public getChildNodes(): java.util.List<com.esri.arcgisruntime.ogc.kml.KmlNode>;
						public refresh(): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
						public isPartiallyVisible(): boolean;
						public setRefreshInterval(param0: number): void;
						public setRefreshVisibility(param0: boolean): void;
						public getViewRefreshTime(): number;
						public getListItemType(): com.esri.arcgisruntime.ogc.kml.KmlContainer.ListItemType;
						public onRefresh(): void;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlNetworkLinkMessageReceivedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNetworkLinkMessageReceivedEvent>;
						public getNetworkLink(): com.esri.arcgisruntime.ogc.kml.KmlNetworkLink;
						public getMessage(): string;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlDataset;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlNetworkLinkMessageReceivedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNetworkLinkMessageReceivedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.KmlNetworkLinkMessageReceivedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onKmlNetworkLinkMessageReceived(param0: com.esri.arcgisruntime.ogc.kml.KmlNetworkLinkMessageReceivedEvent): void;
						});
						public constructor();
						public onKmlNetworkLinkMessageReceived(param0: com.esri.arcgisruntime.ogc.kml.KmlNetworkLinkMessageReceivedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export abstract class KmlNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNode>;
						public getUxIconColor(): number;
						public setSnippetMaxLines(param0: number): void;
						public getRefreshStatus(): com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
						public setHighlighted(param0: boolean): void;
						public setId(param0: string): void;
						public setHighlightStyle(param0: com.esri.arcgisruntime.ogc.kml.KmlStyle): void;
						public getAddress(): string;
						public getUxIconId(): number;
						public getName(): string;
						public removeRefreshStatusChangedListener(param0: com.esri.arcgisruntime.ogc.kml.RefreshStatusChangedListener): boolean;
						public isVisible(): boolean;
						public getRefreshError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getHighlightStyle(): com.esri.arcgisruntime.ogc.kml.KmlStyle;
						public setAddress(param0: string): void;
						public getBalloonContent(): string;
						public getId(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public getStyle(): com.esri.arcgisruntime.ogc.kml.KmlStyle;
						public getSnippet(): string;
						public getViewpoint(): com.esri.arcgisruntime.ogc.kml.KmlViewpoint;
						public setName(param0: string): void;
						public getSnippetMaxLines(): number;
						public setDescription(param0: string): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
						public addRefreshStatusChangedListener(param0: com.esri.arcgisruntime.ogc.kml.RefreshStatusChangedListener): void;
						public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
						public setViewpoint(param0: com.esri.arcgisruntime.ogc.kml.KmlViewpoint): void;
						public setStyle(param0: com.esri.arcgisruntime.ogc.kml.KmlStyle): void;
						public setSnippet(param0: string): void;
						public getUxIcon(): native.Array<number>;
						public getDescription(): string;
						public setVisible(param0: boolean): void;
						public removeIconUpdatedEventListener(param0: com.esri.arcgisruntime.ogc.kml.IconUpdatedListener): boolean;
						public onRefresh(): void;
						public getBalloonBackgroundColor(): number;
						public isHighlighted(): boolean;
						public addIconUpdatedEventListener(param0: com.esri.arcgisruntime.ogc.kml.IconUpdatedListener): void;
						public saveAsAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public getParentNode(): com.esri.arcgisruntime.ogc.kml.KmlNode;
					}
					export module KmlNode {
						export class RefreshStatus {
							public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus>;
							public static NONE: com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
							public static IN_PROGRESS: com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
							public static COMPLETED: com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
							public static FAILED: com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
							public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
							public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlNodeBalloonVisibilityChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNodeBalloonVisibilityChangedEvent>;
						public isBalloonVisible(): boolean;
						public getNode(): com.esri.arcgisruntime.ogc.kml.KmlNode;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlDataset;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlNodeBalloonVisibilityChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNodeBalloonVisibilityChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.KmlNodeBalloonVisibilityChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							kmlNodeBalloonVisibilityChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeBalloonVisibilityChangedEvent): void;
						});
						public constructor();
						public kmlNodeBalloonVisibilityChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeBalloonVisibilityChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlNodeRefreshStatusChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNodeRefreshStatusChangedEvent>;
						public getRefreshStatus(): com.esri.arcgisruntime.ogc.kml.KmlNode.RefreshStatus;
						public getNode(): com.esri.arcgisruntime.ogc.kml.KmlNode;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlDataset;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlNodeRefreshStatusChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlNodeRefreshStatusChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.KmlNodeRefreshStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onKmlNodeRefreshStatusChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeRefreshStatusChangedEvent): void;
						});
						public constructor();
						public onKmlNodeRefreshStatusChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlNodeRefreshStatusChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlPhotoOverlay extends com.esri.arcgisruntime.ogc.kml.KmlNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlPhotoOverlay>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.dh): com.esri.arcgisruntime.ogc.kml.KmlPhotoOverlay;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlPlacemark extends com.esri.arcgisruntime.ogc.kml.KmlNode implements com.esri.arcgisruntime.mapping.GeoElement {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlPlacemark>;
						public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlGeometry);
						public getGraphicType(): com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
						public getGeometries(): java.util.List<com.esri.arcgisruntime.ogc.kml.KmlGeometry>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLPlacemark): com.esri.arcgisruntime.ogc.kml.KmlPlacemark;
						public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
						public getAttributes(): java.util.Map<string,any>;
					}
					export module KmlPlacemark {
						export class GraphicType {
							public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType>;
							public static NONE: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static POINT: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static EXTRUDED_POINT: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static POLYLINE: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static EXTRUDED_POLYLINE: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static POLYGON: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static EXTRUDED_POLYGON: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static MODEL: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static MULTI_GEOMETRY: com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
							public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType>;
							public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlPlacemark.GraphicType;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlPolygonStyle extends com.esri.arcgisruntime.ogc.kml.KmlColorStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlPolygonStyle>;
						public setOutlined(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLColorStyle);
						public isFilled(): boolean;
						public constructor(param0: number);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLPolygonStyle): com.esri.arcgisruntime.ogc.kml.KmlPolygonStyle;
						public isOutlined(): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLPolygonStyle;
						public setFilled(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlRefreshMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlRefreshMode>;
						public static ON_CHANGE: com.esri.arcgisruntime.ogc.kml.KmlRefreshMode;
						public static ON_INTERVAL: com.esri.arcgisruntime.ogc.kml.KmlRefreshMode;
						public static ON_EXPIRE: com.esri.arcgisruntime.ogc.kml.KmlRefreshMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlRefreshMode;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlRefreshMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlScreenOverlay extends com.esri.arcgisruntime.ogc.kml.KmlNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlScreenOverlay>;
						public getColor(): number;
						public getOverlayCoordinate(): com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate;
						public getScreenCoordinate(): com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate;
						public getDrawOrder(): number;
						public setScreenCoordinate(param0: com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLScreenOverlay): com.esri.arcgisruntime.ogc.kml.KmlScreenOverlay;
						public setIcon(param0: com.esri.arcgisruntime.ogc.kml.KmlIcon): void;
						public setColor(param0: number): void;
						public setRotationCoordinate(param0: com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate): void;
						public setDrawOrder(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreKMLNode);
						public getRotationCoordinate(): com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate;
						public setOverlayCoordinate(param0: com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate): void;
						public setSize(param0: com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate): void;
						public getIcon(): com.esri.arcgisruntime.ogc.kml.KmlIcon;
						public setRotation(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlIcon);
						public getRotation(): number;
						public getSize(): com.esri.arcgisruntime.ogc.kml.KmlImageCoordinate;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlStyle>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLStyle): com.esri.arcgisruntime.ogc.kml.KmlStyle;
						public constructor();
						public getLineStyle(): com.esri.arcgisruntime.ogc.kml.KmlLineStyle;
						public setIconStyle(param0: com.esri.arcgisruntime.ogc.kml.KmlIconStyle): void;
						public setPolygonStyle(param0: com.esri.arcgisruntime.ogc.kml.KmlPolygonStyle): void;
						public getIconStyle(): com.esri.arcgisruntime.ogc.kml.KmlIconStyle;
						public getPolygonStyle(): com.esri.arcgisruntime.ogc.kml.KmlPolygonStyle;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLStyle;
						public setLabelStyle(param0: com.esri.arcgisruntime.ogc.kml.KmlLabelStyle): void;
						public setLineStyle(param0: com.esri.arcgisruntime.ogc.kml.KmlLineStyle): void;
						public getLabelStyle(): com.esri.arcgisruntime.ogc.kml.KmlLabelStyle;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTour extends com.esri.arcgisruntime.ogc.kml.KmlNode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTour>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLTour;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLTour): com.esri.arcgisruntime.ogc.kml.KmlTour;
						public addStatusChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlTourStatusChangedListener): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLNode;
						public removeStatusChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlTourStatusChangedListener): boolean;
						public getTourStatus(): com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourController {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourController>;
						public addCurrentPositionChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedListener): void;
						public getTotalDuration(): number;
						public constructor(param0: globalAndroid.content.Context);
						public getTour(): com.esri.arcgisruntime.ogc.kml.KmlTour;
						public pause(): void;
						public addTotalDurationChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedListener): void;
						public removeCurrentChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedListener): boolean;
						public setTour(param0: com.esri.arcgisruntime.ogc.kml.KmlTour): void;
						public removeTotalDurationChangedListener(param0: com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedListener): boolean;
						public play(): void;
						public reset(): void;
						public getCurrentPosition(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourCurrentPositionChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedEvent>;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlTourController;
						public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlTourController, param1: number);
						public getCurrentPosition(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourCurrentPositionChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							currentPositionChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedEvent): void;
						});
						public constructor();
						public currentPositionChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlTourCurrentPositionChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourStatus {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourStatus>;
						public static NOT_INITIALIZED: com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
						public static INITIALIZING: com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
						public static INITIALIZED: com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
						public static PLAYING: com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
						public static PAUSED: com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
						public static COMPLETED: com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlTourStatus>;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourStatusChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourStatusChangedEvent>;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlTour;
						public getStatus(): com.esri.arcgisruntime.ogc.kml.KmlTourStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourStatusChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourStatusChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.KmlTourStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							kmlTourStatusChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlTourStatusChangedEvent): void;
						});
						public constructor();
						public kmlTourStatusChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlTourStatusChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourTotalDurationChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedEvent>;
						public getTotalDuration(): number;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlTourController;
						public constructor(param0: com.esri.arcgisruntime.ogc.kml.KmlTourController, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlTourTotalDurationChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							totalDurationChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedEvent): void;
						});
						public constructor();
						public totalDurationChanged(param0: com.esri.arcgisruntime.ogc.kml.KmlTourTotalDurationChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlUnitsType {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlUnitsType>;
						public static FRACTION: com.esri.arcgisruntime.ogc.kml.KmlUnitsType;
						public static PIXELS: com.esri.arcgisruntime.ogc.kml.KmlUnitsType;
						public static INSET_PIXELS: com.esri.arcgisruntime.ogc.kml.KmlUnitsType;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlUnitsType;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlUnitsType>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlViewRefreshMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode>;
						public static NEVER: com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
						public static ON_STOP: com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
						public static ON_REQUEST: com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
						public static ON_REGION: com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode>;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlViewRefreshMode;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class KmlViewpoint {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlViewpoint>;
						public getType(): com.esri.arcgisruntime.ogc.kml.KmlViewpoint.Type;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint;
						public static createWithViewpoint(param0: com.esri.arcgisruntime.mapping.Viewpoint): com.esri.arcgisruntime.ogc.kml.KmlViewpoint;
						public static createLookAtViewpoint(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode): com.esri.arcgisruntime.ogc.kml.KmlViewpoint;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreKMLViewpoint): com.esri.arcgisruntime.ogc.kml.KmlViewpoint;
						public getRoll(): number;
						public getPitch(): number;
						public static createCameraViewpoint(param0: com.esri.arcgisruntime.geometry.Point, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode): com.esri.arcgisruntime.ogc.kml.KmlViewpoint;
						public getLocation(): com.esri.arcgisruntime.geometry.Point;
						public getAltitudeMode(): com.esri.arcgisruntime.ogc.kml.KmlAltitudeMode;
						public getRange(): number;
						public getHeading(): number;
					}
					export module KmlViewpoint {
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.KmlViewpoint.Type>;
							public static CAMERA: com.esri.arcgisruntime.ogc.kml.KmlViewpoint.Type;
							public static LOOK_AT: com.esri.arcgisruntime.ogc.kml.KmlViewpoint.Type;
							public static values(): native.Array<com.esri.arcgisruntime.ogc.kml.KmlViewpoint.Type>;
							public static valueOf(param0: string): com.esri.arcgisruntime.ogc.kml.KmlViewpoint.Type;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class RefreshStatusChangedEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.RefreshStatusChangedEvent>;
						public getSource(): com.esri.arcgisruntime.ogc.kml.KmlNode;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module kml {
					export class RefreshStatusChangedListener {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.kml.RefreshStatusChangedListener>;
						/**
						 * Constructs a new instance of the com.esri.arcgisruntime.ogc.kml.RefreshStatusChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onRefreshStatusChanged(param0: com.esri.arcgisruntime.ogc.kml.RefreshStatusChangedEvent): void;
						});
						public constructor();
						public onRefreshStatusChanged(param0: com.esri.arcgisruntime.ogc.kml.RefreshStatusChangedEvent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wfs {
					export class OgcAxisOrder {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder>;
						public static AUTO: com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder;
						public static SWAP: com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder;
						public static NO_SWAP: com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wfs {
					export class WfsFeatureTable extends com.esri.arcgisruntime.data.FeatureTable implements com.esri.arcgisruntime.io.RemoteResource {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wfs.WfsFeatureTable>;
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public constructor(param0: com.esri.arcgisruntime.ogc.wfs.WfsLayerInfo);
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
						public getFeatureRequestMode(): com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode;
						public getPreferredSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getFilterAxisOrder(): com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder;
						public getUri(): string;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFeatureTable);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWFSFeatureTable;
						public setAxisOrder(param0: com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder): void;
						public constructor(param0: string, param1: string);
						public loadAsync(): void;
						public setPopupEnabled(param0: boolean): void;
						public isPopupEnabled(): boolean;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getLayerInfo(): com.esri.arcgisruntime.ogc.wfs.WfsLayerInfo;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public setFilterAxisOrder(param0: com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder): void;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWFSFeatureTable): com.esri.arcgisruntime.ogc.wfs.WfsFeatureTable;
						public setPreferredSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public populateFromServiceAsync(param0: com.esri.arcgisruntime.data.QueryParameters, param1: boolean, param2: java.lang.Iterable<string>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
						public getPopupDefinition(): com.esri.arcgisruntime.mapping.popup.PopupDefinition;
						public setPopupDefinition(param0: com.esri.arcgisruntime.mapping.popup.PopupDefinition): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFeatureTable;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public setFeatureRequestMode(param0: com.esri.arcgisruntime.data.ServiceFeatureTable.FeatureRequestMode): void;
						public populateFromServiceAsync(param0: string, param1: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.data.FeatureQueryResult>;
						public getAxisOrder(): com.esri.arcgisruntime.ogc.wfs.OgcAxisOrder;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wfs {
					export class WfsLayerInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wfs.WfsLayerInfo>;
						public getKeywords(): java.util.List<string>;
						public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWFSLayerInfo): com.esri.arcgisruntime.ogc.wfs.WfsLayerInfo;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWFSLayerInfo;
						public getSpatialReferences(): java.util.List<com.esri.arcgisruntime.geometry.SpatialReference>;
						public getDescription(): string;
						public getName(): string;
						public getTitle(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wfs {
					export class WfsService implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wfs.WfsService>;
						public getServiceInfo(): com.esri.arcgisruntime.ogc.wfs.WfsServiceInfo;
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWFSService): com.esri.arcgisruntime.ogc.wfs.WfsService;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getUri(): string;
						public loadAsync(): void;
						public getCustomParameters(): java.util.Map<string,string>;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wfs {
					export class WfsServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wfs.WfsServiceInfo>;
						public getKeywords(): java.util.List<string>;
						public getLayerInfos(): java.util.List<com.esri.arcgisruntime.ogc.wfs.WfsLayerInfo>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWFSServiceInfo): com.esri.arcgisruntime.ogc.wfs.WfsServiceInfo;
						public getDescription(): string;
						public getTitle(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wms {
					export class WmsFeature extends com.esri.arcgisruntime.mapping.GeoElement {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wms.WmsFeature>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMSFeature;
						public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public computeCalloutLocation(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.mapping.view.MapView): com.esri.arcgisruntime.geometry.Point;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMSFeature): com.esri.arcgisruntime.ogc.wms.WmsFeature;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						public getAttributes(): java.util.Map<string,any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wms {
					export class WmsLayerInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wms.WmsLayerInfo>;
						public getKeywords(): java.util.List<string>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMSLayerInfo;
						public getFixedImageWidth(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMSLayerInfo): com.esri.arcgisruntime.ogc.wms.WmsLayerInfo;
						public getSpatialReferences(): java.util.List<com.esri.arcgisruntime.geometry.SpatialReference>;
						public getName(): string;
						public getTitle(): string;
						public getFixedImageHeight(): number;
						public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
						public isQueryable(): boolean;
						public getDescription(): string;
						public getStyles(): java.util.List<string>;
						public isOpaque(): boolean;
						public getSublayerInfos(): java.util.List<com.esri.arcgisruntime.ogc.wms.WmsLayerInfo>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wms {
					export class WmsService implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wms.WmsService>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMSService): com.esri.arcgisruntime.ogc.wms.WmsService;
						public getServiceInfo(): com.esri.arcgisruntime.ogc.wms.WmsServiceInfo;
						public cancelLoad(): void;
						public getVersion(): com.esri.arcgisruntime.ogc.wms.WmsVersion;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getUri(): string;
						public loadAsync(): void;
						public getCustomParameters(): java.util.Map<string,string>;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wms {
					export class WmsServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wms.WmsServiceInfo>;
						public getLayerInfos(): java.util.List<com.esri.arcgisruntime.ogc.wms.WmsLayerInfo>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMSServiceInfo): com.esri.arcgisruntime.ogc.wms.WmsServiceInfo;
						public getKeywords(): java.util.List<string>;
						public getImageFormats(): java.util.List<com.esri.arcgisruntime.layers.ArcGISMapImageLayer.ImageFormat>;
						public getDescription(): string;
						public getName(): string;
						public getTitle(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wms {
					export class WmsVersion {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wms.WmsVersion>;
						public static V1_1_0: com.esri.arcgisruntime.ogc.wms.WmsVersion;
						public static V1_1_1: com.esri.arcgisruntime.ogc.wms.WmsVersion;
						public static V1_3_0: com.esri.arcgisruntime.ogc.wms.WmsVersion;
						public static values(): native.Array<com.esri.arcgisruntime.ogc.wms.WmsVersion>;
						public static valueOf(param0: string): com.esri.arcgisruntime.ogc.wms.WmsVersion;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wmts {
					export class WmtsLayerInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo>;
						public getKeywords(): java.util.List<string>;
						public getImageFormats(): java.util.List<com.esri.arcgisruntime.arcgisservices.TileInfo.ImageFormat>;
						public getTileMatrixSets(): java.util.List<com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet>;
						public getId(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo): com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo;
						public getDescription(): string;
						public getStyles(): java.util.List<string>;
						public getTitle(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMTSLayerInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wmts {
					export class WmtsService implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wmts.WmtsService>;
						public getServiceInfo(): com.esri.arcgisruntime.ogc.wmts.WmtsServiceInfo;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSService): com.esri.arcgisruntime.ogc.wmts.WmtsService;
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMTSService;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getUri(): string;
						public loadAsync(): void;
						public getCustomParameters(): java.util.Map<string,string>;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wmts {
					export class WmtsServiceInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wmts.WmtsServiceInfo>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSServiceInfo): com.esri.arcgisruntime.ogc.wmts.WmtsServiceInfo;
						public getKeywords(): java.util.List<string>;
						public getVersion(): string;
						public getTileMatrixSets(): java.util.List<com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet>;
						public getLayerInfos(): java.util.List<com.esri.arcgisruntime.ogc.wmts.WmtsLayerInfo>;
						public getDescription(): string;
						public getTitle(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMTSServiceInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module ogc {
				export module wmts {
					export class WmtsTileMatrixSet {
						public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet;
						public getKeywords(): java.util.List<string>;
						public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
						public getTileMatrices(): java.util.List<com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet.TileMatrix>;
						public getId(): string;
						public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getWellKnownScaleSetId(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrixSet): com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet;
						public getDescription(): string;
						public getTitle(): string;
					}
					export module WmtsTileMatrixSet {
						export class TileMatrix {
							public static class: java.lang.Class<com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet.TileMatrix>;
							public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrix): com.esri.arcgisruntime.ogc.wmts.WmtsTileMatrixSet.TileMatrix;
							public getId(): string;
							public getScaleDenominator(): number;
							public getInternal(): com.esri.arcgisruntime.internal.jni.CoreWMTSTileMatrix;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class ElevationServiceInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.ElevationServiceInfo>;
					public getId(): string;
					public getLayerType(): string;
					public getUrl(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class GeocodeServiceInfo {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.GeocodeServiceInfo>;
					public getSouthLat(): string;
					public isSupportsSuggest(): boolean;
					public getUrl(): string;
					public getName(): string;
					public getPlaceHolder(): string;
					public getSingleLineFieldName(): string;
					public getNorthLat(): string;
					public getEastLon(): string;
					public isSupportsBatchGeocoding(): boolean;
					public isSupportsPlaceFinding(): boolean;
					public getZoomScale(): number;
					public getWestLon(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class HelperServices {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.HelperServices>;
					public getHydrologyService(): string;
					public getSyncVrpService(): string;
					public getAsyncODCostMatrixService(): string;
					public getSyncClosestFacilityService(): string;
					public getAsyncElevationService(): string;
					public getTrafficService(): string;
					public getAsyncServiceAreaService(): string;
					public getGeocodeServices(): java.util.List<com.esri.arcgisruntime.portal.GeocodeServiceInfo>;
					public getAsyncVrpService(): string;
					public getAsyncClosestFacilityService(): string;
					public getLocationTrackingService(): string;
					public getPrintService(): string;
					public getAsyncRouteService(): string;
					public getAsyncLocationAllocationService(): string;
					public getSyncServiceAreaService(): string;
					public getDefaultElevationServices(): java.util.List<com.esri.arcgisruntime.portal.ElevationServiceInfo>;
					public getSyncRouteService(): string;
					public getGeometryService(): string;
					public getGeoenrichmentService(): string;
					public getSyncElevationService(): string;
					public getAnalysisService(): string;
				}
				export module HelperServices {
					export class a {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.HelperServices.a>;
						public a(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class Portal implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.Portal>;
					public setLoginRequired(param0: boolean): void;
					public fetchFeaturedItemsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalItem>>;
					public constructor(param0: string);
					public fetchBasemapsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.Basemap>>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public addCredentialChangedListener(param0: com.esri.arcgisruntime.security.CredentialChangedListener): void;
					public findGroupsAsync(param0: com.esri.arcgisruntime.portal.PortalQueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalQueryResultSet<com.esri.arcgisruntime.portal.PortalGroup>>;
					public fetchLicenseInfoAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.LicenseInfo>;
					public getUri(): string;
					public getPortalInfo(): com.esri.arcgisruntime.portal.PortalInfo;
					public fetchVectorBasemapsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.mapping.Basemap>>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public fetchHomePageFeaturedContentAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalItem>>;
					public loadAsync(): void;
					public setForceOAuth(param0: boolean): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public postRequestAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<string>;
					public constructor(param0: string, param1: boolean);
					public findItemsAsync(param0: com.esri.arcgisruntime.portal.PortalQueryParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalQueryResultSet<com.esri.arcgisruntime.portal.PortalItem>>;
					public static fetchLoginTypeForUrlAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.Portal.LoginType>;
					public getUser(): com.esri.arcgisruntime.portal.PortalUser;
					public getSharingUrl(): string;
					public removeCredentialChangedListener(param0: com.esri.arcgisruntime.security.CredentialChangedListener): boolean;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public sendRequestAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<string>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public fetchFeaturedGroupsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalGroup>>;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public isLoginRequired(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CorePortal;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePortal): com.esri.arcgisruntime.portal.Portal;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module Portal {
					export class LoginType {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.Portal.LoginType>;
						public static CLIENT_CERTIFICATE: com.esri.arcgisruntime.portal.Portal.LoginType;
						public static OAUTH: com.esri.arcgisruntime.portal.Portal.LoginType;
						public static USERNAME_PASSWORD: com.esri.arcgisruntime.portal.Portal.LoginType;
						public static UNKNOWN: com.esri.arcgisruntime.portal.Portal.LoginType;
						public static values(): native.Array<com.esri.arcgisruntime.portal.Portal.LoginType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.Portal.LoginType;
					}
					export class Mode {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.Portal.Mode>;
						public static SINGLE_TENANT: com.esri.arcgisruntime.portal.Portal.Mode;
						public static MULTI_TENANT: com.esri.arcgisruntime.portal.Portal.Mode;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.Portal.Mode;
						public static values(): native.Array<com.esri.arcgisruntime.portal.Portal.Mode>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalFolder {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalFolder>;
					public getFolderId(): string;
					public getTitle(): string;
					public getUsername(): string;
					public getCreated(): java.util.Calendar;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalGroup extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalGroup>;
					public getGroupDescription(): string;
					public getTitle(): string;
					public toJson(): string;
					public getGroupId(): string;
					public fetchThumbnailAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					public getAccess(): com.esri.arcgisruntime.portal.PortalGroup.Access;
					public getPortal(): com.esri.arcgisruntime.portal.Portal;
					public getSortOrder(): com.esri.arcgisruntime.portal.PortalGroup.SortOrder;
					public fetchGroupUsersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalGroupUsers>;
					public getUnknownJson(): java.util.Map<string,any>;
					public getModified(): java.util.Calendar;
					public getSortField(): com.esri.arcgisruntime.portal.PortalGroup.SortField;
					public getOwner(): string;
					public static fromJson(param0: string, param1: com.esri.arcgisruntime.portal.Portal): com.esri.arcgisruntime.portal.PortalGroup;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public isInvitationOnly(): boolean;
					public getCreated(): java.util.Calendar;
					public getSnippet(): string;
					public getThumbnailFileName(): string;
					public getTags(): java.util.List<string>;
					public constructor(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: com.esri.arcgisruntime.portal.PortalGroup.SortField, param8: com.esri.arcgisruntime.portal.PortalGroup.SortOrder, param9: java.util.List<string>, param10: number, param11: number, param12: com.esri.arcgisruntime.portal.PortalGroup.Access, param13: boolean, param14: boolean, param15: java.util.Map<string,any>, param16: java.util.Map<string,any>);
					public findItemsAsync(param0: com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalGroupContentSearchResultSet>;
					public getPhone(): string;
					public isViewOnly(): boolean;
				}
				export module PortalGroup {
					export class Access {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalGroup.Access>;
						public static PRIVATE: com.esri.arcgisruntime.portal.PortalGroup.Access;
						public static ORGANIZATION: com.esri.arcgisruntime.portal.PortalGroup.Access;
						public static PUBLIC: com.esri.arcgisruntime.portal.PortalGroup.Access;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalGroup.Access;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalGroup.Access>;
						public toString(): string;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalGroup.Access;
					}
					export class SortField {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalGroup.SortField>;
						public static TITLE: com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public static OWNER: com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public static CREATED: com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public static MODIFIED: com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public static AVERAGE_RATING: com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public static VIEW_COUNT: com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalGroup.SortField>;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalGroup.SortField;
						public toString(): string;
					}
					export class SortOrder {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalGroup.SortOrder>;
						public static ASCENDING: com.esri.arcgisruntime.portal.PortalGroup.SortOrder;
						public static DESCENDING: com.esri.arcgisruntime.portal.PortalGroup.SortOrder;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalGroup.SortOrder>;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalGroup.SortOrder;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalGroupContentSearchParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters>;
					public static createForItemsWithTypeAndOwnerAndSearchString(param0: com.esri.arcgisruntime.portal.PortalItem.Type, param1: string, param2: string): com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters;
					public setSortField(param0: string): void;
					public getStartIndex(): number;
					public constructor(param0: string);
					public setLimit(param0: number): void;
					public static createForItemsWithTypes(param0: java.lang.Iterable<com.esri.arcgisruntime.portal.PortalItem.Type>, param1: string, param2: string): com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters;
					public getLimit(): number;
					public getSortOrder(): com.esri.arcgisruntime.portal.PortalGroup.SortOrder;
					public constructor(param0: string, param1: com.esri.arcgisruntime.geometry.Envelope);
					public setStartIndex(param0: number): void;
					public static createForItemsWithTypeAndSearchString(param0: com.esri.arcgisruntime.portal.PortalItem.Type, param1: string): com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters;
					public setSortOrder(param0: com.esri.arcgisruntime.portal.PortalGroup.SortOrder): void;
					public static createForItemWithId(param0: string): com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters;
					public isSearchPublic(): boolean;
					public setBoundingBox(param0: com.esri.arcgisruntime.geometry.Envelope): void;
					public static createForItemsWithOwner(param0: string): com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters;
					public constructor(param0: com.esri.arcgisruntime.geometry.Envelope);
					public constructor(param0: string, param1: number);
					public getBoundingBox(): com.esri.arcgisruntime.geometry.Envelope;
					public getCategories(): java.util.List<string>;
					public getQuery(): string;
					public setSearchPublic(param0: boolean): void;
					public getSortField(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalGroupContentSearchResultSet {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalGroupContentSearchResultSet>;
					public getTotalResults(): number;
					public getNextSearchParameters(): com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters;
					public getResults(): java.util.List<com.esri.arcgisruntime.portal.PortalItem>;
					public getSearchParameters(): com.esri.arcgisruntime.portal.PortalGroupContentSearchParameters;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalGroupUsers {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalGroupUsers>;
					public getUsers(): java.util.List<string>;
					public getAdmins(): java.util.List<string>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalInfo extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalInfo>;
					public getBingKey(): string;
					public fetchOrganizationThumbnailAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					public getAccess(): com.esri.arcgisruntime.portal.PortalInfo.Access;
					public getCulture(): string;
					public getPortalMode(): com.esri.arcgisruntime.portal.Portal.Mode;
					public isCommentsEnabled(): boolean;
					public getOrganizationDescription(): string;
					public static fromJson(param0: string, param1: com.esri.arcgisruntime.portal.Portal): com.esri.arcgisruntime.portal.PortalInfo;
					public getUnknownJson(): java.util.Map<string,any>;
					public getFeaturedItemsGroupQuery(): string;
					public getBasemapGalleryGroupQuery(): string;
					public isAllSsl(): boolean;
					public getIpCountryCode(): string;
					public isCanShareBingPublic(): boolean;
					public getUrl(): string;
					public getDefaultBasemap(): com.esri.arcgisruntime.mapping.Basemap;
					public getHomePageFeaturedContentCount(): number;
					public getDefaultVectorBasemap(): com.esri.arcgisruntime.mapping.Basemap;
					public getHomePageFeaturedContentGroupQuery(): string;
					public getPortalThumbnailFileName(): string;
					public isCanSharePublic(): boolean;
					public getOrganizationThumbnailFileName(): string;
					public toJson(): string;
					public getCustomBaseUrl(): string;
					public getDefaultExtent(): com.esri.arcgisruntime.geometry.Envelope;
					public getPortal(): com.esri.arcgisruntime.portal.Portal;
					public isPortal(): boolean;
					public getVectorBasemapGalleryGroupQuery(): string;
					public getModified(): java.util.Calendar;
					public useVectorBasemaps(): boolean;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getHelperServices(): com.esri.arcgisruntime.portal.HelperServices;
					public getLivingAtlasGroupQuery(): string;
					public isShowHomePageDescription(): boolean;
					public isSupportsOAuth(): boolean;
					public getCreated(): java.util.Calendar;
					public fetchPortalThumbnailAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalInfo.Access, param1: boolean, param2: string, param3: string, param4: boolean, param5: boolean, param6: boolean, param7: boolean, param8: number, param9: string, param10: string, param11: com.esri.arcgisruntime.mapping.Basemap, param12: com.esri.arcgisruntime.geometry.Geometry, param13: string, param14: java.util.List<com.esri.arcgisruntime.portal.PortalGroup>, param15: string, param16: com.esri.arcgisruntime.portal.HelperServices, param17: string, param18: number, param19: string, param20: string, param21: boolean, param22: string, param23: number, param24: string, param25: com.esri.arcgisruntime.portal.Portal.Mode, param26: string, param27: string, param28: boolean, param29: boolean, param30: string, param31: string, param32: com.esri.arcgisruntime.mapping.Basemap, param33: boolean, param34: string, param35: java.util.Map<string,any>, param36: java.util.Map<string,any>, param37: string);
					public getOrganizationId(): string;
					public getPortalName(): string;
					public getFeaturedGroupsQueries(): java.util.List<string>;
					/** @deprecated */
					public getLicenseInfo(): com.esri.arcgisruntime.LicenseInfo;
					public isCanSearchPublic(): boolean;
					public getOrganizationName(): string;
					public getUrlKey(): string;
				}
				export module PortalInfo {
					export class Access {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalInfo.Access>;
						public static PRIVATE: com.esri.arcgisruntime.portal.PortalInfo.Access;
						public static PUBLIC: com.esri.arcgisruntime.portal.PortalInfo.Access;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalInfo.Access;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalInfo.Access;
						public toString(): string;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalInfo.Access>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalItem extends com.esri.arcgisruntime.mapping.Item implements com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItem>;
					public getServiceUrl(): string;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CorePortalItem;
					public isCommentsEnabled(): boolean;
					public shareWithGroupsAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.portal.PortalGroup>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalGroup>>;
					public getSize(): number;
					public getRatingCount(): number;
					public fetchData(): java.io.InputStream;
					public constructor();
					public unshareGroupsAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.portal.PortalGroup>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalGroup>>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreItem);
					public fetchDataAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.io.InputStream>;
					public fetchCommentsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalItemComment>>;
					public toJson(): string;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getThumbnailData(): native.Array<number>;
					public getViewCount(): number;
					public fetchThumbnailAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					/** @deprecated */
					public getAccessAndUseConstraintsHtml(): string;
					public static fromJson(param0: string, param1: com.esri.arcgisruntime.portal.Portal): com.esri.arcgisruntime.portal.PortalItem;
					public getCulture(): string;
					public getCommentCount(): number;
					public getUnknownJson(): java.util.Map<string,any>;
					public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.portal.PortalItem.Type, param2: string, param3: string, param4: string, param5: java.lang.Iterable<string>);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePortalItem): com.esri.arcgisruntime.portal.PortalItem;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreItem;
					public loadAsync(): void;
					/** @deprecated */
					public getGuid(): string;
					public getThumbnailFileName(): string;
					public updateDataAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					/** @deprecated */
					public setAccessAndUseConstraintsHtml(param0: string): void;
					public getType(): com.esri.arcgisruntime.portal.PortalItem.Type;
					public getTypeName(): string;
					public unshareAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public setThumbnailData(param0: native.Array<number>): void;
					public updateItemPropertiesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public getAccess(): com.esri.arcgisruntime.portal.PortalItem.Access;
					public getPortal(): com.esri.arcgisruntime.portal.Portal;
					public fetchGroupsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalItemGroups>;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getOwner(): string;
					public getFolderId(): string;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public updateData(param0: string): void;
					public retryLoadAsync(): void;
					public shareWithAsync(param0: boolean, param1: boolean): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public getAverageRating(): number;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module PortalItem {
					export class Access {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItem.Access>;
						public static PRIVATE: com.esri.arcgisruntime.portal.PortalItem.Access;
						public static ORGANIZATION: com.esri.arcgisruntime.portal.PortalItem.Access;
						public static PUBLIC: com.esri.arcgisruntime.portal.PortalItem.Access;
						public static SHARED: com.esri.arcgisruntime.portal.PortalItem.Access;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalItem.Access;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalItem.Access;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalItem.Access>;
						public toString(): string;
					}
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItem.Type>;
						public static WEBMAP: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static CITY_ENGINE_WEB_SCENE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WEB_SCENE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static VR_360_EXPERIENCE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static PRO_MAP: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static FEATURE_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MAP_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static IMAGE_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static KML: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static KML_COLLECTION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WMS: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WFS: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WMTS: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static FEATURE_COLLECTION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static FEATURE_COLLECTION_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEODATA_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GLOBE_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static VECTOR_TILE_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SCENE_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static RELATIONAL_DATABASE_CONNECTION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEOMETRY_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEOCODING_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static NETWORK_ANALYSIS_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEOPROCESSING_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WORKFLOW_MANAGER_SERVICE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WEB_MAPPING_APPLICATION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MOBILE_APPLICATION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static CODE_ATTACHMENT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static OPERATIONS_DASHBOARD_ADDIN: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static OPERATION_VIEW: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static OPERATIONS_DASHBOARD_EXTENSION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static NATIVE_APPLICATION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static NATIVE_APPLICATION_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static NATIVE_APPLICATION_INSTALLER: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WORKFORCE_PROJECT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static FORM: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static INSIGHTS_WORKBOOK: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static INSIGHTS_MODEL: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static INSIGHTS_PAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DASHBOARD: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static HUB_INITIATIVE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static HUB_SITE_APPLICATION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static HUB_PAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static APP_BUILDER_EXTENSION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static APP_BUILDER_WIDGET_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SYMBOL_SET: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static COLOR_SET: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SHAPEFILE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static FILE_GEODATABASE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static CSV: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static CAD_DRAWING: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SERVICE_DEFINITION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DOCUMENT_LINK: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MICROSOFT_WORD: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MICROSOFT_POWERPOINT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MICROSOFT_EXCEL: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static PDF: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static IMAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static VISIO_DOCUMENT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static IWORK_KEYNOTE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static IWORK_PAGES: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static IWORK_NUMBERS: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static REPORT_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static STATISTICAL_DATA_COLLECTION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static NET_CDF: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MAP_DOCUMENT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MAP_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MOBILE_BASEMAP_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MOBILE_MAP_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static TILE_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static VECTOR_TILE_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static PROJECT_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static TASK_FILE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static ARCPAD_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static EXPLORER_MAP: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GLOBE_DOCUMENT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SCENE_DOCUMENT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static PUBLISHED_MAP: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MAP_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WINDOWS_MOBILE_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static LAYOUT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static PROJECT_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static LAYER: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static LAYER_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static EXPLORER_LAYER: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SCENE_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static IMAGE_COLLECTION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DESKTOP_STYLE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEOPROCESSING_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEOPROCESSING_PACKAGE_PRO_VERSION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEOPROCESSING_SAMPLE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static LOCATOR_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static RULE_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static RASTER_FUNCTION_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static ARCGIS_PRO_CONFIGURATION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WORKFLOW_MANAGER_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DESKTOP_APPLICATION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DESKTOP_APPLICATION_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static CODE_SAMPLE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DESKTOP_ADD_IN: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static EXPLORER_ADD_IN: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static ARCGIS_PRO_ADD_IN: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SQLITE_GEODATABASE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MAP_AREA: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static CONTENT_CATEGORY_SET: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static INSIGHTS_THEME: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MOBILE_SCENE_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static ORIENTED_IMAGERY_CATALOG: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static ORTHO_MAPPING_PROJECT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static ORTHO_MAPPING_TEMPLATE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SOLUTION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static BUILDING_SCENE_LAYER: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static COMPACT_TILE_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DATA_STORE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static DEEP_LEARNING_PACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static EXCALIBUR_IMAGERY_PROJECT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static GEOPACKAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static MISSION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SITE_APPLICATION: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SITE_PAGE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static BIG_DATA_ANALYTIC: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static FEED: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static REAL_TIME_ANALYTIC: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static PRO_REPORT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static QUICK_CAPTURE_PROJECT: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static SURVEY123_ADD_IN: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static URBAN_MODEL: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static WEB_EXPERIENCE: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalItem.Type;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalItem.Type>;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalItem.Type;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalItemComment {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItemComment>;
					public getCommentId(): string;
					public getCreated(): java.util.Calendar;
					public getComment(): string;
					public getOwner(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalItemContentParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItemContentParameters>;
					public getJsonText(): string;
					public getFileName(): string;
					public static createUrlContent(param0: string): com.esri.arcgisruntime.portal.PortalItemContentParameters;
					public getType(): com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType;
					public static createJsonContent(param0: string): com.esri.arcgisruntime.portal.PortalItemContentParameters;
					public getUrl(): string;
					public getFile(): java.io.File;
					public static createFileContent(param0: java.io.File, param1: string): com.esri.arcgisruntime.portal.PortalItemContentParameters;
				}
				export module PortalItemContentParameters {
					export class PortalItemContentType {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType>;
						public static FILE: com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType;
						public static JSON: com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType;
						public static SERVICE_URL: com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType;
						public static URL: com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalItemContentParameters.PortalItemContentType>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalItemGroups {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItemGroups>;
					public getAdmins(): java.util.List<com.esri.arcgisruntime.portal.PortalGroup>;
					public constructor();
					public getMembers(): java.util.List<com.esri.arcgisruntime.portal.PortalGroup>;
					public getOthers(): java.util.List<com.esri.arcgisruntime.portal.PortalGroup>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalItemMoveError {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalItemMoveError>;
					public constructor();
					public getMessage(): string;
					public getItemId(): string;
					public getCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalPrivilege {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalPrivilege>;
					public getRole(): com.esri.arcgisruntime.portal.PortalPrivilege.Role;
					public getRealm(): com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
					public constructor(param0: com.esri.arcgisruntime.portal.PortalPrivilege.Realm, param1: com.esri.arcgisruntime.portal.PortalPrivilege.Role, param2: com.esri.arcgisruntime.portal.PortalPrivilege.Type, param3: string);
					public getType(): com.esri.arcgisruntime.portal.PortalPrivilege.Type;
					public getTypeName(): string;
				}
				export module PortalPrivilege {
					export class Realm {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalPrivilege.Realm>;
						public static FEATURES: com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
						public static MARKETPLACE: com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
						public static OPENDATA: com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
						public static PORTAL: com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
						public static PREMIUM: com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalPrivilege.Realm>;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalPrivilege.Realm;
						public toString(): string;
					}
					export class Role {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalPrivilege.Role>;
						public static ADMIN: com.esri.arcgisruntime.portal.PortalPrivilege.Role;
						public static PUBLISHER: com.esri.arcgisruntime.portal.PortalPrivilege.Role;
						public static USER: com.esri.arcgisruntime.portal.PortalPrivilege.Role;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalPrivilege.Role;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalPrivilege.Role;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalPrivilege.Role>;
						public toString(): string;
					}
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalPrivilege.Type>;
						public static EDIT: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static FULL_EDIT: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static PURCHASE: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static START_TRIAL: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static DESIGNATE_GROUP: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static OPEN_DATA_ADMIN: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static ASSIGN_TO_GROUPS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static CHANGE_USER_ROLES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static DELETE_GROUPS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static DELETE_ITEMS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static DELETE_USERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static DISABLE_USERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static INVITE_USERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_ENTERPRISE_GROUPS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_LICENSES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_REPLICATIONS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static REASSIGN_GROUPS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static REASSIGN_ITEMS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static REASSIGN_USERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static UPDATE_GROUPS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static UPDATE_ITEMS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static UPDATE_USERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static VIEW_GROUPS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static VIEW_ITEMS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static VIEW_USERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static PUBLISH_FEATURES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static PUBLISH_SCENES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static PUBLISH_TILES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static CREATE_GROUP: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static CREATE_ITEM: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static JOIN_GROUP: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static JOIN_NON_ORG_GROUP: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static SHARE_GROUP_TO_ORG: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static SHARE_GROUP_TO_PUBLIC: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static SHARE_TO_GROUP: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static SHARE_TO_ORG: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static SHARE_TO_PUBLIC: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static DEMOGRAPHICS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static ELEVATION: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static GEOCODE: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static GEOENRICHMENT: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static NETWORK_ANALYSIS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static SPATIAL_ANALYSIS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static VIEW_ORG_USERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static VIEW_ORG_ITEMS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static VIEW_ORG_GROUPS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static GEOANALYTICS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static RASTER_ANALYSIS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static CREATE_UPDATE_CAPABLE_GROUP: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static PUBLISH_SERVER_GP_SERVICES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static PUBLISH_SERVER_SERVICES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static UPDATE_ITEM_CATEGORY_SCHEMA: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static FEATURE_REPORT: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_COLLABORATIONS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_CREDITS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_ROLES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_SECURITY: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_SERVERS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_UTILITY_SERVICES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static MANAGE_WEBSITE: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static CREATE_NOTEBOOKS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static CREATE_ADVANCED_NOTEBOOKS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static BULK_PUBLISH_FROM_DATA_STORES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static ENUMERATE_DATA_STORES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static REGISTER_DATA_STORES: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static CATEGORIZE_ITEMS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static VIEW_TRACKS: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalPrivilege.Type;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalPrivilege.Type>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalQueryParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalQueryParameters>;
					public setStartIndex(param0: number): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public getStartIndex(): number;
					public constructor(param0: string);
					public constructor(param0: string, param1: com.esri.arcgisruntime.geometry.Envelope);
					public setSortField(param0: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public setQueryForItemsWithOwner(param0: string, param1: com.esri.arcgisruntime.portal.PortalItem.Type, param2: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public setQueryForGroups(param0: string, param1: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public withNextStart(param0: number): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public constructor();
					public setQuery(param0: java.lang.Iterable<com.esri.arcgisruntime.portal.PortalItem.Type>, param1: string, param2: string, param3: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public setBoundingBox(param0: com.esri.arcgisruntime.geometry.Envelope): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public constructor(param0: string, param1: number);
					public getSortField(): string;
					public setQueryForItemsInGroup(param0: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public setCanSearchPublic(param0: boolean): void;
					public setSortOrder(param0: com.esri.arcgisruntime.portal.PortalQueryParameters.SortOrder): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public getLimit(): number;
					public setQuery(param0: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public setLimit(param0: number): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public setQueryForItemWithId(param0: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public constructor(param0: com.esri.arcgisruntime.geometry.Envelope);
					public getBoundingBox(): com.esri.arcgisruntime.geometry.Envelope;
					public getQuery(): string;
					public setQuery(param0: com.esri.arcgisruntime.portal.PortalItem.Type, param1: string, param2: string): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public isCanSearchPublic(): boolean;
					public getSortOrder(): com.esri.arcgisruntime.portal.PortalQueryParameters.SortOrder;
				}
				export module PortalQueryParameters {
					export class SortOrder {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalQueryParameters.SortOrder>;
						public static ASCENDING: com.esri.arcgisruntime.portal.PortalQueryParameters.SortOrder;
						public static DESCENDING: com.esri.arcgisruntime.portal.PortalQueryParameters.SortOrder;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalQueryParameters.SortOrder;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalQueryParameters.SortOrder>;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalQueryResultSet<T>  extends java.lang.Object {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalQueryResultSet<any>>;
					public getTotalResults(): number;
					public getNextQueryParameters(): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public getQueryParameters(): com.esri.arcgisruntime.portal.PortalQueryParameters;
					public getResults(): java.util.List<T>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalUser implements com.esri.arcgisruntime.io.JsonSerializable, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalUser>;
					public fetchThumbnailAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<native.Array<number>>;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getUnknownJson(): java.util.Map<string,any>;
					public addPortalItem(param0: com.esri.arcgisruntime.portal.PortalItem, param1: com.esri.arcgisruntime.portal.PortalItemContentParameters, param2: com.esri.arcgisruntime.portal.PortalFolder): string;
					public getGroups(): java.util.List<com.esri.arcgisruntime.portal.PortalGroup>;
					public getUsername(): string;
					public createFolderAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalFolder>;
					public movePortalItemsAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.portal.PortalItem>, param1: com.esri.arcgisruntime.portal.PortalFolder): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalItemMoveError>>;
					public loadAsync(): void;
					public getThumbnailFileName(): string;
					public constructor();
					public getTags(): java.util.List<string>;
					public populateProperties(param0: string, param1: string, param2: string, param3: string, param4: string, param5: string, param6: string, param7: com.esri.arcgisruntime.portal.PortalUser.Access, param8: com.esri.arcgisruntime.portal.PortalUser.Role, param9: com.esri.arcgisruntime.UnitSystem, param10: java.util.List<com.esri.arcgisruntime.portal.PortalPrivilege>, param11: java.util.List<string>, param12: number, param13: number, param14: java.util.List<com.esri.arcgisruntime.portal.PortalGroup>, param15: java.util.Map<string,any>, param16: java.util.Map<string,any>): void;
					public deleteFolderAsync(param0: com.esri.arcgisruntime.portal.PortalFolder): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public fetchContentInFolderAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalItem>>;
					public addPortalItemAsync(param0: com.esri.arcgisruntime.portal.PortalItem, param1: com.esri.arcgisruntime.portal.PortalItemContentParameters, param2: com.esri.arcgisruntime.portal.PortalFolder): com.esri.arcgisruntime.concurrent.ListenableFuture<string>;
					public getEmail(): string;
					public getUserDescription(): string;
					public toJson(): string;
					public getUnits(): com.esri.arcgisruntime.UnitSystem;
					public static fromJson(param0: string, param1: com.esri.arcgisruntime.portal.Portal): com.esri.arcgisruntime.portal.PortalUser;
					public getPrivileges(): java.util.List<com.esri.arcgisruntime.portal.PortalPrivilege>;
					public getPortal(): com.esri.arcgisruntime.portal.Portal;
					public getFavoritesGroupId(): string;
					public movePortalItemAsync(param0: com.esri.arcgisruntime.portal.PortalItem, param1: com.esri.arcgisruntime.portal.PortalFolder): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public cancelLoad(): void;
					public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: string);
					public getFullName(): string;
					public getModified(): java.util.Calendar;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public fetchContentAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.portal.PortalUserContent>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getCreated(): java.util.Calendar;
					public retryLoadAsync(): void;
					public getAccess(): com.esri.arcgisruntime.portal.PortalUser.Access;
					public getOrganizationId(): string;
					public getRole(): com.esri.arcgisruntime.portal.PortalUser.Role;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public deletePortalItemAsync(param0: com.esri.arcgisruntime.portal.PortalItem): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
				export module PortalUser {
					export class Access {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalUser.Access>;
						public static PRIVATE: com.esri.arcgisruntime.portal.PortalUser.Access;
						public static ORGANIZATION: com.esri.arcgisruntime.portal.PortalUser.Access;
						public static PUBLIC: com.esri.arcgisruntime.portal.PortalUser.Access;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalUser.Access;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalUser.Access>;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalUser.Access;
						public toString(): string;
					}
					export class Role {
						public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalUser.Role>;
						public static ADMIN: com.esri.arcgisruntime.portal.PortalUser.Role;
						public static PUBLISHER: com.esri.arcgisruntime.portal.PortalUser.Role;
						public static USER: com.esri.arcgisruntime.portal.PortalUser.Role;
						public static UNKNOWN: com.esri.arcgisruntime.portal.PortalUser.Role;
						public static values(): native.Array<com.esri.arcgisruntime.portal.PortalUser.Role>;
						public static valueOf(param0: string): com.esri.arcgisruntime.portal.PortalUser.Role;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module portal {
				export class PortalUserContent {
					public static class: java.lang.Class<com.esri.arcgisruntime.portal.PortalUserContent>;
					public getUsername(): string;
					public getItems(): java.util.List<com.esri.arcgisruntime.portal.PortalItem>;
					public getFolders(): java.util.List<com.esri.arcgisruntime.portal.PortalFolder>;
					public getCurrentFolder(): com.esri.arcgisruntime.portal.PortalFolder;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class AddRastersParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.AddRastersParameters>;
					public setFilter(param0: string): void;
					public setRasterFunctionTemplateFile(param0: string): void;
					public getFilter(): string;
					public setMaxPixelSizeFactor(param0: number): void;
					public getInputDirectory(): string;
					public getMaxPixelSizeFactor(): number;
					public getRasterFunctionTemplateFile(): string;
					public constructor();
					public setInputFile(param0: string): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAddRastersParameters);
					public setInputDirectory(param0: string): void;
					public getInputFile(): string;
					public setMinPixelSizeFactor(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAddRastersParameters;
					public getMinPixelSizeFactor(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export abstract class BaseStretchRenderer extends com.esri.arcgisruntime.raster.RasterRenderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.BaseStretchRenderer>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterRenderer;
					public getGammas(): java.util.List<java.lang.Double>;
					public isEstimateStatistics(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer, param1: com.esri.arcgisruntime.raster.StretchParameters);
					public getStretchParameters(): com.esri.arcgisruntime.raster.StretchParameters;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class BlendRenderer extends com.esri.arcgisruntime.raster.HillshadeRenderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.BlendRenderer>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreHillshadeRenderer;
					public getElevationRaster(): com.esri.arcgisruntime.raster.Raster;
					public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.raster.SlopeType, param4: number, param5: number, param6: number);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreHillshadeRenderer);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer);
					public getOutputMaxValues(): java.util.List<java.lang.Double>;
					public getSourceMaxValues(): java.util.List<java.lang.Double>;
					public getNoDataValues(): java.util.List<java.lang.Double>;
					public getColorRamp(): com.esri.arcgisruntime.raster.ColorRamp;
					public getOutputMinValues(): java.util.List<java.lang.Double>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterRenderer;
					public constructor(param0: number, param1: number, param2: number);
					public getGammas(): java.util.List<java.lang.Double>;
					public getSourceMinValues(): java.util.List<java.lang.Double>;
					public constructor(param0: com.esri.arcgisruntime.raster.Raster, param1: java.util.List<java.lang.Double>, param2: java.util.List<java.lang.Double>, param3: java.util.List<java.lang.Double>, param4: java.util.List<java.lang.Double>, param5: java.util.List<java.lang.Double>, param6: java.util.List<java.lang.Double>, param7: com.esri.arcgisruntime.raster.ColorRamp, param8: number, param9: number, param10: number, param11: com.esri.arcgisruntime.raster.SlopeType, param12: number, param13: number, param14: number);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBlendRenderer;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class ColorRamp {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.ColorRamp>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreColorRamp;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreColorRamp): com.esri.arcgisruntime.raster.ColorRamp;
					public constructor(param0: com.esri.arcgisruntime.raster.ColorRamp.PresetType, param1: number);
				}
				export module ColorRamp {
					export class PresetType {
						public static class: java.lang.Class<com.esri.arcgisruntime.raster.ColorRamp.PresetType>;
						public static NONE: com.esri.arcgisruntime.raster.ColorRamp.PresetType;
						public static ELEVATION: com.esri.arcgisruntime.raster.ColorRamp.PresetType;
						public static DEM_SCREEN: com.esri.arcgisruntime.raster.ColorRamp.PresetType;
						public static DEM_LIGHT: com.esri.arcgisruntime.raster.ColorRamp.PresetType;
						public static values(): native.Array<com.esri.arcgisruntime.raster.ColorRamp.PresetType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.raster.ColorRamp.PresetType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class Colormap {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.Colormap>;
					public static create(param0: java.lang.Iterable<java.lang.Integer>): com.esri.arcgisruntime.raster.Colormap;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreColormap): com.esri.arcgisruntime.raster.Colormap;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreColormap;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class ColormapRenderer extends com.esri.arcgisruntime.raster.RasterRenderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.ColormapRenderer>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreColormapRenderer;
					public constructor(param0: java.util.List<java.lang.Integer>);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterRenderer;
					public getColormap(): com.esri.arcgisruntime.raster.Colormap;
					public constructor(param0: com.esri.arcgisruntime.raster.Colormap);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class FrameCameraAddRastersParameters extends com.esri.arcgisruntime.raster.AddRastersParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.FrameCameraAddRastersParameters>;
					public setFramesFile(param0: string): void;
					public setCamerasFile(param0: string): void;
					public getCamerasFile(): string;
					public constructor();
					public getFramesFile(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreAddRastersParameters);
					public isShareRasterInfo(): boolean;
					public setShareRasterInfo(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class GeoPackageRaster extends com.esri.arcgisruntime.raster.Raster {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.GeoPackageRaster>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoPackageRaster): com.esri.arcgisruntime.raster.GeoPackageRaster;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getGeoPackage(): com.esri.arcgisruntime.data.GeoPackage;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRaster): com.esri.arcgisruntime.raster.Raster;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRaster;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getDescription(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoPackageRaster;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class HillshadeRenderer extends com.esri.arcgisruntime.raster.RasterRenderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.HillshadeRenderer>;
					public getPixelSizePower(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreHillshadeRenderer;
					public getOutputBitDepth(): number;
					public getAltitude(): number;
					public constructor(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.raster.SlopeType, param4: number, param5: number, param6: number);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreHillshadeRenderer);
					public getSlopeType(): com.esri.arcgisruntime.raster.SlopeType;
					public getPixelSizeFactor(): number;
					public getZFactor(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreHillshadeRenderer): com.esri.arcgisruntime.raster.HillshadeRenderer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterRenderer;
					public constructor(param0: number, param1: number, param2: number);
					public getAzimuth(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class HistogramEqualizationStretchParameters extends com.esri.arcgisruntime.raster.StretchParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.HistogramEqualizationStretchParameters>;
					public constructor();
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStretchParameters;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class ImageServiceRaster extends com.esri.arcgisruntime.raster.Raster implements com.esri.arcgisruntime.io.RemoteResource {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.ImageServiceRaster>;
					public constructor(param0: string);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreImageServiceRaster): com.esri.arcgisruntime.raster.ImageServiceRaster;
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRaster);
					public loadAsync(): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreImageServiceRaster;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public getRenderingRule(): com.esri.arcgisruntime.raster.RenderingRule;
					public constructor(param0: com.esri.arcgisruntime.raster.RasterFunction);
					public getServiceInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISImageServiceInfo;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRaster): com.esri.arcgisruntime.raster.Raster;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRaster;
					public retryLoadAsync(): void;
					public setRenderingRule(param0: com.esri.arcgisruntime.raster.RenderingRule): void;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class MinMaxStretchParameters extends com.esri.arcgisruntime.raster.StretchParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.MinMaxStretchParameters>;
					public getMinValues(): java.util.List<java.lang.Double>;
					public getMaxValues(): java.util.List<java.lang.Double>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStretchParameters;
					public constructor(param0: java.util.List<java.lang.Double>, param1: java.util.List<java.lang.Double>);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class MosaicDatasetRaster extends com.esri.arcgisruntime.raster.Raster {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.MosaicDatasetRaster>;
					public static remove(param0: com.esri.arcgisruntime.data.Geodatabase, param1: string): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMosaicDatasetRaster): com.esri.arcgisruntime.raster.MosaicDatasetRaster;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public static create(param0: com.esri.arcgisruntime.data.Geodatabase, param1: string, param2: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.raster.MosaicDatasetRaster;
					public static create(param0: string, param1: string, param2: com.esri.arcgisruntime.geometry.SpatialReference): com.esri.arcgisruntime.raster.MosaicDatasetRaster;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRaster): com.esri.arcgisruntime.raster.Raster;
					public constructor(param0: string, param1: string);
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public static getNames(param0: string): java.util.List<string>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRaster;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMosaicDatasetRaster;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRaster);
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public addRastersAsync(param0: com.esri.arcgisruntime.raster.AddRastersParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
					public constructor(param0: com.esri.arcgisruntime.raster.RasterFunction);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class PercentClipStretchParameters extends com.esri.arcgisruntime.raster.StretchParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.PercentClipStretchParameters>;
					public getMax(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStretchParameters;
					public getMin(): number;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class RGBRenderer extends com.esri.arcgisruntime.raster.BaseStretchRenderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.RGBRenderer>;
					public getBandIndexes(): java.util.List<java.lang.Integer>;
					public constructor(param0: com.esri.arcgisruntime.raster.StretchParameters, param1: java.util.List<java.lang.Integer>, param2: java.util.List<java.lang.Double>, param3: boolean, param4: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType, param5: com.esri.arcgisruntime.raster.Raster, param6: java.util.List<java.lang.Double>);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterRenderer;
					public getPanchromaticRaster(): com.esri.arcgisruntime.raster.Raster;
					public constructor(param0: com.esri.arcgisruntime.raster.StretchParameters, param1: java.util.List<java.lang.Integer>, param2: java.util.List<java.lang.Double>, param3: boolean);
					public getWeights(): java.util.List<java.lang.Double>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer);
					public getPansharpenType(): com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer, param1: com.esri.arcgisruntime.raster.StretchParameters);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRGBRenderer;
				}
				export module RGBRenderer {
					export class PansharpenType {
						public static class: java.lang.Class<com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType>;
						public static NONE: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
						public static IHS: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
						public static BROVEY: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
						public static MEAN: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
						public static ESRI: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
						public static GRAM_SCHMIDT: com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
						public static values(): native.Array<com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.raster.RGBRenderer.PansharpenType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class Raster extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.Raster>;
					public mPath: string;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRaster): com.esri.arcgisruntime.raster.Raster;
					public getPath(): string;
					public getRasterFunction(): com.esri.arcgisruntime.raster.RasterFunction;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRaster;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRaster);
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public constructor(param0: com.esri.arcgisruntime.raster.RasterFunction);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class RasterFunction {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.RasterFunction>;
					public constructor(param0: string);
					public getArguments(): com.esri.arcgisruntime.raster.RasterFunctionArguments;
					public static fromJson(param0: string): com.esri.arcgisruntime.raster.RasterFunction;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterFunction;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRasterFunction): com.esri.arcgisruntime.raster.RasterFunction;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class RasterFunctionArguments {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.RasterFunctionArguments>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterFunctionArguments;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRasterFunctionArguments): com.esri.arcgisruntime.raster.RasterFunctionArguments;
					public setRaster(param0: string, param1: com.esri.arcgisruntime.raster.Raster): void;
					public getArgumentNames(): java.util.List<string>;
					public setArgument(param0: string, param1: string): void;
					public getRasterNames(): java.util.List<string>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export abstract class RasterRenderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.RasterRenderer>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterRenderer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class RenderingRule {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.RenderingRule>;
					public constructor(param0: string);
					public getRenderingRuleJson(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRenderingRule;
					public getRenderingRuleInfo(): com.esri.arcgisruntime.arcgisservices.RenderingRuleInfo;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRenderingRule): com.esri.arcgisruntime.raster.RenderingRule;
					public constructor(param0: com.esri.arcgisruntime.arcgisservices.RenderingRuleInfo);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class SlopeType {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.SlopeType>;
					public static NONE: com.esri.arcgisruntime.raster.SlopeType;
					public static DEGREE: com.esri.arcgisruntime.raster.SlopeType;
					public static PERCENT_RISE: com.esri.arcgisruntime.raster.SlopeType;
					public static SCALED: com.esri.arcgisruntime.raster.SlopeType;
					public static valueOf(param0: string): com.esri.arcgisruntime.raster.SlopeType;
					public static values(): native.Array<com.esri.arcgisruntime.raster.SlopeType>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class StandardDeviationStretchParameters extends com.esri.arcgisruntime.raster.StretchParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.StandardDeviationStretchParameters>;
					public getFactor(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStretchParameters;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class StretchParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.StretchParameters>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.raster.StretchParameters interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getInternal(): com.esri.arcgisruntime.internal.jni.CoreStretchParameters;
					});
					public constructor();
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStretchParameters;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module raster {
				export class StretchRenderer extends com.esri.arcgisruntime.raster.BaseStretchRenderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.raster.StretchRenderer>;
					public constructor(param0: com.esri.arcgisruntime.raster.StretchParameters, param1: java.util.List<java.lang.Double>, param2: boolean, param3: com.esri.arcgisruntime.raster.ColorRamp);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer;
					public getColorRamp(): com.esri.arcgisruntime.raster.ColorRamp;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRasterRenderer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRasterRenderer);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreBaseStretchRenderer, param1: com.esri.arcgisruntime.raster.StretchParameters);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStretchRenderer;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class AuthenticationChallenge {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationChallenge>;
					public getException(): java.io.IOException;
					public getRemoteResource(): com.esri.arcgisruntime.io.RemoteResource;
					public constructor(param0: com.esri.arcgisruntime.security.AuthenticationChallenge.Type, param1: java.io.IOException, param2: com.esri.arcgisruntime.io.RemoteResource, param3: number);
					public getRemoteResourceOwningSystemUrl(): string;
					public constructor(param0: com.esri.arcgisruntime.security.AuthenticationChallenge.Type, param1: java.io.IOException, param2: com.esri.arcgisruntime.io.RemoteResource, param3: number, param4: string, param5: boolean, param6: boolean);
					public getFailureCount(): number;
					public getType(): com.esri.arcgisruntime.security.AuthenticationChallenge.Type;
					public isRemoteResourceFederated(): boolean;
					public isOAuthApproveChallenge(): boolean;
				}
				export module AuthenticationChallenge {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationChallenge.Type>;
						public static USER_CREDENTIAL_CHALLENGE: com.esri.arcgisruntime.security.AuthenticationChallenge.Type;
						public static SELF_SIGNED_CHALLENGE: com.esri.arcgisruntime.security.AuthenticationChallenge.Type;
						public static CERTIFICATE_CHALLENGE: com.esri.arcgisruntime.security.AuthenticationChallenge.Type;
						public static OAUTH_CREDENTIAL_CHALLENGE: com.esri.arcgisruntime.security.AuthenticationChallenge.Type;
						public static UNKNOWN: com.esri.arcgisruntime.security.AuthenticationChallenge.Type;
						public static values(): native.Array<com.esri.arcgisruntime.security.AuthenticationChallenge.Type>;
						public static valueOf(param0: string): com.esri.arcgisruntime.security.AuthenticationChallenge.Type;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class AuthenticationChallengeHandler {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationChallengeHandler>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.security.AuthenticationChallengeHandler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						handleChallenge(param0: com.esri.arcgisruntime.security.AuthenticationChallenge): com.esri.arcgisruntime.security.AuthenticationChallengeResponse;
					});
					public constructor();
					public handleChallenge(param0: com.esri.arcgisruntime.security.AuthenticationChallenge): com.esri.arcgisruntime.security.AuthenticationChallengeResponse;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class AuthenticationChallengeResponse {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationChallengeResponse>;
					public getParam(): any;
					public constructor(param0: com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action, param1: any);
					public getAction(): com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action;
				}
				export module AuthenticationChallengeResponse {
					export class Action {
						public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action>;
						public static CONTINUE_WITH_CREDENTIAL: com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action;
						public static CONTINUE_WITH_SELF_SIGNED_RESPONSE: com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action;
						public static CONTINUE_AFTER_APPLYING_CLIENT_CERT: com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action;
						public static CANCEL: com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action;
						public static valueOf(param0: string): com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action;
						public static values(): native.Array<com.esri.arcgisruntime.security.AuthenticationChallengeResponse.Action>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class AuthenticationManager {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationManager>;
					public static getOAuthConfiguration(param0: string): com.esri.arcgisruntime.security.OAuthConfiguration;
					public static clearTrustedCertificates(): void;
					public static getAuthenticationChallengeHandler(): com.esri.arcgisruntime.security.AuthenticationChallengeHandler;
					public static getSelfSignedCertificateListener(): com.esri.arcgisruntime.security.SelfSignedCertificateListener;
					/** @deprecated */
					public static setKeyStores(param0: java.security.KeyStore, param1: string, param2: java.security.KeyStore): void;
					public static isTrustAllSigners(): boolean;
					public static setAuthenticationChallengeHandler(param0: com.esri.arcgisruntime.security.AuthenticationChallengeHandler): void;
					public static clearOAuthConfigurations(): void;
					/** @deprecated */
					public static clearKeyStores(): void;
					public static setTrustAllSigners(param0: boolean): void;
					public static setSelfSignedCertificateListener(param0: com.esri.arcgisruntime.security.SelfSignedCertificateListener): void;
					public static removeOAuthConfiguration(param0: string): boolean;
					public static addOAuthConfiguration(param0: com.esri.arcgisruntime.security.OAuthConfiguration): void;
				}
				export module AuthenticationManager {
					export class CredentialCache {
						public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationManager.CredentialCache>;
						public static clear(): void;
						public constructor();
						public static toJson(): string;
						public static restoreFromJson(param0: string): void;
						public static removeAndRevokeCredentialAsync(param0: com.esri.arcgisruntime.security.Credential): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public static removeAndRevokeAllCredentialsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.Map<com.esri.arcgisruntime.security.Credential,java.lang.Exception>>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class AuthenticationType {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.AuthenticationType>;
					public static NONE: com.esri.arcgisruntime.security.AuthenticationType;
					public static TOKEN: com.esri.arcgisruntime.security.AuthenticationType;
					public static HTTP: com.esri.arcgisruntime.security.AuthenticationType;
					public static CERTIFICATE: com.esri.arcgisruntime.security.AuthenticationType;
					public static UNKNOWN: com.esri.arcgisruntime.security.AuthenticationType;
					public static valueOf(param0: string): com.esri.arcgisruntime.security.AuthenticationType;
					public static values(): native.Array<com.esri.arcgisruntime.security.AuthenticationType>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class CertificateCredential extends com.esri.arcgisruntime.security.Credential implements com.esri.arcgisruntime.security.TokenCredential {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.CertificateCredential>;
					public toJson(): string;
					public setToken(param0: com.esri.arcgisruntime.internal.m.h): void;
					public getPrivateKey(): java.security.PrivateKey;
					public constructor(param0: string, param1: string);
					public constructor(param0: string, param1: java.security.PrivateKey, param2: native.Array<java.security.cert.Certificate>);
					public getPath(): string;
					public getPassword(): string;
					public copy(): com.esri.arcgisruntime.security.Credential;
					public constructor();
					public getInternal(): com.esri.arcgisruntime.internal.m.b;
					public getAlias(): string;
					public copy(): com.esri.arcgisruntime.security.CertificateCredential;
					public getToken(): com.esri.arcgisruntime.internal.m.h;
					public getCertificateChain(): native.Array<java.security.cert.Certificate>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export abstract class Credential {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.Credential>;
					public mUsername: string;
					public getUsername(): string;
					public toJson(): string;
					public copy(): com.esri.arcgisruntime.security.Credential;
					public constructor();
					public static fromJson(param0: string): com.esri.arcgisruntime.security.Credential;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class CredentialChangedEvent {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.CredentialChangedEvent>;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public constructor(param0: com.esri.arcgisruntime.portal.Portal, param1: com.esri.arcgisruntime.security.Credential);
					public getSource(): com.esri.arcgisruntime.portal.Portal;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class CredentialChangedListener {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.CredentialChangedListener>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.security.CredentialChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						credentialChanged(param0: com.esri.arcgisruntime.security.CredentialChangedEvent): void;
					});
					public constructor();
					public credentialChanged(param0: com.esri.arcgisruntime.security.CredentialChangedEvent): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class DefaultAuthenticationChallengeHandler extends com.esri.arcgisruntime.security.AuthenticationChallengeHandler {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.DefaultAuthenticationChallengeHandler>;
					public static isChromeCustomTabsEnabled(): boolean;
					public static getChromeCustomTabsToolbarColor(): java.lang.Integer;
					public static setChromeCustomTabsEnabled(param0: boolean): void;
					public static setChromeCustomTabsToolbarColor(param0: java.lang.Integer): void;
					public handleChallenge(param0: com.esri.arcgisruntime.security.AuthenticationChallenge): com.esri.arcgisruntime.security.AuthenticationChallengeResponse;
					public constructor(param0: globalAndroid.app.Activity);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class DefaultOAuthIntentReceiver {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.DefaultOAuthIntentReceiver>;
					public static REDIRECT_KEY: string;
					public onCreate(param0: globalAndroid.os.Bundle): void;
					public onNewIntent(param0: globalAndroid.content.Intent): void;
					public constructor();
					public onPause(): void;
					public onWindowFocusChanged(param0: boolean): void;
					public onResume(): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class OAuthConfiguration {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.OAuthConfiguration>;
					public getClientId(): string;
					public getExpiration(): number;
					public getRedirectUri(): string;
					public constructor(param0: string, param1: string, param2: string, param3: number);
					public constructor(param0: string, param1: string, param2: string);
					public getPortalUrl(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class OAuthLoginManager {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.OAuthLoginManager>;
					public launchOAuthBrowserPage(param0: globalAndroid.content.Context): void;
					public constructor(param0: string, param1: string, param2: string, param3: number);
					public fetchOAuthTokenCredentialAsync(param0: globalAndroid.content.Intent): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.security.OAuthTokenCredential>;
					public launchOAuthBrowserPageInCustomTabs(param0: globalAndroid.content.Context): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class OAuthTokenCredential extends com.esri.arcgisruntime.security.Credential implements com.esri.arcgisruntime.security.TokenCredential {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.OAuthTokenCredential>;
					public setClientId(param0: string): void;
					public getExpiration(): java.util.Calendar;
					public setCanExchangeRefreshToken(param0: boolean): void;
					public refreshToken(): string;
					public setToken(param0: com.esri.arcgisruntime.internal.m.h): void;
					public getAccessToken(): string;
					public exchangeRefreshToken(): boolean;
					public getUsername(): string;
					public equals(param0: any): boolean;
					public setRefreshTokenExpirationInterval(param0: number): void;
					public copy(): com.esri.arcgisruntime.security.Credential;
					public setPortalUrl(param0: string): void;
					public revokeToken(): boolean;
					public refreshTokenAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<string>;
					public getExpiresIn(): number;
					public copy(): com.esri.arcgisruntime.security.OAuthTokenCredential;
					public hashCode(): number;
					public setRedirectUri(param0: string): void;
					public getToken(): com.esri.arcgisruntime.internal.m.h;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class OAuthTokenCredentialRequest {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.OAuthTokenCredentialRequest>;
					public constructor(param0: string, param1: com.esri.arcgisruntime.io.RequestConfiguration, param2: string, param3: string, param4: string, param5: number);
					public executeAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.security.OAuthTokenCredential>;
					public constructor(param0: string, param1: com.esri.arcgisruntime.io.RequestConfiguration, param2: string, param3: string, param4: string);
					public static getAuthorizationUrl(param0: string, param1: string, param2: string, param3: number): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class SelfSignedCertificateException {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.SelfSignedCertificateException>;
					public constructor(param0: string, param1: java.lang.Throwable, param2: java.security.cert.X509Certificate);
					public getCertificate(): java.security.cert.X509Certificate;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class SelfSignedCertificateListener {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.SelfSignedCertificateListener>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.security.SelfSignedCertificateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						checkServerTrusted(param0: native.Array<java.security.cert.X509Certificate>, param1: string): com.esri.arcgisruntime.security.SelfSignedResponse;
					});
					public constructor();
					public checkServerTrusted(param0: native.Array<java.security.cert.X509Certificate>, param1: string): com.esri.arcgisruntime.security.SelfSignedResponse;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class SelfSignedResponse {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.SelfSignedResponse>;
					public constructor(param0: boolean, param1: boolean);
					public isTrusted(): boolean;
					public isCacheEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class TokenCredential {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.TokenCredential>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.security.TokenCredential interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setToken(param0: com.esri.arcgisruntime.internal.m.h): void;
						getToken(): com.esri.arcgisruntime.internal.m.h;
					});
					public constructor();
					public setToken(param0: com.esri.arcgisruntime.internal.m.h): void;
					public getToken(): com.esri.arcgisruntime.internal.m.h;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module security {
				export class UserCredential extends com.esri.arcgisruntime.security.Credential implements com.esri.arcgisruntime.security.TokenCredential {
					public static class: java.lang.Class<com.esri.arcgisruntime.security.UserCredential>;
					public setReferer(param0: string): void;
					public setPassword(param0: string): void;
					public setToken(param0: com.esri.arcgisruntime.internal.m.h): void;
					public constructor(param0: string, param1: string);
					public equals(param0: any): boolean;
					public getPassword(): string;
					public setUsername(param0: string): void;
					public copy(): com.esri.arcgisruntime.security.Credential;
					public constructor();
					public static createFromToken(param0: string, param1: string): com.esri.arcgisruntime.security.UserCredential;
					public getReferer(): string;
					public hashCode(): number;
					public constructor(param0: string, param1: string, param2: string);
					public getToken(): com.esri.arcgisruntime.internal.m.h;
					public copy(): com.esri.arcgisruntime.security.UserCredential;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class ClassBreaksRenderer extends com.esri.arcgisruntime.symbology.Renderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.ClassBreaksRenderer>;
					public setNormalizationType(param0: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType): void;
					public setNormalizationField(param0: string): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer);
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public setFieldName(param0: string): void;
					public getNormalizationType(): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType;
					public getRendererClassificationMethod(): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
					public getDefaultLabel(): string;
					public getNormalizationField(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
					public setNormalizationTotal(param0: number): void;
					public constructor();
					public getNormalizationTotal(): number;
					public getBackgroundFillSymbol(): com.esri.arcgisruntime.symbology.Symbol;
					public setDefaultLabel(param0: string): void;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
					public getFieldName(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.symbology.Symbol;
					public toJson(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public setMinValue(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreClassBreaksRenderer;
					public setBackgroundFillSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreClassBreaksRenderer): com.esri.arcgisruntime.symbology.ClassBreaksRenderer;
					public setDefaultSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
					public getDefaultSymbol(): com.esri.arcgisruntime.symbology.Symbol;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getClassBreaks(): java.util.List<com.esri.arcgisruntime.symbology.ClassBreaksRenderer.ClassBreak>;
					public constructor(param0: string, param1: java.lang.Iterable<com.esri.arcgisruntime.symbology.ClassBreaksRenderer.ClassBreak>);
					public getMinValue(): number;
				}
				export module ClassBreaksRenderer {
					export class ClassBreak extends com.esri.arcgisruntime.io.JsonSerializable {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.ClassBreaksRenderer.ClassBreak>;
						public constructor(param0: string, param1: string, param2: number, param3: number, param4: com.esri.arcgisruntime.symbology.Symbol);
						public getUnknownJson(): java.util.Map<string,any>;
						public constructor();
						public getLabel(): string;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public setMinValue(param0: number): void;
						public setDescription(param0: string): void;
						public setSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public getMaxValue(): number;
						public setLabel(param0: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreClassBreak;
						public getMinValue(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreClassBreak): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.ClassBreak;
						public setMaxValue(param0: number): void;
						public getDescription(): string;
						public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public static fromJson(param0: string): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.ClassBreak;
					}
					export class NormalizationType {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType>;
						public static BY_FIELD: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType;
						public static BY_LOG: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType;
						public static BY_PERCENT_OF_TOTAL: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType;
						public static NONE: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.ClassBreaksRenderer.NormalizationType>;
					}
					export class RendererClassificationMethod {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod>;
						public static DEFINED_INTERVAL: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static EQUAL_INTERVAL: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static GEOMETRICAL_INTERVAL: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static NATURAL_BREAKS: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static QUANTILE: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static STANDARD_DEVIATION: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static MANUAL: com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.ClassBreaksRenderer.RendererClassificationMethod;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class CompositeSymbol extends com.esri.arcgisruntime.symbology.Symbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.CompositeSymbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor(param0: java.util.List<com.esri.arcgisruntime.symbology.Symbol>);
					public toJson(): string;
					public constructor();
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreCompositeSymbol): com.esri.arcgisruntime.symbology.CompositeSymbol;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCompositeSymbol;
					public getSymbols(): java.util.List<com.esri.arcgisruntime.symbology.Symbol>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class DashGeometricEffect extends com.esri.arcgisruntime.symbology.GeometricEffect {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.DashGeometricEffect>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDashGeometricEffect): com.esri.arcgisruntime.symbology.DashGeometricEffect;
					public constructor();
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometricEffect);
					public getDashTemplate(): java.util.List<java.lang.Double>;
					public constructor(param0: java.lang.Iterable<java.lang.Double>);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class DictionaryRenderer extends com.esri.arcgisruntime.symbology.Renderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.DictionaryRenderer>;
					public getDictionarySymbolStyle(): com.esri.arcgisruntime.symbology.DictionarySymbolStyle;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.symbology.Symbol;
					public toJson(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public setDictionarySymbolStyle(param0: com.esri.arcgisruntime.symbology.DictionarySymbolStyle): void;
					/** @deprecated */
					public isTextVisible(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer);
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public constructor(param0: com.esri.arcgisruntime.symbology.DictionarySymbolStyle);
					public getTextFieldOverrides(): java.util.Map<string,string>;
					public getSymbologyFieldOverrides(): java.util.Map<string,string>;
					public getUnknownJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDictionaryRenderer;
					/** @deprecated */
					public setTextVisibilityMinScale(param0: number): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor(param0: com.esri.arcgisruntime.symbology.DictionarySymbolStyle, param1: java.util.Map<string,string>, param2: java.util.Map<string,string>);
					/** @deprecated */
					public setTextVisibilityMaxScale(param0: number): void;
					/** @deprecated */
					public getTextVisibilityMaxScale(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDictionaryRenderer): com.esri.arcgisruntime.symbology.DictionaryRenderer;
					/** @deprecated */
					public getTextVisibilityMinScale(): number;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
					/** @deprecated */
					public setTextVisible(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class DictionarySymbolStyle extends com.esri.arcgisruntime.symbology.SymbolStyle {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.DictionarySymbolStyle>;
					public getConfigurations(): java.util.List<com.esri.arcgisruntime.symbology.DictionarySymbolStyleConfiguration>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbolStyle;
					public static createFromFile(param0: string): com.esri.arcgisruntime.symbology.DictionarySymbolStyle;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					/** @deprecated */
					public constructor(param0: string, param1: string);
					/** @deprecated */
					public getConfigurationProperties(): java.util.Map<string,string>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle): com.esri.arcgisruntime.symbology.DictionarySymbolStyle;
					/** @deprecated */
					public getSpecificationType(): string;
					public getDictionaryName(): string;
					public getSymbolAsync(param0: java.util.Map<string,any>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.Symbol>;
					public getSymbologyFieldNames(): java.util.List<string>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public getTextFieldNames(): java.util.List<string>;
					public getSymbolAsync(param0: java.util.List<string>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.Symbol>;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolStyle);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyle;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class DictionarySymbolStyleConfiguration {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.DictionarySymbolStyleConfiguration>;
					public getValue(): any;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyleConfiguration;
					public getName(): string;
					public setValue(param0: any): void;
					public getInfo(): string;
					public getDomain(): java.util.List<any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDictionarySymbolStyleConfiguration): com.esri.arcgisruntime.symbology.DictionarySymbolStyleConfiguration;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class DistanceCompositeSceneSymbol extends com.esri.arcgisruntime.symbology.SceneSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public constructor();
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getRangeCollection(): com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.RangeCollection;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDistanceCompositeSceneSymbol): com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
				export module DistanceCompositeSceneSymbol {
					export class Range {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range>;
						public getMaxDistance(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDistanceSymbolRange;
						public constructor(param0: com.esri.arcgisruntime.symbology.Symbol, param1: number, param2: number);
						public getMinDistance(): number;
						public setMaxDistance(param0: number): void;
						public constructor(param0: com.esri.arcgisruntime.symbology.Symbol);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDistanceSymbolRange): com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range;
						public setMinDistance(param0: number): void;
						public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public setSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
					}
					export class RangeCollection extends com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range> {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.RangeCollection>;
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
						public iterator(): java.util.Iterator<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range>;
						public add(param0: com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range): boolean;
						public get(param0: number): com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range;
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range>): boolean;
						public subList(param0: number, param1: number): java.util.List<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range>;
						public toArray(param0: native.Array<any>): native.Array<any>;
						public addAll(param0: java.util.Collection<any>): boolean;
						public retainAll(param0: java.util.Collection<any>): boolean;
						public listIterator(param0: number): java.util.ListIterator<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range>;
						public isEmpty(): boolean;
						public add(param0: number, param1: com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range): void;
						public size(): number;
						public removeAll(param0: java.util.Collection<any>): boolean;
						public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range>): void;
						public contains(param0: any): boolean;
						public listIterator(): java.util.ListIterator<com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range>;
						public lastIndexOf(param0: any): number;
						public set(param0: number, param1: com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range): com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range;
						public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
						public remove(param0: number): com.esri.arcgisruntime.symbology.DistanceCompositeSceneSymbol.Range;
						public remove(param0: any): boolean;
						public indexOf(param0: any): number;
						public clear(): void;
						public addAll(param0: number, param1: java.util.Collection<any>): boolean;
						public containsAll(param0: java.util.Collection<any>): boolean;
						public toArray(): native.Array<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class FillSymbol extends com.esri.arcgisruntime.symbology.Symbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.FillSymbol>;
					public mOutline: com.esri.arcgisruntime.symbology.LineSymbol;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getOutline(): com.esri.arcgisruntime.symbology.LineSymbol;
					public toJson(): string;
					public setColor(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFillSymbol);
					public getColor(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public setOutline(param0: com.esri.arcgisruntime.symbology.LineSymbol): void;
					public getUnknownJson(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class FillSymbolLayer extends com.esri.arcgisruntime.symbology.SymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.FillSymbolLayer>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.bm);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class GeometricEffect {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.GeometricEffect>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeometricEffect);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeometricEffect;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class HatchFillSymbolLayer extends com.esri.arcgisruntime.symbology.FillSymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.HatchFillSymbolLayer>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.bm);
					public getAngle(): number;
					public constructor();
					public setPolyline(param0: com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol): void;
					public setSeparation(param0: number): void;
					public getPolyline(): com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreHatchFillSymbolLayer): com.esri.arcgisruntime.symbology.HatchFillSymbolLayer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public setAngle(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol, param1: number);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
					public getSeparation(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class HeatmapRenderer extends com.esri.arcgisruntime.symbology.Renderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.HeatmapRenderer>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.symbology.Symbol;
					public toJson(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.cl): com.esri.arcgisruntime.symbology.HeatmapRenderer;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class LineSymbol extends com.esri.arcgisruntime.symbology.Symbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.LineSymbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public setColor(param0: number): void;
					public getColor(): number;
					public setWidth(param0: number): void;
					public isAntiAlias(): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLineSymbol);
					public getWidth(): number;
					public setAntiAlias(param0: boolean): void;
					public getUnknownJson(): java.util.Map<string,any>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class MarkerSceneSymbol extends com.esri.arcgisruntime.symbology.SceneSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MarkerSceneSymbol>;
					public static DEFAULT_ANCHOR_POSITION: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSceneSymbol);
					public toJson(): string;
					public getPitch(): number;
					public setColor(param0: number): void;
					public getAnchorPosition(): com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
					public getColor(): number;
					public getHeight(): number;
					public setWidth(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public setHeight(param0: number): void;
					public setRoll(param0: number): void;
					public getHeading(): number;
					public setPitch(param0: number): void;
					public getWidth(): number;
					public getUnknownJson(): java.util.Map<string,any>;
					public setDepth(param0: number): void;
					public setHeading(param0: number): void;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public setAnchorPosition(param0: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): void;
					public getDepth(): number;
					public getRoll(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class MarkerSymbol extends com.esri.arcgisruntime.symbology.Symbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MarkerSymbol>;
					public setLeaderOffsetY(param0: number): void;
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getOffsetX(): number;
					public getUnknownJson(): java.util.Map<string,any>;
					public setOffsetX(param0: number): void;
					public setLeaderOffsetX(param0: number): void;
					public getLeaderOffsetX(): number;
					public setOffsetY(param0: number): void;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getAngle(): number;
					/** @deprecated */
					public getRotationType(): com.esri.arcgisruntime.symbology.RotationType;
					public getOffsetY(): number;
					public getAngleAlignment(): com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment;
					public setAngle(param0: number): void;
					public setAngleAlignment(param0: com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment): void;
					public getLeaderOffsetY(): number;
					/** @deprecated */
					public setRotationType(param0: com.esri.arcgisruntime.symbology.RotationType): void;
				}
				export module MarkerSymbol {
					export class AngleAlignment {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment>;
						public static MAP: com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment;
						public static SCREEN: com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class MarkerSymbolLayer extends com.esri.arcgisruntime.symbology.SymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MarkerSymbolLayer>;
					public getAnchor(): com.esri.arcgisruntime.symbology.SymbolAnchor;
					public setSize(param0: number): void;
					public getOffsetY(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public getHeading(): number;
					public getOffsetX(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer);
					public setOffsetX(param0: number): void;
					public getSize(): number;
					public setHeading(param0: number): void;
					public setAnchor(param0: com.esri.arcgisruntime.symbology.SymbolAnchor): void;
					public setOffsetY(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class ModelSceneSymbol extends com.esri.arcgisruntime.symbology.MarkerSceneSymbol implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.ModelSceneSymbol>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSceneSymbol);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getSymbolSizeUnits(): com.esri.arcgisruntime.symbology.SymbolSizeUnits;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreModelSceneSymbol): com.esri.arcgisruntime.symbology.ModelSceneSymbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public getUri(): string;
					public onRequestRequired(param0: com.esri.arcgisruntime.internal.jni.CoreRequest): com.esri.arcgisruntime.concurrent.ListenableFuture<any>;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public loadAsync(): void;
					public setSymbolSizeUnits(param0: com.esri.arcgisruntime.symbology.SymbolSizeUnits): void;
					public constructor(param0: string, param1: number);
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class MultilayerPointSymbol extends com.esri.arcgisruntime.symbology.MultilayerSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MultilayerPointSymbol>;
					public toJson(): string;
					public setSize(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getUnknownJson(): java.util.Map<string,any>;
					public getSize(): number;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.symbology.SymbolLayer>);
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getAngle(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol): com.esri.arcgisruntime.symbology.MultilayerSymbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerPointSymbol): com.esri.arcgisruntime.symbology.MultilayerPointSymbol;
					public getAngleAlignment(): com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment;
					public setAngle(param0: number): void;
					public setAngleAlignment(param0: com.esri.arcgisruntime.symbology.MarkerSymbol.AngleAlignment): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class MultilayerPolygonSymbol extends com.esri.arcgisruntime.symbology.MultilayerSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MultilayerPolygonSymbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol): com.esri.arcgisruntime.symbology.MultilayerSymbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerPolygonSymbol): com.esri.arcgisruntime.symbology.MultilayerPolygonSymbol;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol);
					public getUnknownJson(): java.util.Map<string,any>;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.symbology.SymbolLayer>);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class MultilayerPolylineSymbol extends com.esri.arcgisruntime.symbology.MultilayerSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol): com.esri.arcgisruntime.symbology.MultilayerSymbol;
					public setWidth(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getWidth(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol);
					public getUnknownJson(): java.util.Map<string,any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerPolylineSymbol): com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.symbology.SymbolLayer>);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class MultilayerSymbol extends com.esri.arcgisruntime.symbology.Symbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.MultilayerSymbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol): com.esri.arcgisruntime.symbology.MultilayerSymbol;
					public setColor(param0: number): void;
					public getColor(): number;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMultilayerSymbol);
					public getSymbolLayers(): java.util.List<com.esri.arcgisruntime.symbology.SymbolLayer>;
					public getUnknownJson(): java.util.Map<string,any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class PictureFillSymbol extends com.esri.arcgisruntime.symbology.FillSymbol implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.PictureFillSymbol>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setOpacity(param0: number): void;
					public setScaleX(param0: number): void;
					public setHeight(param0: number): void;
					public getUnknownJson(): java.util.Map<string,any>;
					public getUri(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public loadAsync(): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public setAngle(param0: number): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePictureFillSymbol): com.esri.arcgisruntime.symbology.PictureFillSymbol;
					public getOpacity(): number;
					public toJson(): string;
					public getScaleY(): number;
					public getHeight(): number;
					public setWidth(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getWidth(): number;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public static createAsync(param0: globalAndroid.graphics.drawable.BitmapDrawable): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.PictureFillSymbol>;
					public getAngle(): number;
					public getScaleX(): number;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFillSymbol);
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public setScaleY(param0: number): void;
					public getImage(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.BitmapDrawable;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class PictureFillSymbolLayer extends com.esri.arcgisruntime.symbology.FillSymbolLayer implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.PictureFillSymbolLayer>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setTintColor(param0: number): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePictureFillSymbolLayer): com.esri.arcgisruntime.symbology.PictureFillSymbolLayer;
					public cancelLoad(): void;
					public getUri(): string;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
					public static createAsync(param0: globalAndroid.graphics.drawable.BitmapDrawable): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.PictureFillSymbolLayer>;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.bm);
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getImage(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.BitmapDrawable;
					public getTintColor(): number;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class PictureMarkerSymbol extends com.esri.arcgisruntime.symbology.MarkerSymbol implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.PictureMarkerSymbol>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol);
					public constructor(param0: string, param1: com.esri.arcgisruntime.io.RequestConfiguration);
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setOpacity(param0: number): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbol): com.esri.arcgisruntime.symbology.PictureMarkerSymbol;
					public setHeight(param0: number): void;
					public getUnknownJson(): java.util.Map<string,any>;
					public getUri(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public loadAsync(): void;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public getOpacity(): number;
					public toJson(): string;
					public getHeight(): number;
					public setWidth(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getWidth(): number;
					public cancelLoad(): void;
					public static createAsync(param0: globalAndroid.graphics.drawable.BitmapDrawable): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.PictureMarkerSymbol>;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					/** @deprecated */
					public constructor(param0: globalAndroid.graphics.drawable.BitmapDrawable);
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					/** @deprecated */
					public getImage(): globalAndroid.graphics.drawable.BitmapDrawable;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getImage(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.BitmapDrawable;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class PictureMarkerSymbolLayer extends com.esri.arcgisruntime.symbology.MarkerSymbolLayer implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.PictureMarkerSymbolLayer>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public setTintColor(param0: number): void;
					public cancelLoad(): void;
					public static createAsync(param0: globalAndroid.graphics.drawable.BitmapDrawable): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.PictureMarkerSymbolLayer>;
					public getUri(): string;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getImage(param0: globalAndroid.content.res.Resources): globalAndroid.graphics.drawable.BitmapDrawable;
					public getTintColor(): number;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer);
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePictureMarkerSymbolLayer): com.esri.arcgisruntime.symbology.PictureMarkerSymbolLayer;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class Renderer extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.Renderer>;
					public toJson(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.symbology.Symbol;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public setRotationType(param0: com.esri.arcgisruntime.symbology.RotationType): void;
					public getRotationType(): com.esri.arcgisruntime.symbology.RotationType;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer);
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public static fromJson(param0: string): com.esri.arcgisruntime.symbology.Renderer;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getRotationExpression(): string;
					public setRotationExpression(param0: string): void;
					public getSceneProperties(): com.esri.arcgisruntime.symbology.Renderer.SceneProperties;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
				}
				export module Renderer {
					export class SceneProperties {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.Renderer.SceneProperties>;
						public getRollExpression(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRendererSceneProperties): com.esri.arcgisruntime.symbology.Renderer.SceneProperties;
						public getExtrusionExpression(): string;
						public setHeadingExpression(param0: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRendererSceneProperties;
						public setExtrusionMode(param0: com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode): void;
						public getHeadingExpression(): string;
						public setPitchExpression(param0: string): void;
						public getExtrusionMode(): com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
						public getPitchExpression(): string;
						public setExtrusionExpression(param0: string): void;
						public setRollExpression(param0: string): void;
					}
					export module SceneProperties {
						export class ExtrusionMode {
							public static class: java.lang.Class<com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode>;
							public static ABSOLUTE_HEIGHT: com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
							public static BASE_HEIGHT: com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
							public static MAXIMUM: com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
							public static MINIMUM: com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
							public static NONE: com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
							public static values(): native.Array<com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode>;
							public static valueOf(param0: string): com.esri.arcgisruntime.symbology.Renderer.SceneProperties.ExtrusionMode;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class RotationType {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.RotationType>;
					public static ARITHMETIC: com.esri.arcgisruntime.symbology.RotationType;
					public static GEOGRAPHIC: com.esri.arcgisruntime.symbology.RotationType;
					public static values(): native.Array<com.esri.arcgisruntime.symbology.RotationType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.symbology.RotationType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class SceneSymbol extends com.esri.arcgisruntime.symbology.Symbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SceneSymbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getUnknownJson(): java.util.Map<string,any>;
				}
				export module SceneSymbol {
					export class AnchorPosition {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition>;
						public static BOTTOM: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
						public static CENTER: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
						public static TOP: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
						public static ORIGIN: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SimpleFillSymbol extends com.esri.arcgisruntime.symbology.FillSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleFillSymbol>;
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style, param1: number, param2: com.esri.arcgisruntime.symbology.LineSymbol);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public getUnknownJson(): java.util.Map<string,any>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSimpleFillSymbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSimpleFillSymbol): com.esri.arcgisruntime.symbology.SimpleFillSymbol;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreFillSymbol);
					public constructor();
					public getStyle(): com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					public setStyle(param0: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
					public toMultilayerSymbol(): com.esri.arcgisruntime.symbology.MultilayerPolygonSymbol;
				}
				export module SimpleFillSymbol {
					export class Style {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style>;
						public static BACKWARD_DIAGONAL: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static FORWARD_DIAGONAL: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static DIAGONAL_CROSS: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static HORIZONTAL: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static VERTICAL: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static CROSS: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static SOLID: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static NULL: com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SimpleFillSymbol.Style;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SimpleLineSymbol extends com.esri.arcgisruntime.symbology.LineSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleLineSymbol>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSimpleLineSymbol): com.esri.arcgisruntime.symbology.SimpleLineSymbol;
					public getStyle(): com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
					public setStyle(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style): void;
					public toJson(): string;
					public getMarkerPlacement(): com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement;
					public constructor(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style, param1: number, param2: number, param3: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle, param4: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreLineSymbol);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public toMultilayerSymbol(): com.esri.arcgisruntime.symbology.MultilayerPolylineSymbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSimpleLineSymbol;
					public getMarkerStyle(): com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style, param1: number, param2: number);
					public constructor();
					public setMarkerStyle(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle): void;
					public setMarkerPlacement(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
				export module SimpleLineSymbol {
					export class MarkerPlacement {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement>;
						public static BEGIN: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement;
						public static END: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement;
						public static BEGIN_AND_END: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerPlacement>;
					}
					export class MarkerStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle>;
						public static NONE: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle;
						public static ARROW: com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SimpleLineSymbol.MarkerStyle;
					}
					export class Style {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style>;
						public static DASH: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
						public static DASH_DOT: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
						public static DASH_DOT_DOT: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
						public static DOT: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
						public static SOLID: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
						public static NULL: com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SimpleLineSymbol.Style;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SimpleMarkerSceneSymbol extends com.esri.arcgisruntime.symbology.MarkerSceneSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSceneSymbol);
					public toJson(): string;
					public getStyle(): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
					public constructor(param0: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style, param1: number, param2: number, param3: number, param4: number, param5: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition);
					public static createCone(param0: number, param1: number, param2: number): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createCylinder(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createCube(param0: number, param1: number, param2: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createDiamond(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public static createCone(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createSphere(param0: number, param1: number): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public static createTetrahedron(param0: number, param1: number, param2: number): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createCube(param0: number, param1: number): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createSphere(param0: number, param1: number, param2: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public static createCylinder(param0: number, param1: number, param2: number): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createTetrahedron(param0: number, param1: number, param2: number, param3: com.esri.arcgisruntime.symbology.SceneSymbol.AnchorPosition): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public setStyle(param0: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSimpleMarkerSceneSymbol): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createDiamond(param0: number, param1: number, param2: number): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
				export module SimpleMarkerSceneSymbol {
					export class Style {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style>;
						public static CUBE: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
						public static CONE: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
						public static CYLINDER: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
						public static DIAMOND: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
						public static SPHERE: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
						public static TETRAHEDRON: com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SimpleMarkerSceneSymbol.Style;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SimpleMarkerSymbol extends com.esri.arcgisruntime.symbology.MarkerSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleMarkerSymbol>;
					public getStyle(): com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
					public toJson(): string;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol);
					public setColor(param0: number): void;
					public setSize(param0: number): void;
					public getColor(): number;
					public setStyle(param0: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public toMultilayerSymbol(): com.esri.arcgisruntime.symbology.MultilayerPointSymbol;
					public constructor(param0: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style, param1: number, param2: number);
					public getUnknownJson(): java.util.Map<string,any>;
					public getSize(): number;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public setOutline(param0: com.esri.arcgisruntime.symbology.SimpleLineSymbol): void;
					public constructor();
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSimpleMarkerSymbol): com.esri.arcgisruntime.symbology.SimpleMarkerSymbol;
					public getOutline(): com.esri.arcgisruntime.symbology.SimpleLineSymbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
				export module SimpleMarkerSymbol {
					export class Style {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style>;
						public static CIRCLE: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static CROSS: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static DIAMOND: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static SQUARE: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static TRIANGLE: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static X: com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SimpleMarkerSymbol.Style>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SimpleRenderer extends com.esri.arcgisruntime.symbology.Renderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SimpleRenderer>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSimpleRenderer): com.esri.arcgisruntime.symbology.SimpleRenderer;
					public getLabel(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.symbology.Symbol;
					public toJson(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public setDescription(param0: string): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer);
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public constructor(param0: com.esri.arcgisruntime.symbology.Symbol);
					public setLabel(param0: string): void;
					public setSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
					public getUnknownJson(): java.util.Map<string,any>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRenderer;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor();
					public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSimpleRenderer;
					public getDescription(): string;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SolidFillSymbolLayer extends com.esri.arcgisruntime.symbology.FillSymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SolidFillSymbolLayer>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.bm);
					public setColor(param0: number): void;
					public getColor(): number;
					public constructor();
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSolidFillSymbolLayer): com.esri.arcgisruntime.symbology.SolidFillSymbolLayer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
					public constructor(param0: number);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SolidStrokeSymbolLayer extends com.esri.arcgisruntime.symbology.StrokeSymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SolidStrokeSymbolLayer>;
					public setColor(param0: number): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSolidStrokeSymbolLayer): com.esri.arcgisruntime.symbology.SolidStrokeSymbolLayer;
					public getColor(): number;
					public constructor();
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public constructor(param0: number, param1: number, param2: java.lang.Iterable<com.esri.arcgisruntime.symbology.GeometricEffect>, param3: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D);
					public constructor(param0: number, param1: number, param2: java.lang.Iterable<com.esri.arcgisruntime.symbology.GeometricEffect>);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreStrokeSymbolLayer);
					public getGeometricEffects(): java.util.List<com.esri.arcgisruntime.symbology.GeometricEffect>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export abstract class StrokeSymbolLayer extends com.esri.arcgisruntime.symbology.SymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.StrokeSymbolLayer>;
					public getCapStyle(): com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle;
					public setCapStyle(param0: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle): void;
					public setWidth(param0: number): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public getWidth(): number;
					public setLineStyle3D(param0: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreStrokeSymbolLayer);
					public getLineStyle3D(): com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D;
				}
				export module StrokeSymbolLayer {
					export class CapStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle>;
						public static BUTT: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle;
						public static ROUND: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle;
						public static SQUARE: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.StrokeSymbolLayer.CapStyle>;
					}
					export class LineStyle3D {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D>;
						public static TUBE: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D;
						public static STRIP: com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.StrokeSymbolLayer.LineStyle3D;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class Symbol extends com.esri.arcgisruntime.io.JsonSerializable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.Symbol>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public toJson(): string;
					public static fromJson(param0: string): com.esri.arcgisruntime.symbology.Symbol;
					public createSwatchAsync(param0: number, param1: number, param2: number, param3: number): com.esri.arcgisruntime.concurrent.ListenableFuture<globalAndroid.graphics.Bitmap>;
					public createSwatchAsync(param0: number, param1: number, param2: number, param3: number, param4: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.concurrent.ListenableFuture<globalAndroid.graphics.Bitmap>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public createSwatchAsync(param0: number, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<globalAndroid.graphics.Bitmap>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public createSwatchAsync(param0: globalAndroid.content.Context, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<globalAndroid.graphics.Bitmap>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SymbolAnchor {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SymbolAnchor>;
					public getX(): number;
					public getPlacementMode(): com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode;
					public constructor(param0: number, param1: number, param2: com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor): com.esri.arcgisruntime.symbology.SymbolAnchor;
					public getY(): number;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbolAnchor;
				}
				export module SymbolAnchor {
					export class PlacementMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode>;
						public static RELATIVE: com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode;
						public static ABSOLUTE: com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.SymbolAnchor.PlacementMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SymbolLayer>;
					public setEnabled(param0: boolean): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbolLayer;
					public setColorLocked(param0: boolean): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public isColorLocked(): boolean;
					public isEnabled(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SymbolSizeUnits {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SymbolSizeUnits>;
					public static DIPS: com.esri.arcgisruntime.symbology.SymbolSizeUnits;
					public static METERS: com.esri.arcgisruntime.symbology.SymbolSizeUnits;
					public static values(): native.Array<com.esri.arcgisruntime.symbology.SymbolSizeUnits>;
					public static valueOf(param0: string): com.esri.arcgisruntime.symbology.SymbolSizeUnits;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SymbolStyle extends com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SymbolStyle>;
					public getDefaultSearchParametersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.SymbolStyleSearchParameters>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbolStyle;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public loadAsync(): void;
					public retryLoadAsync(): void;
					public searchSymbolsAsync(param0: com.esri.arcgisruntime.symbology.SymbolStyleSearchParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.symbology.SymbolStyleSearchResult>>;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public getSymbolAsync(param0: java.util.List<string>): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.symbology.Symbol>;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolStyle);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SymbolStyleSearchParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SymbolStyleSearchParameters>;
					public isEmpty(): boolean;
					public setTagsStrictlyMatch(param0: boolean): void;
					public getSymbolClasses(): java.util.List<string>;
					public setSymbolClassesStrictlyMatch(param0: boolean): void;
					public setKeysStrictlyMatch(param0: boolean): void;
					public isKeysStrictlyMatch(): boolean;
					public isSymbolClassesStrictlyMatch(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchParameters;
					public getNames(): java.util.List<string>;
					public isCategoriesStrictlyMatch(): boolean;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchParameters): com.esri.arcgisruntime.symbology.SymbolStyleSearchParameters;
					public constructor();
					public getTags(): java.util.List<string>;
					public isTagsStrictlyMatch(): boolean;
					public isNamesStrictlyMatch(): boolean;
					public getCategories(): java.util.List<string>;
					public getKeys(): java.util.List<string>;
					public setNamesStrictlyMatch(param0: boolean): void;
					public setCategoriesStrictlyMatch(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class SymbolStyleSearchResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.SymbolStyleSearchResult>;
					public getKey(): string;
					public getTags(): java.util.List<string>;
					public getName(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchResult;
					public getCategory(): string;
					public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolStyleSearchResult): com.esri.arcgisruntime.symbology.SymbolStyleSearchResult;
					public getSymbolClass(): string;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class TextSymbol extends com.esri.arcgisruntime.symbology.MarkerSymbol {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.TextSymbol>;
					public getFontFamily(): string;
					public setFontStyle(param0: com.esri.arcgisruntime.symbology.TextSymbol.FontStyle): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbol);
					public setFontFamily(param0: string): void;
					public setSize(param0: number): void;
					public getHaloWidth(): number;
					public getOutlineColor(): number;
					public setVerticalAlignment(param0: com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment): void;
					public getOutlineWidth(): number;
					public getFontDecoration(): com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration;
					public getUnknownJson(): java.util.Map<string,any>;
					public getSize(): number;
					public getVerticalAlignment(): com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment;
					public getFontWeight(): com.esri.arcgisruntime.symbology.TextSymbol.FontWeight;
					public getHaloColor(): number;
					public setText(param0: string): void;
					public constructor();
					public getBackgroundColor(): number;
					public getHorizontalAlignment(): com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTextSymbol): com.esri.arcgisruntime.symbology.TextSymbol;
					public getFontStyle(): com.esri.arcgisruntime.symbology.TextSymbol.FontStyle;
					public toJson(): string;
					public constructor(param0: number, param1: string, param2: number, param3: com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment, param4: com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment);
					public setColor(param0: number): void;
					public getColor(): number;
					public getText(): string;
					public setFontDecoration(param0: com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration): void;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol);
					public setBackgroundColor(param0: number): void;
					public setOutlineWidth(param0: number): void;
					public setFontWeight(param0: com.esri.arcgisruntime.symbology.TextSymbol.FontWeight): void;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public setOutlineColor(param0: number): void;
					public setHorizontalAlignment(param0: com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment): void;
					public setHaloWidth(param0: number): void;
					public setHaloColor(param0: number): void;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbol): com.esri.arcgisruntime.symbology.Symbol;
				}
				export module TextSymbol {
					export class FontDecoration {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration>;
						public static LINE_THROUGH: com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration;
						public static NONE: com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration;
						public static UNDERLINE: com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.TextSymbol.FontDecoration>;
					}
					export class FontStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.TextSymbol.FontStyle>;
						public static NORMAL: com.esri.arcgisruntime.symbology.TextSymbol.FontStyle;
						public static ITALIC: com.esri.arcgisruntime.symbology.TextSymbol.FontStyle;
						public static OBLIQUE: com.esri.arcgisruntime.symbology.TextSymbol.FontStyle;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.TextSymbol.FontStyle>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.TextSymbol.FontStyle;
					}
					export class FontWeight {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.TextSymbol.FontWeight>;
						public static BOLD: com.esri.arcgisruntime.symbology.TextSymbol.FontWeight;
						public static NORMAL: com.esri.arcgisruntime.symbology.TextSymbol.FontWeight;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.TextSymbol.FontWeight;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.TextSymbol.FontWeight>;
					}
					export class HorizontalAlignment {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment>;
						public static CENTER: com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment;
						public static LEFT: com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment;
						public static RIGHT: com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.TextSymbol.HorizontalAlignment;
					}
					export class VerticalAlignment {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment>;
						public static MIDDLE: com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment;
						public static BOTTOM: com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment;
						public static TOP: com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment;
						public static values(): native.Array<com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment>;
						public static valueOf(param0: string): com.esri.arcgisruntime.symbology.TextSymbol.VerticalAlignment;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class UniqueValueRenderer extends com.esri.arcgisruntime.symbology.Renderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.UniqueValueRenderer>;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.symbology.Symbol;
					public toJson(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreRenderer);
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public setDefaultSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
					public getDefaultLabel(): string;
					public getDefaultSymbol(): com.esri.arcgisruntime.symbology.Symbol;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public constructor(param0: java.lang.Iterable<string>, param1: java.lang.Iterable<com.esri.arcgisruntime.symbology.UniqueValueRenderer.UniqueValue>, param2: string, param3: com.esri.arcgisruntime.symbology.Symbol);
					public constructor();
					public setDefaultLabel(param0: string): void;
					public getFieldNames(): java.util.List<string>;
					public getUniqueValues(): java.util.List<com.esri.arcgisruntime.symbology.UniqueValueRenderer.UniqueValue>;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUniqueValueRenderer): com.esri.arcgisruntime.symbology.UniqueValueRenderer;
				}
				export module UniqueValueRenderer {
					export class UniqueValue extends com.esri.arcgisruntime.io.JsonSerializable {
						public static class: java.lang.Class<com.esri.arcgisruntime.symbology.UniqueValueRenderer.UniqueValue>;
						public getUnknownJson(): java.util.Map<string,any>;
						public constructor();
						public getLabel(): string;
						public constructor(param0: string, param1: string, param2: com.esri.arcgisruntime.symbology.Symbol, param3: java.lang.Iterable<any>);
						public static fromJson(param0: string): com.esri.arcgisruntime.symbology.UniqueValueRenderer.UniqueValue;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public setDescription(param0: string): void;
						public setSymbol(param0: com.esri.arcgisruntime.symbology.Symbol): void;
						public setLabel(param0: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUniqueValue;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUniqueValue): com.esri.arcgisruntime.symbology.UniqueValueRenderer.UniqueValue;
						public getDescription(): string;
						public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
						public getValues(): java.util.List<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class UnsupportedRenderer extends com.esri.arcgisruntime.symbology.Renderer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.UnsupportedRenderer>;
					public getUnsupportedJson(): java.util.Map<string,any>;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic): com.esri.arcgisruntime.symbology.Symbol;
					public toJson(): string;
					public getSymbol(param0: com.esri.arcgisruntime.mapping.view.Graphic, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature, param1: boolean): com.esri.arcgisruntime.symbology.Symbol;
					public getUnknownJson(): java.util.Map<string,any>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.ja): com.esri.arcgisruntime.symbology.UnsupportedRenderer;
					public getSymbol(param0: com.esri.arcgisruntime.data.Feature): com.esri.arcgisruntime.symbology.Symbol;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class VectorMarkerSymbolElement {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.VectorMarkerSymbolElement>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolElement): com.esri.arcgisruntime.symbology.VectorMarkerSymbolElement;
					public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
					public getSymbol(): com.esri.arcgisruntime.symbology.Symbol;
					public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: com.esri.arcgisruntime.symbology.MultilayerSymbol);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolElement;
					public setSymbol(param0: com.esri.arcgisruntime.symbology.MultilayerSymbol): void;
					public setGeometry(param0: com.esri.arcgisruntime.geometry.Geometry): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module symbology {
				export class VectorMarkerSymbolLayer extends com.esri.arcgisruntime.symbology.MarkerSymbolLayer {
					public static class: java.lang.Class<com.esri.arcgisruntime.symbology.VectorMarkerSymbolLayer>;
					public getVectorMarkerSymbolElements(): java.util.List<com.esri.arcgisruntime.symbology.VectorMarkerSymbolElement>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreVectorMarkerSymbolLayer): com.esri.arcgisruntime.symbology.VectorMarkerSymbolLayer;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreMarkerSymbolLayer);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSymbolLayer): com.esri.arcgisruntime.symbology.SymbolLayer;
					public constructor(param0: java.lang.Iterable<com.esri.arcgisruntime.symbology.VectorMarkerSymbolElement>);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class GeocodeParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.GeocodeParameters>;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getPreferredSearchLocation(): com.esri.arcgisruntime.geometry.Point;
						public setPreferredSearchLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
						public constructor();
						public setMaxResults(param0: number): void;
						public getCategories(): java.util.List<string>;
						public setOutputLanguageCode(param0: string): void;
						public setSearchArea(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public isForStorage(): boolean;
						public getMinScore(): number;
						public setCountryCode(param0: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeocodeParameters;
						public getCountryCode(): string;
						public getResultAttributeNames(): java.util.List<string>;
						public getMaxResults(): number;
						public setMinScore(param0: number): void;
						public setOutputSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public getSearchArea(): com.esri.arcgisruntime.geometry.Geometry;
						public getOutputLanguageCode(): string;
						public setForStorage(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class GeocodeResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>;
						public getRouteLocation(): com.esri.arcgisruntime.geometry.Point;
						public getScore(): number;
						public getExtent(): com.esri.arcgisruntime.geometry.Envelope;
						public getDisplayLocation(): com.esri.arcgisruntime.geometry.Point;
						public getLabel(): string;
						public getInputLocation(): com.esri.arcgisruntime.geometry.Point;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeocodeResult): com.esri.arcgisruntime.tasks.geocode.GeocodeResult;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeocodeResult;
						public getAttributes(): java.util.Map<string,any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class LocatorAttribute {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.LocatorAttribute>;
						public isRequired(): boolean;
						public getDisplayName(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocatorAttribute;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocatorAttribute): com.esri.arcgisruntime.tasks.geocode.LocatorAttribute;
						public getName(): string;
						public getType(): com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type;
					}
					export module LocatorAttribute {
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type>;
							public static INTEGER: com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type;
							public static DOUBLE: com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type;
							public static STRING: com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type;
							public static BOOLEAN: com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type;
							public static UNKNOWN: com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geocode.LocatorAttribute.Type>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class LocatorInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.LocatorInfo>;
						public getResultAttributes(): java.util.List<com.esri.arcgisruntime.tasks.geocode.LocatorAttribute>;
						public getVersion(): string;
						public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getName(): string;
						public isSupportsSuggestions(): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocatorInfo;
						public isSupportsIntersections(): boolean;
						public isSupportsAddresses(): boolean;
						public isSupportsPoi(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocatorInfo): com.esri.arcgisruntime.tasks.geocode.LocatorInfo;
						public getIntersectionResultAttributes(): java.util.List<com.esri.arcgisruntime.tasks.geocode.LocatorAttribute>;
						public getDescription(): string;
						public getSearchAttributes(): java.util.List<com.esri.arcgisruntime.tasks.geocode.LocatorAttribute>;
						public getProperties(): java.util.Map<string,string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class LocatorTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.LocatorTask>;
						public geocodeAsync(param0: string, param1: com.esri.arcgisruntime.tasks.geocode.GeocodeParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public geocodeAsync(param0: com.esri.arcgisruntime.tasks.geocode.SuggestResult): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreLocatorTask): com.esri.arcgisruntime.tasks.geocode.LocatorTask;
						public getUri(): string;
						public geocodeAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public geocodeAsync(param0: com.esri.arcgisruntime.tasks.geocode.SuggestResult, param1: com.esri.arcgisruntime.tasks.geocode.GeocodeParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public reverseGeocodeAsync(param0: com.esri.arcgisruntime.geometry.Point): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public loadAsync(): void;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public geocodeAsync(param0: java.util.Map<string,string>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public suggestAsync(param0: string, param1: com.esri.arcgisruntime.tasks.geocode.SuggestParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.SuggestResult>>;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreLocatorTask;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getLocatorInfo(): com.esri.arcgisruntime.tasks.geocode.LocatorInfo;
						public geocodeAsync(param0: java.util.Map<string,string>, param1: com.esri.arcgisruntime.tasks.geocode.GeocodeParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public reverseGeocodeAsync(param0: com.esri.arcgisruntime.geometry.Point, param1: com.esri.arcgisruntime.tasks.geocode.ReverseGeocodeParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.GeocodeResult>>;
						public suggestAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geocode.SuggestResult>>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class ReverseGeocodeParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.ReverseGeocodeParameters>;
						public getMaxDistance(): number;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public constructor();
						public setMaxResults(param0: number): void;
						public setOutputLanguageCode(param0: string): void;
						public isForStorage(): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreReverseGeocodeParameters;
						public getFeatureTypes(): java.util.List<string>;
						public getResultAttributeNames(): java.util.List<string>;
						public getMaxResults(): number;
						public setMaxDistance(param0: number): void;
						public setOutputSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public getOutputLanguageCode(): string;
						public setForStorage(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class SuggestParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.SuggestParameters>;
						public getPreferredSearchLocation(): com.esri.arcgisruntime.geometry.Point;
						public setPreferredSearchLocation(param0: com.esri.arcgisruntime.geometry.Point): void;
						public constructor();
						public setMaxResults(param0: number): void;
						public getCategories(): java.util.List<string>;
						public setSearchArea(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public getMaxResults(): number;
						public setCountryCode(param0: string): void;
						public getCountryCode(): string;
						public getSearchArea(): com.esri.arcgisruntime.geometry.Geometry;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSuggestParameters;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geocode {
					export class SuggestResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geocode.SuggestResult>;
						public isCollection(): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSuggestResult;
						public getLabel(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSuggestResult): com.esri.arcgisruntime.tasks.geocode.SuggestResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class GenerateGeodatabaseJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseJob>;
						public getUnknownJson(): java.util.Map<string,any>;
						public getResult(): com.esri.arcgisruntime.data.Geodatabase;
						public getUri(): string;
						public getResult(): any;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public toJson(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseJob): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseJob;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class GenerateGeodatabaseParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters>;
						public constructor();
						public setOutSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters;
						public getOutSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateGeodatabaseParameters): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters;
						public setAttachmentSyncDirection(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection): void;
						public isReturnAttachments(): boolean;
						public getSyncModel(): com.esri.arcgisruntime.data.SyncModel;
						public setSyncModel(param0: com.esri.arcgisruntime.data.SyncModel): void;
						public getAttachmentSyncDirection(): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
						public getExtent(): com.esri.arcgisruntime.geometry.Geometry;
						public setReturnAttachments(param0: boolean): void;
						public getLayerOptions(): java.util.List<com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption>;
						public setExtent(param0: com.esri.arcgisruntime.geometry.Geometry): void;
					}
					export module GenerateGeodatabaseParameters {
						export class AttachmentSyncDirection {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection>;
							public static BIDIRECTIONAL: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
							public static UPLOAD: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
							public static NONE: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class GenerateLayerOption {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGenerateLayerOption;
						public constructor();
						public constructor(param0: number, param1: string);
						public isIncludeRelated(): boolean;
						public setWhereClause(param0: string): void;
						public setLayerId(param0: number): void;
						public setQueryOption(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption): void;
						public constructor(param0: number, param1: boolean);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateLayerOption): com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption;
						public constructor(param0: number);
						public setIncludeRelated(param0: boolean): void;
						public getLayerId(): number;
						public getQueryOption(): com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption;
						public setUseGeometry(param0: boolean): void;
						public getWhereClause(): string;
						public isUseGeometry(): boolean;
					}
					export module GenerateLayerOption {
						export class QueryOption {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption>;
							public static ALL: com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption;
							public static NONE: com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption;
							public static USE_FILTER: com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geodatabase.GenerateLayerOption.QueryOption>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class GeodatabaseSyncTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.GeodatabaseSyncTask>;
						public cancelLoad(): void;
						public generateGeodatabase(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters, param1: string): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseJob;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						/** @deprecated */
						public syncGeodatabaseAsync(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters, param1: com.esri.arcgisruntime.data.Geodatabase): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseJob;
						public syncGeodatabase(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection, param1: boolean, param2: com.esri.arcgisruntime.data.Geodatabase): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseJob;
						public registerSyncEnabledGeodatabaseAsync(param0: com.esri.arcgisruntime.data.Geodatabase): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public getUri(): string;
						public getFeatureServiceInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISFeatureServiceInfo;
						public unregisterGeodatabaseAsync(param0: java.util.UUID): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public loadAsync(): void;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						/** @deprecated */
						public generateGeodatabaseAsync(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters, param1: string): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseJob;
						public unregisterGeodatabaseAsync(param0: com.esri.arcgisruntime.data.Geodatabase): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public createDefaultSyncGeodatabaseParametersAsync(param0: com.esri.arcgisruntime.data.Geodatabase, param1: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters>;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public createDefaultSyncGeodatabaseParametersAsync(param0: com.esri.arcgisruntime.data.Geodatabase): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters>;
						public static importDeltaAsync(param0: com.esri.arcgisruntime.data.Geodatabase, param1: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geodatabase.SyncLayerResult>>;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						/** @deprecated */
						public importGeodatabaseDeltaAsync(param0: com.esri.arcgisruntime.data.Geodatabase, param1: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.geodatabase.SyncLayerResult>>;
						public syncGeodatabase(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters, param1: com.esri.arcgisruntime.data.Geodatabase): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseJob;
						public createDefaultGenerateGeodatabaseParametersAsync(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters>;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class SyncGeodatabaseJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseJob>;
						public getUnknownJson(): java.util.Map<string,any>;
						public getUri(): string;
						public getResult(): any;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseJob): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseJob;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getResult(): java.util.List<com.esri.arcgisruntime.tasks.geodatabase.SyncLayerResult>;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class SyncGeodatabaseParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters>;
						public setSyncDirection(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection): void;
						public constructor();
						public setRollbackOnFailure(param0: boolean): void;
						public getLayerOptions(): java.util.List<com.esri.arcgisruntime.tasks.geodatabase.SyncLayerOption>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseParameters;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSyncGeodatabaseParameters): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters;
						public getSyncDirection(): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
						public isRollbackOnFailure(): boolean;
					}
					export module SyncGeodatabaseParameters {
						export class SyncDirection {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection>;
							public static BIDIRECTIONAL: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
							public static UPLOAD: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
							public static DOWNLOAD: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
							public static NONE: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection>;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class SyncLayerOption {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.SyncLayerOption>;
						public setSyncDirection(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection): void;
						public constructor();
						public constructor(param0: number);
						public constructor(param0: number, param1: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection);
						public getLayerId(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSyncLayerOption): com.esri.arcgisruntime.tasks.geodatabase.SyncLayerOption;
						public getSyncDirection(): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
						public setLayerId(param0: number): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSyncLayerOption;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geodatabase {
					export class SyncLayerResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geodatabase.SyncLayerResult>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSyncLayerResult): com.esri.arcgisruntime.tasks.geodatabase.SyncLayerResult;
						public getLayerId(): number;
						public getEditResults(): java.util.List<com.esri.arcgisruntime.data.FeatureEditResult>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSyncLayerResult;
						public getTableName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingBoolean extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingBoolean>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public setValue(param0: boolean): void;
						public constructor();
						public getValue(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingBoolean): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingBoolean;
						public constructor(param0: boolean);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingDataFile extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter implements com.esri.arcgisruntime.io.RemoteResource {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDataFile>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public constructor();
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public getUrl(): string;
						public fetchFileAsync(param0: string): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public getUploadId(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDataFile;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile);
						public setUrl(param0: string): void;
						public getUri(): string;
						public getInputFilePath(): string;
						public setUploadId(param0: string): void;
						public setInputFilePath(param0: string): void;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingDate extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDate>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public constructor();
						public getValue(): java.util.Calendar;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDate): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDate;
						public constructor(param0: java.util.Calendar);
						public setValue(param0: java.util.Calendar): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingDouble extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDouble>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public constructor();
						public constructor(param0: number);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public setValue(param0: number): void;
						public getValue(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDouble): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDouble;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingFeatureSet extends com.esri.arcgisruntime.data.FeatureSet {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingFeatureSet>;
						public getFields(): java.util.List<com.esri.arcgisruntime.data.Field>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatureSet;
						public iterator(): java.util.Iterator<com.esri.arcgisruntime.data.Feature>;
						public isTransferLimitExceeded(): boolean;
						public getSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getGeometryType(): com.esri.arcgisruntime.geometry.GeometryType;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatureSet): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingFeatureSet;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingFeatures extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter implements com.esri.arcgisruntime.io.RemoteResource {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingFeatures>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public constructor();
						public setFeatures(param0: com.esri.arcgisruntime.data.FeatureSet): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public getUrl(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public setUrl(param0: string): void;
						public getFeatures(): com.esri.arcgisruntime.data.FeatureSet;
						public fetchOutputFeaturesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.lang.Void>;
						public getUri(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingFeatures): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingFeatures;
						public canFetchOutputFeatures(): boolean;
						public constructor(param0: com.esri.arcgisruntime.data.FeatureSet);
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingJob>;
						public getUnknownJson(): java.util.Map<string,any>;
						public getParameters(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters;
						public getResult(): any;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getUri(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingJob, param1: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingJob;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingJob): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingJob;
						public getResult(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingResult;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingLinearUnit extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public setDistance(param0: number): void;
						public constructor();
						public constructor(param0: number, param1: com.esri.arcgisruntime.geometry.LinearUnitId);
						public getUnit(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
						public constructor(param0: number, param1: com.esri.arcgisruntime.geometry.LinearUnit);
						public getLinearUnit(): com.esri.arcgisruntime.geometry.LinearUnit;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public constructor(param0: com.esri.arcgisruntime.geometry.LinearUnitId);
						public constructor(param0: com.esri.arcgisruntime.geometry.LinearUnit);
						public constructor(param0: number);
						public setUnit(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingLinearUnit): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit;
						public getDistance(): number;
						public constructor(param0: number, param1: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit);
					}
					export module GeoprocessingLinearUnit {
						export class Unit {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit>;
							public static CENTIMETER: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static DECIMETER: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static KILOMETER: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static METER: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static MILLIMETER: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static POINT: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static US_NAUTICAL_MILE: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static US_SURVEY_FOOT: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static US_SURVEY_INCH: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static US_SURVEY_MILE: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static US_SURVEY_YARD: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit>;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLinearUnit.Unit;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingLong extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLong>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public constructor();
						public constructor(param0: number);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingLong): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingLong;
						public setValue(param0: number): void;
						public getValue(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingMultiValue extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingMultiValue>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public getValueParameterType(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
						public getValues(): java.util.List<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingMultiValue): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingMultiValue;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public constructor(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter;
					}
					export module GeoprocessingParameter {
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type>;
							public static GEOPROCESSING_BOOLEAN: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_DATA_FILE: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_DATE: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_DOUBLE: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_LINEAR_UNIT: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_LONG: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_MULTI_VALUE: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_RASTER: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_STRING: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_FEATURES: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static GEOPROCESSING_UNKNOWN_PARAMETER: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingParameterInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo>;
						public getChoiceList(): java.util.List<string>;
						public isRequired(): boolean;
						public getCategory(): string;
						public getDisplayName(): string;
						public getDirection(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo.Direction;
						public getDataType(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
						public getDefaultValue(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public isFeaturesRequireGeometry(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameterInfo): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo;
						public getDescription(): string;
						public getName(): string;
						public getMultiValueDataType(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter.Type;
					}
					export module GeoprocessingParameterInfo {
						export class Direction {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo.Direction>;
							public static INPUT: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo.Direction;
							public static OUTPUT: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo.Direction;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo.Direction>;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo.Direction;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters>;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public constructor(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameters;
						public getReturnZ(): boolean;
						public setProcessSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public setReturnM(param0: boolean): void;
						public setReturnZ(param0: boolean): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameters): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters;
						public setOutputSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public getInputs(): java.util.Map<string,com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter>;
						public getProcessSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getReturnM(): boolean;
						public getExecutionType(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType;
					}
					export module GeoprocessingParameters {
						export class ExecutionType {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType>;
							public static SYNCHRONOUS_EXECUTE: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType;
							public static ASYNCHRONOUS_SUBMIT: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingRaster extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDataFile {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingRaster>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public constructor();
						public setFormat(param0: string): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingDataFile;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingDataFile);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingRaster): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingRaster;
						public getUri(): string;
						public constructor(param0: string, param1: string);
						public getFormat(): string;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingResult>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGeoprocessingResult;
						public getMapImageLayer(): com.esri.arcgisruntime.layers.ArcGISMapImageLayer;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingResult): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingResult;
						public getOutputs(): java.util.Map<string,com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingString extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingString>;
						public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter);
						public constructor();
						public setValue(param0: string): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingString): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingString;
						public getValue(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingTask>;
						public createJob(param0: com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingJob;
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingTask): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingTask;
						public getGeoprocessingTaskInfo(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingTaskInfo;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getUri(): string;
						public createDefaultParametersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters>;
						public loadAsync(): void;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingTaskInfo>;
						public getCategory(): string;
						public getDisplayName(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingTaskInfo): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingTaskInfo;
						public getParameterInfos(): java.util.List<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameterInfo>;
						public getUrl(): string;
						public getDescription(): string;
						public getHelpUrl(): string;
						public getName(): string;
						public getExecutionType(): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameters.ExecutionType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module geoprocessing {
					export class GeoprocessingUnknownParameter extends com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingUnknownParameter>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGeoprocessingParameter): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.cd): com.esri.arcgisruntime.tasks.geoprocessing.GeoprocessingParameter;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class AttributeParameterValue {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.AttributeParameterValue>;
						public setParameterValue(param0: any): void;
						public constructor();
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreAttributeParameterValue;
						public getParameterName(): string;
						public getAttributeName(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreAttributeParameterValue): com.esri.arcgisruntime.tasks.networkanalysis.AttributeParameterValue;
						public setParameterName(param0: string): void;
						public getParameterValue(): any;
						public setAttributeName(param0: string): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class AttributeUnit {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit>;
						public static UNKNOWN: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static FEET: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static MILES: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static METERS: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static KILOMETERS: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static NAUTICAL_MILES: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static DECIMAL_DEGREES: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static MINUTES: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static HOURS: com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class BarrierType {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.BarrierType>;
						public static RESTRICTION: com.esri.arcgisruntime.tasks.networkanalysis.BarrierType;
						public static COST_ADJUSTMENT: com.esri.arcgisruntime.tasks.networkanalysis.BarrierType;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.BarrierType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.BarrierType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ClosestFacilityParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityParameters>;
						public setRouteShapeType(param0: com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType): void;
						public isReturnRoutes(): boolean;
						public setPolylineBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>): void;
						public setDirectionsStyle(param0: com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle): void;
						public getDirectionsStyle(): com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public getDirectionsDistanceUnits(): com.esri.arcgisruntime.UnitSystem;
						public isReturnPointBarriers(): boolean;
						public setReturnDirections(param0: boolean): void;
						public getAccumulateAttributeNames(): java.util.List<string>;
						public clearPointBarriers(): void;
						public setReturnPointBarriers(param0: boolean): void;
						public getSearchWhereClause(param0: string): string;
						public setSearchWhereClause(param0: string, param1: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityParameters;
						public getStartTimeUsage(): com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getTravelDirection(): com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
						public setIncidents(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.Incident>): void;
						public setPointBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>): void;
						public setReturnRoutes(param0: boolean): void;
						public getDirectionsLanguage(): string;
						public setTravelDirection(param0: com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection): void;
						public setPointBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public setStartTimeUsage(param0: com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage): void;
						public setFacilities(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.Facility>): void;
						public setDefaultTargetFacilityCount(param0: number): void;
						public setOutputSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public setPolylineBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public setFacilities(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public setDirectionsLanguage(param0: string): void;
						public setTravelMode(param0: com.esri.arcgisruntime.tasks.networkanalysis.TravelMode): void;
						public setPolygonBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public isReturnDirections(): boolean;
						public clearFacilities(): void;
						public setStartTime(param0: java.util.Calendar): void;
						public isReturnPolygonBarriers(): boolean;
						public clearPolylineBarriers(): void;
						public setDirectionsDistanceUnits(param0: com.esri.arcgisruntime.UnitSystem): void;
						public clearPolygonBarriers(): void;
						public getDefaultTargetFacilityCount(): number;
						public setReturnPolylineBarriers(param0: boolean): void;
						public setIncidents(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public getStartTime(): java.util.Calendar;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreClosestFacilityParameters): com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityParameters;
						public setPolygonBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>): void;
						public getDefaultImpedanceCutoff(): number;
						public getTravelMode(): com.esri.arcgisruntime.tasks.networkanalysis.TravelMode;
						public clearIncidents(): void;
						public setReturnPolygonBarriers(param0: boolean): void;
						public getRouteShapeType(): com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
						public setDefaultImpedanceCutoff(param0: number): void;
						public isReturnPolylineBarriers(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ClosestFacilityResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityResult>;
						public getRoute(param0: number, param1: number): com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityRoute;
						public getMessages(): java.util.List<string>;
						public getIncidents(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.Incident>;
						public getRankedFacilityIndexes(param0: number): java.util.List<java.lang.Integer>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityResult;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreClosestFacilityResult): com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityResult;
						public getPolygonBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>;
						public getDirectionsLanguage(): string;
						public getFacilityCosts(param0: string, param1: number): java.util.List<java.lang.Double>;
						public getFacilities(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.Facility>;
						public getPolylineBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>;
						public getPointBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ClosestFacilityRoute {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityRoute>;
						public getStartTimeShift(): number;
						public getTotalLength(): number;
						public getTravelTime(): number;
						public getStartTime(): java.util.Calendar;
						public getEndTimeShift(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityRoute;
						public getCost(param0: string): number;
						public getTotalTime(): number;
						public getDepartureCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public getArrivalCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public getRouteGeometry(): com.esri.arcgisruntime.geometry.Polyline;
						public getDirectionManeuvers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuver>;
						public getEndTime(): java.util.Calendar;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreClosestFacilityRoute): com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityRoute;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ClosestFacilityTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityTask>;
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: string);
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: com.esri.arcgisruntime.data.TransportationNetworkDataset);
						public getUri(): string;
						public solveClosestFacilityAsync(param0: com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityResult>;
						public getTransportationNetworkDataset(): com.esri.arcgisruntime.data.TransportationNetworkDataset;
						public getClosestFacilityTaskInfo(): com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityTaskInfo;
						public createDefaultParametersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityParameters>;
						public loadAsync(): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ClosestFacilityTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityTaskInfo>;
						public getStartTimeUsage(): com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getNetworkName(): string;
						public getRestrictionAttributes(): java.util.Map<string,com.esri.arcgisruntime.tasks.networkanalysis.RestrictionAttribute>;
						public getDefaultTravelModeName(): string;
						public getStartTime(): java.util.Calendar;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreClosestFacilityTaskInfo;
						public getDirectionsStyle(): com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public getTravelDirection(): com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
						public getDirectionsDistanceUnits(): com.esri.arcgisruntime.UnitSystem;
						public getDefaultImpedanceCutoff(): number;
						public getSupportedLanguages(): java.util.List<string>;
						public getDirectionsLanguage(): string;
						public getMaxLocatingDistance(): number;
						public getRouteShapeType(): com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
						public getDirectionsSupport(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport;
						public getAccumulateAttributeNames(): java.util.List<string>;
						public getSupportedRestrictionUsageParameterValues(): java.util.List<string>;
						public getDefaultTargetFacilityCount(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreClosestFacilityTaskInfo): com.esri.arcgisruntime.tasks.networkanalysis.ClosestFacilityTaskInfo;
						public getCostAttributes(): java.util.Map<string,com.esri.arcgisruntime.tasks.networkanalysis.CostAttribute>;
						public getTravelModes(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.TravelMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class CostAttribute {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.CostAttribute>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreCostAttribute;
						public getParameterValues(): java.util.Map<string,any>;
						public getUnit(): com.esri.arcgisruntime.tasks.networkanalysis.AttributeUnit;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreCostAttribute): com.esri.arcgisruntime.tasks.networkanalysis.CostAttribute;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class CurbApproach {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach>;
						public static UNKNOWN: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public static EITHER_SIDE: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public static LEFT_SIDE: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public static RIGHT_SIDE: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public static NO_UTURN: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class DirectionEvent {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.DirectionEvent>;
						public getGeometry(): com.esri.arcgisruntime.geometry.Point;
						public getEstimatedArrivalTime(): java.util.Calendar;
						public getEventText(): string;
						public getEstimatedArrivalTimeShift(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDirectionEvent;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDirectionEvent): com.esri.arcgisruntime.tasks.networkanalysis.DirectionEvent;
						public getEventMessages(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessage>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class DirectionManeuver {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuver>;
						public getManeuverMessages(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessage>;
						public getDuration(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDirectionManeuver;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDirectionManeuver): com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuver;
						public getFromLevel(): number;
						public getLength(): number;
						public getEstimatedArrivalTimeShift(): number;
						public getGeometry(): com.esri.arcgisruntime.geometry.Geometry;
						public getEstimatedArrivalTime(): java.util.Calendar;
						public getToLevel(): number;
						public getDirectionText(): string;
						public getDirectionEvents(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.DirectionEvent>;
						public getManeuverType(): com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class DirectionManeuverType {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType>;
						public static UNKNOWN: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static STOP: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static STRAIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static BEAR_LEFT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static BEAR_RIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static TURN_LEFT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static TURN_RIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static SHARP_LEFT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static SHARP_RIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static U_TURN: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static FERRY: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static ROUNDABOUT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static HIGHWAY_MERGE: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static HIGHWAY_EXIT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static HIGHWAY_CHANGE: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static FORK_CENTER: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static FORK_LEFT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static FORK_RIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static DEPART: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static TRIP_ITEM: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static END_OF_FERRY: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static RAMP_RIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static RAMP_LEFT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static TURN_LEFT_RIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static TURN_RIGHT_LEFT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static TURN_RIGHT_RIGHT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static TURN_LEFT_LEFT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static PEDESTRIAN_RAMP: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static ELEVATOR: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static ESCALATOR: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static STAIRS: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static DOOR_PASSAGE: com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuverType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class DirectionMessage {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessage>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDirectionMessage;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDirectionMessage): com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessage;
						public getType(): com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public getText(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class DirectionMessageType {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType>;
						public static LENGTH: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static TIME: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static SUMMARY: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static TIME_WINDOW: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static VIOLATION_TIME: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static WAIT_TIME: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static SERVICE_TIME: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static ESTIMATED_ARRIVAL_TIME: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static CUMULATIVE_LENGTH: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static STREET_NAME: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static ALTERNATIVE_NAME: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static BRANCH: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static TOWARD: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static CROSS_STREET: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static EXIT: com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.DirectionMessageType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class DirectionsStyle {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle>;
						public static DESKTOP: com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public static NAVIGATION: com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public static CAMPUS: com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class Facility {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.Facility>;
						public setNetworkLocation(param0: com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation): void;
						public getImpedanceCutoff(): number;
						public setNavigationLatency(param0: number): void;
						public setFacilityId(param0: number): void;
						public getName(): string;
						public getDistanceToNetworkLocation(): number;
						public getGeometry(): com.esri.arcgisruntime.geometry.Point;
						public setCurrentBearing(param0: number): void;
						public getCurrentBearing(): number;
						public setNavigationSpeed(param0: number): void;
						public getCurrentBearingTolerance(): number;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point);
						public setName(param0: string): void;
						public getNetworkLocation(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation;
						public getNavigationLatency(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreFacility): com.esri.arcgisruntime.tasks.networkanalysis.Facility;
						public getCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public setImpedanceCutoff(param0: number): void;
						public getLocationStatus(): com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public getAddedCost(param0: string): number;
						public setAddedCost(param0: string, param1: number): void;
						public setCurbApproach(param0: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach): void;
						public getNavigationSpeed(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreFacility;
						public getFacilityId(): number;
						public setCurrentBearingTolerance(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class Incident {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.Incident>;
						public setTargetFacilityCount(param0: number): void;
						public setNetworkLocation(param0: com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation): void;
						public getImpedanceCutoff(): number;
						public setNavigationLatency(param0: number): void;
						public getName(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreIncident): com.esri.arcgisruntime.tasks.networkanalysis.Incident;
						public getDistanceToNetworkLocation(): number;
						public getGeometry(): com.esri.arcgisruntime.geometry.Point;
						public setCurrentBearing(param0: number): void;
						public getIncidentId(): number;
						public getCurrentBearing(): number;
						public setNavigationSpeed(param0: number): void;
						public getCurrentBearingTolerance(): number;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point);
						public setName(param0: string): void;
						public getNetworkLocation(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation;
						public getTargetFacilityCount(): number;
						public getNavigationLatency(): number;
						public setIncidentId(param0: number): void;
						public getCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public setImpedanceCutoff(param0: number): void;
						public getLocationStatus(): com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public getAddedCost(param0: string): number;
						public setAddedCost(param0: string, param1: number): void;
						public setCurbApproach(param0: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach): void;
						public getNavigationSpeed(): number;
						public setCurrentBearingTolerance(param0: number): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreIncident;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class LocationStatus {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus>;
						public static NOT_LOCATED: com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public static ON_CLOSEST: com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public static ON_CLOSEST_NOT_RESTRICTED: com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public static NOT_REACHED: com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class NetworkDirectionsSupport {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport>;
						public static UNKNOWN: com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport;
						public static UNSUPPORTED: com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport;
						public static SUPPORTED: com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class NetworkLocation {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation>;
						public constructor();
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreNetworkLocation): com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation;
						public setSourceName(param0: string): void;
						public isOnRightSideOfSource(): boolean;
						public getSourceObjectPosition(): com.esri.arcgisruntime.tasks.networkanalysis.SourceObjectPosition;
						public setSourceObjectPosition(param0: com.esri.arcgisruntime.tasks.networkanalysis.SourceObjectPosition): void;
						public setOnRightSideOfSource(param0: boolean): void;
						public getSourceName(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreNetworkLocation;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class PointBarrier {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point);
						public setName(param0: string): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePointBarrier): com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier;
						public setType(param0: com.esri.arcgisruntime.tasks.networkanalysis.BarrierType): void;
						public getBarrierId(): number;
						public getName(): string;
						public getGeometry(): com.esri.arcgisruntime.geometry.Point;
						public getCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public getType(): com.esri.arcgisruntime.tasks.networkanalysis.BarrierType;
						public getAddedCost(param0: string): number;
						public setAddedCost(param0: string, param1: number): void;
						public getLocationStatus(): com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public setBarrierId(param0: number): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePointBarrier;
						public setCurbApproach(param0: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class PolygonBarrier {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePolygonBarrier): com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier;
						public setScaleFactorForCost(param0: string, param1: number): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePolygonBarrier;
						public setName(param0: string): void;
						public getType(): com.esri.arcgisruntime.tasks.networkanalysis.BarrierType;
						public constructor(param0: com.esri.arcgisruntime.geometry.Polygon);
						public setType(param0: com.esri.arcgisruntime.tasks.networkanalysis.BarrierType): void;
						public getBarrierId(): number;
						public setBarrierId(param0: number): void;
						public getScaleFactorForCost(param0: string): number;
						public getName(): string;
						public getGeometry(): com.esri.arcgisruntime.geometry.Polygon;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class PolylineBarrier {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>;
						public constructor(param0: com.esri.arcgisruntime.geometry.Polyline);
						public setScaleFactorForCost(param0: string, param1: number): void;
						public setName(param0: string): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePolylineBarrier;
						public getType(): com.esri.arcgisruntime.tasks.networkanalysis.BarrierType;
						public getGeometry(): com.esri.arcgisruntime.geometry.Polyline;
						public setType(param0: com.esri.arcgisruntime.tasks.networkanalysis.BarrierType): void;
						public getBarrierId(): number;
						public setBarrierId(param0: number): void;
						public getScaleFactorForCost(param0: string): number;
						public getName(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePolylineBarrier): com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class RestrictionAttribute {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.RestrictionAttribute>;
						public getRestrictionUsageParameterName(): string;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRestrictionAttribute;
						public getParameterValues(): java.util.Map<string,any>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRestrictionAttribute): com.esri.arcgisruntime.tasks.networkanalysis.RestrictionAttribute;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class Route {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.Route>;
						public getStartTimeShift(): number;
						public getTotalLength(): number;
						public getTravelTime(): number;
						public getStartTime(): java.util.Calendar;
						public getEndTimeShift(): number;
						public getWaitTime(): number;
						public getRouteName(): string;
						public getCost(param0: string): number;
						public getTotalTime(): number;
						public getStops(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.Stop>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRoute;
						public getRouteGeometry(): com.esri.arcgisruntime.geometry.Polyline;
						public getDirectionManeuvers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.DirectionManeuver>;
						public getViolationTime(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRoute): com.esri.arcgisruntime.tasks.networkanalysis.Route;
						public getEndTime(): java.util.Calendar;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class RouteParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters>;
						public setRouteShapeType(param0: com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType): void;
						public isReturnRoutes(): boolean;
						public setPolylineBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>): void;
						public setDirectionsStyle(param0: com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle): void;
						public getDirectionsStyle(): com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public isReturnStops(): boolean;
						public getDirectionsDistanceUnits(): com.esri.arcgisruntime.UnitSystem;
						public setFindBestSequence(param0: boolean): void;
						public isReturnPointBarriers(): boolean;
						public setReturnStops(param0: boolean): void;
						public setStops(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.Stop>): void;
						public setReturnDirections(param0: boolean): void;
						/** @deprecated */
						public getPointBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>;
						public getAccumulateAttributeNames(): java.util.List<string>;
						public clearPointBarriers(): void;
						public setReturnPointBarriers(param0: boolean): void;
						public setStops(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public getSearchWhereClause(param0: string): string;
						public setSearchWhereClause(param0: string, param1: string): void;
						public isPreserveFirstStop(): boolean;
						public setPreserveFirstStop(param0: boolean): void;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public constructor();
						public setPointBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>): void;
						public setReturnRoutes(param0: boolean): void;
						public getDirectionsLanguage(): string;
						/** @deprecated */
						public getPolygonBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>;
						public setPointBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRouteParameters): com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters;
						public setOutputSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public setPolylineBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public clearStops(): void;
						public isPreserveLastStop(): boolean;
						public setDirectionsLanguage(param0: string): void;
						public setTravelMode(param0: com.esri.arcgisruntime.tasks.networkanalysis.TravelMode): void;
						public setPolygonBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public isReturnDirections(): boolean;
						public setStartTime(param0: java.util.Calendar): void;
						public isFindBestSequence(): boolean;
						public isReturnPolygonBarriers(): boolean;
						public clearPolylineBarriers(): void;
						public setDirectionsDistanceUnits(param0: com.esri.arcgisruntime.UnitSystem): void;
						public clearPolygonBarriers(): void;
						public setReturnPolylineBarriers(param0: boolean): void;
						/** @deprecated */
						public getStops(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.Stop>;
						public getStartTime(): java.util.Calendar;
						/** @deprecated */
						public getPolylineBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>;
						public setPolygonBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>): void;
						public getTravelMode(): com.esri.arcgisruntime.tasks.networkanalysis.TravelMode;
						public setReturnPolygonBarriers(param0: boolean): void;
						public getRouteShapeType(): com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRouteParameters;
						public isReturnPolylineBarriers(): boolean;
						public setPreserveLastStop(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class RouteResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.RouteResult>;
						public getMessages(): java.util.List<string>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRouteResult;
						public getPolygonBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>;
						public getRoutes(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.Route>;
						public getDirectionsLanguage(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRouteResult): com.esri.arcgisruntime.tasks.networkanalysis.RouteResult;
						public getPolylineBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>;
						public getPointBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class RouteShapeType {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType>;
						public static NONE: com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
						public static STRAIGHT_LINE: com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
						public static TRUE_SHAPE_WITH_MEASURES: com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class RouteTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.RouteTask>;
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public createDefaultParametersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters>;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: string);
						public getUri(): string;
						public getRouteTaskInfo(): com.esri.arcgisruntime.tasks.networkanalysis.RouteTaskInfo;
						public static createRouteResultAsync(param0: com.esri.arcgisruntime.portal.PortalItem): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteResult>;
						public loadAsync(): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public createParametersAsync(param0: com.esri.arcgisruntime.data.FeatureCollection): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters>;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public createParametersAsync(param0: com.esri.arcgisruntime.portal.PortalItem): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters>;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public solveRouteAsync(param0: com.esri.arcgisruntime.tasks.networkanalysis.RouteParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteResult>;
						public constructor(param0: globalAndroid.content.Context, param1: com.esri.arcgisruntime.data.TransportationNetworkDataset);
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRouteTask;
						public getTransportationNetworkDataset(): com.esri.arcgisruntime.data.TransportationNetworkDataset;
						public static createRouteResultAsync(param0: com.esri.arcgisruntime.data.FeatureCollection): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.RouteResult>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class RouteTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.RouteTaskInfo>;
						public isPreserveFirstStop(): boolean;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getDefaultTravelModeName(): string;
						public getStartTime(): java.util.Calendar;
						public getNetworkName(): string;
						public getRestrictionAttributes(): java.util.Map<string,com.esri.arcgisruntime.tasks.networkanalysis.RestrictionAttribute>;
						public getDirectionsStyle(): com.esri.arcgisruntime.tasks.networkanalysis.DirectionsStyle;
						public getDirectionsDistanceUnits(): com.esri.arcgisruntime.UnitSystem;
						public isSupportsRerouting(): boolean;
						public getSupportedLanguages(): java.util.List<string>;
						public getDirectionsLanguage(): string;
						public getMaxLocatingDistance(): number;
						public isFindBestSequence(): boolean;
						public getRouteShapeType(): com.esri.arcgisruntime.tasks.networkanalysis.RouteShapeType;
						public getDirectionsSupport(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkDirectionsSupport;
						public getAccumulateAttributeNames(): java.util.List<string>;
						public getSupportedRestrictionUsageParameterValues(): java.util.List<string>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreRouteTaskInfo): com.esri.arcgisruntime.tasks.networkanalysis.RouteTaskInfo;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreRouteTaskInfo;
						public getCostAttributes(): java.util.Map<string,com.esri.arcgisruntime.tasks.networkanalysis.CostAttribute>;
						public isPreserveLastStop(): boolean;
						public getTravelModes(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.TravelMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaFacility {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaFacility>;
						public setNetworkLocation(param0: com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation): void;
						public setNavigationLatency(param0: number): void;
						public getImpedanceCutoffs(): java.util.List<java.lang.Double>;
						public setFacilityId(param0: number): void;
						public getName(): string;
						public getDistanceToNetworkLocation(): number;
						public getGeometry(): com.esri.arcgisruntime.geometry.Point;
						public setCurrentBearing(param0: number): void;
						public getCurrentBearing(): number;
						public setNavigationSpeed(param0: number): void;
						public getCurrentBearingTolerance(): number;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point);
						public setName(param0: string): void;
						public getNetworkLocation(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation;
						public getNavigationLatency(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaFacility;
						public getCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaFacility): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaFacility;
						public getLocationStatus(): com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public getAddedCost(param0: string): number;
						public setAddedCost(param0: string, param1: number): void;
						public setCurbApproach(param0: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach): void;
						public getNavigationSpeed(): number;
						public getFacilityId(): number;
						public setCurrentBearingTolerance(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaOverlapGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry>;
						public static OVERLAP: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry;
						public static DISSOLVE: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry;
						public static SPLIT: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaParameters>;
						public setPolylineBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>): void;
						public isReturnPolylines(): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaParameters;
						public setTravelMode(param0: com.esri.arcgisruntime.tasks.networkanalysis.TravelMode): void;
						public setPolygonBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public getGeometryAtOverlap(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry;
						public getGeometryAtCutoff(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry;
						public isReturnPointBarriers(): boolean;
						public clearFacilities(): void;
						public setStartTime(param0: java.util.Calendar): void;
						public getAccumulateAttributeNames(): java.util.List<string>;
						public isReturnPolygonBarriers(): boolean;
						public clearPointBarriers(): void;
						public clearPolylineBarriers(): void;
						public setGeometryAtOverlap(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry): void;
						public setReturnPointBarriers(param0: boolean): void;
						public clearPolygonBarriers(): void;
						public getSearchWhereClause(param0: string): string;
						public setReturnPolylineBarriers(param0: boolean): void;
						public setFacilities(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaFacility>): void;
						public setSearchWhereClause(param0: string, param1: string): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaParameters): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaParameters;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getPolygonDetail(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail;
						public getStartTime(): java.util.Calendar;
						public getDefaultImpedanceCutoffs(): java.util.List<java.lang.Double>;
						public isReturnPolygons(): boolean;
						public setPolygonBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>): void;
						public getTravelDirection(): com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
						public setReturnPolygons(param0: boolean): void;
						public setPointBarriers(param0: java.lang.Iterable<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>): void;
						public getTravelMode(): com.esri.arcgisruntime.tasks.networkanalysis.TravelMode;
						public setTravelDirection(param0: com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection): void;
						public setPointBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public setReturnPolygonBarriers(param0: boolean): void;
						public setGeometryAtCutoff(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry): void;
						public setOutputSpatialReference(param0: com.esri.arcgisruntime.geometry.SpatialReference): void;
						public setPolygonDetail(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail): void;
						public setReturnPolylines(param0: boolean): void;
						public getPolygonBufferDistance(): number;
						public setPolylineBarriers(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public setPolygonBufferDistance(param0: number): void;
						public setFacilities(param0: com.esri.arcgisruntime.data.ArcGISFeatureTable, param1: com.esri.arcgisruntime.data.QueryParameters): void;
						public isReturnPolylineBarriers(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaPolygon {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygon>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolygon;
						public getFromImpedanceCutoff(): number;
						public getToImpedanceCutoff(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolygon): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygon;
						public getGeometry(): com.esri.arcgisruntime.geometry.Polygon;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaPolygonCutoffGeometry {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry>;
						public static RINGS: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry;
						public static DISKS: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaPolygonDetail {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail>;
						public static GENERALIZED: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail;
						public static STANDARD: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail;
						public static HIGH: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaPolyline {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolyline>;
						public getFromNetworkLocation(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolyline): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolyline;
						public getToNetworkLocation(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaPolyline;
						public getToCumulativeCost(param0: string): number;
						public getGeometry(): com.esri.arcgisruntime.geometry.Polyline;
						public getFromCumulativeCost(param0: string): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaResult>;
						public getMessages(): java.util.List<string>;
						public getResultPolygons(param0: number): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygon>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaResult): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaResult;
						public getPolygonBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolygonBarrier>;
						public getFacilities(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaFacility>;
						public getResultPolylines(param0: number): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolyline>;
						public getPolylineBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PolylineBarrier>;
						public getPointBarriers(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.PointBarrier>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreServiceAreaResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaTask>;
						public getServiceAreaTaskInfo(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaTaskInfo;
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: string);
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: com.esri.arcgisruntime.data.TransportationNetworkDataset);
						public getUri(): string;
						public getTransportationNetworkDataset(): com.esri.arcgisruntime.data.TransportationNetworkDataset;
						public createDefaultParametersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaParameters>;
						public solveServiceAreaAsync(param0: com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaResult>;
						public loadAsync(): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class ServiceAreaTaskInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaTaskInfo>;
						public getOutputSpatialReference(): com.esri.arcgisruntime.geometry.SpatialReference;
						public getPolygonDetail(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonDetail;
						public getNetworkName(): string;
						public getRestrictionAttributes(): java.util.Map<string,com.esri.arcgisruntime.tasks.networkanalysis.RestrictionAttribute>;
						public getDefaultTravelModeName(): string;
						public getStartTime(): java.util.Calendar;
						public getDefaultImpedanceCutoffs(): java.util.List<java.lang.Double>;
						public isReturnPolygons(): boolean;
						public isReturnPolylines(): boolean;
						public getTravelDirection(): com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
						public getGeometryAtOverlap(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaOverlapGeometry;
						public getGeometryAtCutoff(): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaPolygonCutoffGeometry;
						public getMaxLocatingDistance(): number;
						public getAccumulateAttributeNames(): java.util.List<string>;
						public getSupportedRestrictionUsageParameterValues(): java.util.List<string>;
						public getPolygonBufferDistance(): number;
						public getCostAttributes(): java.util.Map<string,com.esri.arcgisruntime.tasks.networkanalysis.CostAttribute>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreServiceAreaTaskInfo): com.esri.arcgisruntime.tasks.networkanalysis.ServiceAreaTaskInfo;
						public getTravelModes(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.TravelMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class SourceObjectPosition {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.SourceObjectPosition>;
						public getSourceIndex(): number;
						public getSourceObjectId(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreSourceObjectPosition): com.esri.arcgisruntime.tasks.networkanalysis.SourceObjectPosition;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreSourceObjectPosition;
						public getPosition(): number;
						public setPosition(param0: number): void;
						public constructor(param0: number, param1: number, param2: number);
						public setSourceIndex(param0: number): void;
						public setSourceObjectId(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class StartTimeUsage {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage>;
						public static DEPARTURE_TIME: com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage;
						public static ARRIVAL_TIME: com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.StartTimeUsage>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class Stop {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.Stop>;
						public getArrivalTimeShift(): number;
						public setRouteName(param0: string): void;
						public setGeometry(param0: com.esri.arcgisruntime.geometry.Point): void;
						public setNetworkLocation(param0: com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation): void;
						public getRouteName(): string;
						public setNavigationLatency(param0: number): void;
						public getName(): string;
						public getTimeWindowStart(): java.util.Calendar;
						public getStopId(): number;
						public getDistanceToNetworkLocation(): number;
						public getArrivalCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public getGeometry(): com.esri.arcgisruntime.geometry.Point;
						public getViolationTime(): number;
						public setCurrentBearing(param0: number): void;
						public getCurrentBearing(): number;
						public setTimeWindowStart(param0: java.util.Calendar): void;
						public setTimeWindowEnd(param0: java.util.Calendar): void;
						public getSequence(): number;
						public setNavigationSpeed(param0: number): void;
						public getCurrentBearingTolerance(): number;
						public getDepartureTime(): java.util.Calendar;
						public constructor(param0: com.esri.arcgisruntime.geometry.Point);
						public setName(param0: string): void;
						public getArrivalTime(): java.util.Calendar;
						public getNetworkLocation(): com.esri.arcgisruntime.tasks.networkanalysis.NetworkLocation;
						public getWaitTime(): number;
						public getTimeWindowEnd(): java.util.Calendar;
						public getNavigationLatency(): number;
						public getDepartureTimeShift(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreStop;
						public getDepartureCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public getCurbApproach(): com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach;
						public setType(param0: com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreStop): com.esri.arcgisruntime.tasks.networkanalysis.Stop;
						public setStopId(param0: number): void;
						public getAddedCost(param0: string): number;
						public setAddedCost(param0: string, param1: number): void;
						public getLocationStatus(): com.esri.arcgisruntime.tasks.networkanalysis.LocationStatus;
						public getCumulativeCost(param0: string): number;
						public setCurbApproach(param0: com.esri.arcgisruntime.tasks.networkanalysis.CurbApproach): void;
						public getNavigationSpeed(): number;
						public getType(): com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type;
						public setCurrentBearingTolerance(param0: number): void;
					}
					export module Stop {
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type>;
							public static STOP: com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type;
							public static WAYPOINT: com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type;
							public static REST_BREAK: com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.Stop.Type>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class TravelDirection {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection>;
						public static FROM_FACILITY: com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
						public static TO_FACILITY: com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.TravelDirection>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class TravelMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.TravelMode>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreTravelMode;
						public constructor();
						public getUTurnPolicy(): com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy;
						public setName(param0: string): void;
						public getType(): string;
						public setTimeAttributeName(param0: string): void;
						public isUseHierarchy(): boolean;
						public getName(): string;
						public setType(param0: string): void;
						public getDistanceAttributeName(): string;
						public setDescription(param0: string): void;
						public getTimeAttributeName(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreTravelMode): com.esri.arcgisruntime.tasks.networkanalysis.TravelMode;
						public getAttributeParameterValues(): java.util.List<com.esri.arcgisruntime.tasks.networkanalysis.AttributeParameterValue>;
						public setDistanceAttributeName(param0: string): void;
						public setUseHierarchy(param0: boolean): void;
						public getOutputGeometryPrecision(): number;
						public getRestrictionAttributeNames(): java.util.List<string>;
						public setUTurnPolicy(param0: com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy): void;
						public setImpedanceAttributeName(param0: string): void;
						public setOutputGeometryPrecision(param0: number): void;
						public getDescription(): string;
						public getImpedanceAttributeName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module networkanalysis {
					export class UTurnPolicy {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy>;
						public static NOT_ALLOWED: com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy;
						public static ALLOWED_AT_DEAD_ENDS: com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy;
						public static ALLOWED_AT_INTERSECTIONS: com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy;
						public static ALLOWED_AT_DEAD_ENDS_AND_INTERSECTIONS: com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.networkanalysis.UTurnPolicy;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class DownloadPreplannedOfflineMapJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapJob>;
						public getDownloadDirectoryPath(): string;
						public getUnknownJson(): java.util.Map<string,any>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapJob;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob, param1: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapTask, param2: com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapJob;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapJob, param1: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapTask, param2: com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapParameters): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapJob;
						public getResult(): any;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public getParameters(): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapParameters;
						/** @deprecated */
						public isExcludeBasemap(): boolean;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getOnlineMap(): com.esri.arcgisruntime.mapping.ArcGISMap;
						public getUri(): string;
						/** @deprecated */
						public getPreplannedMapArea(): com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea;
						public getResult(): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapResult;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class DownloadPreplannedOfflineMapParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapParameters>;
						public constructor();
						public getUpdateMode(): com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapParameters;
						public isContinueOnErrors(): boolean;
						public setUpdateMode(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode): void;
						public setReferenceBasemapFilename(param0: string): void;
						public getReferenceBasemapFilename(): string;
						public setReferenceBasemapDirectory(param0: string): void;
						public setIncludeBasemap(param0: boolean): void;
						public getPreplannedMapArea(): com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea;
						public setContinueOnErrors(param0: boolean): void;
						public constructor(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea);
						public setPreplannedMapArea(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea): void;
						public isIncludeBasemap(): boolean;
						public getReferenceBasemapDirectory(): string;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapParameters): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapParameters;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class DownloadPreplannedOfflineMapResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapResult>;
						public getLayerErrors(): java.util.Map<com.esri.arcgisruntime.layers.Layer,com.esri.arcgisruntime.ArcGISRuntimeException>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapResult;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreDownloadPreplannedOfflineMapResult): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapResult;
						public getMobileMapPackage(): com.esri.arcgisruntime.mapping.MobileMapPackage;
						public getTableErrors(): java.util.Map<com.esri.arcgisruntime.data.FeatureTable,com.esri.arcgisruntime.ArcGISRuntimeException>;
						public hasErrors(): boolean;
						public getOfflineMap(): com.esri.arcgisruntime.mapping.ArcGISMap;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class GenerateOfflineMapJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapJob>;
						public getDownloadDirectoryPath(): string;
						public getParameterOverrides(): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameterOverrides;
						public getUnknownJson(): java.util.Map<string,any>;
						public getResult(): any;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapJob, param1: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapTask, param2: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters, param3: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameterOverrides): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapJob;
						public getOnlineMap(): com.esri.arcgisruntime.mapping.ArcGISMap;
						public getUri(): string;
						public getResult(): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapResult;
						public getParameters(): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapJob): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapJob;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class GenerateOfflineMapParameterOverrides {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameterOverrides>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameterOverrides): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameterOverrides;
						public getExportTileCacheParameters(): java.util.Map<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey,com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameterOverrides;
						public getExportVectorTilesParameters(): java.util.Map<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey,com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters>;
						public getGenerateGeodatabaseParameters(): java.util.Map<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey,com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class GenerateOfflineMapParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters>;
						public getDestinationTableRowFilter(): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter;
						public setMinScale(param0: number): void;
						public getReturnLayerAttachmentOption(): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
						public constructor(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: number);
						public setReturnSchemaOnlyForEditableLayers(param0: boolean): void;
						public isContinueOnErrors(): boolean;
						public setDefinitionExpressionFilterEnabled(param0: boolean): void;
						public setReturnLayerAttachmentOption(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption): void;
						public setItemInfo(param0: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapItemInfo): void;
						public isDefinitionExpressionFilterEnabled(): boolean;
						public setReferenceBasemapFilename(param0: string): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters;
						public setAreaOfInterest(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public setContinueOnErrors(param0: boolean): void;
						public isReturnSchemaOnlyForEditableLayers(): boolean;
						public getAreaOfInterest(): com.esri.arcgisruntime.geometry.Geometry;
						public constructor();
						public getItemInfo(): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapItemInfo;
						public setMaxScale(param0: number): void;
						public getMaxScale(): number;
						public setAttachmentSyncDirection(param0: com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection): void;
						public getMinScale(): number;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapParameters;
						public getReferenceBasemapFilename(): string;
						public setReferenceBasemapDirectory(param0: string): void;
						public getAttachmentSyncDirection(): com.esri.arcgisruntime.tasks.geodatabase.GenerateGeodatabaseParameters.AttachmentSyncDirection;
						public setDestinationTableRowFilter(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter): void;
						public setIncludeBasemap(param0: boolean): void;
						public isIncludeBasemap(): boolean;
						public getReferenceBasemapDirectory(): string;
					}
					export module GenerateOfflineMapParameters {
						export class DestinationTableRowFilter {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter>;
							public static ALL: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter;
							public static RELATED_ONLY: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter>;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.DestinationTableRowFilter;
						}
						export class ReturnLayerAttachmentOption {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption>;
							public static ALL_LAYERS: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
							public static READ_ONLY_LAYERS: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
							public static EDITABLE_LAYERS: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
							public static NONE: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption>;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters.ReturnLayerAttachmentOption;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class GenerateOfflineMapResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapResult>;
						public getLayerErrors(): java.util.Map<com.esri.arcgisruntime.layers.Layer,com.esri.arcgisruntime.ArcGISRuntimeException>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapResult): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapResult;
						public getMobileMapPackage(): com.esri.arcgisruntime.mapping.MobileMapPackage;
						public getTableErrors(): java.util.Map<com.esri.arcgisruntime.data.FeatureTable,com.esri.arcgisruntime.ArcGISRuntimeException>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreGenerateOfflineMapResult;
						public hasErrors(): boolean;
						public getOfflineMap(): com.esri.arcgisruntime.mapping.ArcGISMap;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineCapability {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineCapability>;
						public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOfflineCapability;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineCapability): com.esri.arcgisruntime.tasks.offlinemap.OfflineCapability;
						public isSupportsOffline(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapCapabilities {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapCapabilities>;
						public getTableCapabilities(): java.util.Map<com.esri.arcgisruntime.data.FeatureTable,com.esri.arcgisruntime.tasks.offlinemap.OfflineCapability>;
						public getLayerCapabilities(): java.util.Map<com.esri.arcgisruntime.layers.Layer,com.esri.arcgisruntime.tasks.offlinemap.OfflineCapability>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapCapabilities;
						public hasErrors(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapCapabilities): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapCapabilities;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapItemInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapItemInfo>;
						public constructor();
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapItemInfo): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapItemInfo;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapItemInfo;
						public getThumbnailData(): native.Array<number>;
						public setThumbnailData(param0: native.Array<number>): void;
						public setDescription(param0: string): void;
						public getTitle(): string;
						public getTags(): java.util.List<string>;
						public setTitle(param0: string): void;
						public setSnippet(param0: string): void;
						public getTermsOfUse(): string;
						public setTermsOfUse(param0: string): void;
						public getDescription(): string;
						public setAccessInformation(param0: string): void;
						public getSnippet(): string;
						public getAccessInformation(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapParametersKey {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey>;
						public getType(): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type;
						public getServiceUrl(): string;
						public constructor(param0: com.esri.arcgisruntime.layers.Layer);
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey;
						public constructor(param0: com.esri.arcgisruntime.data.ServiceFeatureTable);
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapParametersKey): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey;
					}
					export module OfflineMapParametersKey {
						export class Type {
							public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type>;
							public static GENERATE_GEODATABASE: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type;
							public static EXPORT_TILE_CACHE: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type;
							public static EXPORT_VECTOR_TILES: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type;
							public static valueOf(param0: string): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type;
							public static values(): native.Array<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapParametersKey.Type>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapSyncJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncJob>;
						public getResult(): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncResult;
						public getUnknownJson(): java.util.Map<string,any>;
						public getUri(): string;
						public getResult(): any;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncJob): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncJob;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapSyncLayerResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncLayerResult>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncLayerResult): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncLayerResult;
						public getEditErrors(): java.util.List<com.esri.arcgisruntime.data.FeatureEditResult>;
						public getError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public hasErrors(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapSyncParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncParameters>;
						public setSyncDirection(param0: com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection): void;
						public constructor();
						public setRollbackOnFailure(param0: boolean): void;
						public setPreplannedScheduledUpdatesOption(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncParameters): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncParameters;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncParameters;
						public getPreplannedScheduledUpdatesOption(): com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption;
						public getSyncDirection(): com.esri.arcgisruntime.tasks.geodatabase.SyncGeodatabaseParameters.SyncDirection;
						public isRollbackOnFailure(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapSyncResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncResult>;
						public getTableResults(): java.util.Map<com.esri.arcgisruntime.data.FeatureTable,com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncLayerResult>;
						public getLayerResults(): java.util.Map<com.esri.arcgisruntime.layers.Layer,com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncLayerResult>;
						public isMobileMapPackageReopenRequired(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapSyncResult): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncResult;
						public hasErrors(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapSyncTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncTask>;
						public getUpdateCapabilities(): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapUpdateCapabilities;
						public cancelLoad(): void;
						public checkForUpdatesAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapUpdatesInfo>;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISMap);
						public getMap(): com.esri.arcgisruntime.mapping.ArcGISMap;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getUri(): string;
						public createDefaultOfflineMapSyncParametersAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncParameters>;
						public loadAsync(): void;
						public syncOfflineMap(param0: com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncParameters): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapSyncJob;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapTask>;
						public cancelLoad(): void;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public generateOfflineMap(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters, param1: string, param2: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameterOverrides): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapJob;
						public getPreplannedMapAreasAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea>>;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public createDefaultGenerateOfflineMapParametersAsync(param0: com.esri.arcgisruntime.geometry.Geometry): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters>;
						public createDefaultGenerateOfflineMapParametersAsync(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters>;
						public getUri(): string;
						public loadAsync(): void;
						public downloadPreplannedOfflineMap(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea, param1: string): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapJob;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public getOfflineMapCapabilitiesAsync(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapCapabilities>;
						public generateOfflineMap(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters, param1: string): com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapJob;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapTask): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapTask;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public downloadPreplannedOfflineMap(param0: com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapParameters, param1: string): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapJob;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public constructor(param0: com.esri.arcgisruntime.mapping.ArcGISMap);
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public getPortalItem(): com.esri.arcgisruntime.portal.PortalItem;
						public createGenerateOfflineMapParameterOverridesAsync(param0: com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.offlinemap.GenerateOfflineMapParameterOverrides>;
						public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						/** @deprecated */
						public downloadPreplannedOfflineMap(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea, param1: string, param2: boolean): com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapJob;
						public getOnlineMap(): com.esri.arcgisruntime.mapping.ArcGISMap;
						public createDefaultDownloadPreplannedOfflineMapParametersAsync(param0: com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.offlinemap.DownloadPreplannedOfflineMapParameters>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapUpdateCapabilities {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapUpdateCapabilities>;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdateCapabilities;
						public isSupportsScheduledUpdatesForFeatures(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdateCapabilities): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapUpdateCapabilities;
						public isSupportsSyncWithFeatureServices(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineMapUpdatesInfo {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineMapUpdatesInfo>;
						public isMobileMapPackageReopenRequired(): boolean;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdatesInfo): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapUpdatesInfo;
						public getDownloadAvailability(): com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreOfflineMapUpdatesInfo;
						public getUploadAvailability(): com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability;
						public getScheduledUpdatesDownloadSize(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class OfflineUpdateAvailability {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability>;
						public static AVAILABLE: com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability;
						public static NONE: com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability;
						public static INDETERMINATE: com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability>;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.offlinemap.OfflineUpdateAvailability;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class PreplannedMapArea extends com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea>;
						public getContentItemsAsync(): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.portal.PortalItem>>;
						public getUpdateCapabilities(): com.esri.arcgisruntime.tasks.offlinemap.OfflineMapUpdateCapabilities;
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea;
						public getPortalItem(): com.esri.arcgisruntime.portal.PortalItem;
						public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public loadAsync(): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CorePreplannedMapArea): com.esri.arcgisruntime.tasks.offlinemap.PreplannedMapArea;
						public getAreaOfInterest(): com.esri.arcgisruntime.geometry.Geometry;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class PreplannedScheduledUpdatesOption {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption>;
						public static NO_UPDATES: com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption;
						public static DOWNLOAD_ALL_UPDATES: com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.offlinemap.PreplannedScheduledUpdatesOption>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module offlinemap {
					export class PreplannedUpdateMode {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode>;
						public static NO_UPDATES: com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode;
						public static SYNC_WITH_FEATURE_SERVICES: com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode;
						public static DOWNLOAD_SCHEDULED_UPDATES: com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode;
						public static valueOf(param0: string): com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode;
						public static values(): native.Array<com.esri.arcgisruntime.tasks.offlinemap.PreplannedUpdateMode>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module tilecache {
					export class EstimateTileCacheSizeJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.tilecache.EstimateTileCacheSizeJob>;
						public getUnknownJson(): java.util.Map<string,any>;
						public getUri(): string;
						public getResult(): any;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeJob): com.esri.arcgisruntime.tasks.tilecache.EstimateTileCacheSizeJob;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public toJson(): string;
						public getResult(): com.esri.arcgisruntime.tasks.tilecache.EstimateTileCacheSizeResult;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module tilecache {
					export class EstimateTileCacheSizeResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.tilecache.EstimateTileCacheSizeResult>;
						public getFileSize(): number;
						public getTileCount(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreEstimateTileCacheSizeResult): com.esri.arcgisruntime.tasks.tilecache.EstimateTileCacheSizeResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module tilecache {
					export class ExportTileCacheJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheJob>;
						public getUnknownJson(): java.util.Map<string,any>;
						public getResult(): com.esri.arcgisruntime.data.TileCache;
						public getUri(): string;
						public getResult(): any;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreExportTileCacheJob): com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheJob;
						public toJson(): string;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module tilecache {
					export class ExportTileCacheParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters>;
						public getCompressionQuality(): number;
						public constructor();
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters;
						public setCompressionQuality(param0: number): void;
						public getLevelIDs(): java.util.List<java.lang.Integer>;
						public setAreaOfInterest(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreExportTileCacheParameters): com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters;
						public getAreaOfInterest(): com.esri.arcgisruntime.geometry.Geometry;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module tilecache {
					export class ExportTileCacheTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheTask>;
						public static MSG_ILLEGAL_AREA_OF_INTEREST: string;
						public cancelLoad(): void;
						/** @deprecated */
						public estimateTileCacheSizeAsync(param0: com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters): com.esri.arcgisruntime.tasks.tilecache.EstimateTileCacheSizeJob;
						/** @deprecated */
						public exportTileCacheAsync(param0: com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters, param1: string): com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheJob;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public createDefaultExportTileCacheParametersAsync(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number, param2: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters>;
						public retryLoadAsync(): void;
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getUri(): string;
						public exportTileCache(param0: com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters, param1: string): com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheJob;
						public getMapServiceInfo(): com.esri.arcgisruntime.arcgisservices.ArcGISMapServiceInfo;
						public estimateTileCacheSize(param0: com.esri.arcgisruntime.tasks.tilecache.ExportTileCacheParameters): com.esri.arcgisruntime.tasks.tilecache.EstimateTileCacheSizeJob;
						public loadAsync(): void;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module vectortilecache {
					export class ExportVectorTilesJob extends com.esri.arcgisruntime.concurrent.Job {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesJob>;
						public getUnknownJson(): java.util.Map<string,any>;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesJob): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesJob;
						public getResult(): any;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public toJson(): string;
						public getVectorTileCachePath(): string;
						public getParameters(): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters;
						public getUnsupportedJson(): java.util.Map<string,any>;
						public getItemResourceCachePath(): string;
						public getResult(): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesResult;
						public getUri(): string;
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module vectortilecache {
					export class ExportVectorTilesParameters {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters>;
						public constructor();
						public getMaxLevel(): number;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters;
						public setAreaOfInterest(param0: com.esri.arcgisruntime.geometry.Geometry): void;
						public setMaxLevel(param0: number): void;
						public getInternal(): com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesParameters;
						public getAreaOfInterest(): com.esri.arcgisruntime.geometry.Geometry;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module vectortilecache {
					export class ExportVectorTilesResult {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesResult>;
						public getItemResourceCache(): com.esri.arcgisruntime.mapping.ItemResourceCache;
						public getVectorTileCache(): com.esri.arcgisruntime.data.VectorTileCache;
						public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreExportVectorTilesResult): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesResult;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module tasks {
				export module vectortilecache {
					export class ExportVectorTilesTask implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
						public static class: java.lang.Class<com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesTask>;
						public createDefaultExportVectorTilesParametersAsync(param0: com.esri.arcgisruntime.geometry.Geometry, param1: number): com.esri.arcgisruntime.concurrent.ListenableFuture<com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters>;
						public cancelLoad(): void;
						public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
						public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
						public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
						public addDoneLoadingListener(param0: java.lang.Runnable): void;
						public getCredential(): com.esri.arcgisruntime.security.Credential;
						public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
						public exportStyleResourceCache(param0: string): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesJob;
						public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
						public retryLoadAsync(): void;
						public getPortalItem(): com.esri.arcgisruntime.portal.PortalItem;
						public constructor(param0: com.esri.arcgisruntime.portal.PortalItem);
						public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
						public getUri(): string;
						public exportVectorTiles(param0: com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters, param1: string): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesJob;
						public exportVectorTiles(param0: com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesParameters, param1: string, param2: string): com.esri.arcgisruntime.tasks.vectortilecache.ExportVectorTilesJob;
						public loadAsync(): void;
						public hasStyleResources(): boolean;
						public getVectorTileSourceInfo(): com.esri.arcgisruntime.arcgisservices.VectorTileSourceInfo;
						public constructor(param0: string);
						public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
						public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module util {
				export class ListChangedEvent<T>  extends java.util.EventObject {
					public static class: java.lang.Class<com.esri.arcgisruntime.util.ListChangedEvent<any>>;
					public getIndex(): number;
					public getAction(): com.esri.arcgisruntime.util.ListChangedEvent.Action;
					public constructor(param0: com.esri.arcgisruntime.util.ListenableList<any>, param1: number, param2: java.util.List<any>, param3: com.esri.arcgisruntime.util.ListChangedEvent.Action);
					public getSource(): com.esri.arcgisruntime.util.ListenableList<any>;
					public getItems(): java.util.List<any>;
				}
				export module ListChangedEvent {
					export class Action {
						public static class: java.lang.Class<com.esri.arcgisruntime.util.ListChangedEvent.Action>;
						public static ADDED: com.esri.arcgisruntime.util.ListChangedEvent.Action;
						public static REMOVED: com.esri.arcgisruntime.util.ListChangedEvent.Action;
						public static valueOf(param0: string): com.esri.arcgisruntime.util.ListChangedEvent.Action;
						public static values(): native.Array<com.esri.arcgisruntime.util.ListChangedEvent.Action>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module util {
				export class ListChangedListener<E>  extends java.lang.Object {
					public static class: java.lang.Class<com.esri.arcgisruntime.util.ListChangedListener<any>>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.util.ListChangedListener<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						listChanged(param0: com.esri.arcgisruntime.util.ListChangedEvent<E>): void;
					});
					public constructor();
					public listChanged(param0: com.esri.arcgisruntime.util.ListChangedEvent<E>): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module util {
				export class ListenableList<E>  extends java.util.List<any> {
					public static class: java.lang.Class<com.esri.arcgisruntime.util.ListenableList<any>>;
					/**
					 * Constructs a new instance of the com.esri.arcgisruntime.util.ListenableList<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
						removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
					});
					public constructor();
					public addListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): void;
					public removeListChangedListener(param0: com.esri.arcgisruntime.util.ListChangedListener<any>): boolean;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityAssetGroup {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityAssetGroup>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetGroup;
					public getAssetTypes(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityAssetType>;
					public getName(): string;
					public getAssetType(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityAssetType;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityAssetGroup): com.esri.arcgisruntime.utilitynetworks.UtilityAssetGroup;
					public getCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityAssetType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityAssetType>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType;
					public getAssociationRole(): com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole;
					public getContainerViewScale(): number;
					public getName(): string;
					public getTerminalConfiguration(): com.esri.arcgisruntime.utilitynetworks.UtilityTerminalConfiguration;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityAssetType): com.esri.arcgisruntime.utilitynetworks.UtilityAssetType;
					public getCategories(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityCategory>;
					public getCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityAssociation {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityAssociation>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityAssociation;
					public isContainmentVisible(): boolean;
					public getGlobalId(): java.util.UUID;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityAssociation): com.esri.arcgisruntime.utilitynetworks.UtilityAssociation;
					public getFromElement(): com.esri.arcgisruntime.utilitynetworks.UtilityElement;
					public getToElement(): com.esri.arcgisruntime.utilitynetworks.UtilityElement;
					public getAssociationType(): com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityAssociationRole {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole>;
					public static NONE: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole;
					public static CONTAINER: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole;
					public static STRUCTURE: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityAssociationRole>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityAssociationType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType>;
					public static CONNECTIVITY: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType;
					public static CONTAINMENT: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType;
					public static ATTACHMENT: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityAttributeComparisonOperator {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator>;
					public static EQUAL: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static NOT_EQUAL: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static GREATER_THAN: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static GREATER_THAN_EQUAL: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static LESS_THAN: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static LESS_THAN_EQUAL: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static INCLUDES_THE_VALUES: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static DOES_NOT_INCLUDE_THE_VALUES: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static INCLUDES_ANY: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static DOES_NOT_INCLUDE_ANY: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityCategory {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityCategory>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityCategory;
					public getName(): string;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityCategory): com.esri.arcgisruntime.utilitynetworks.UtilityCategory;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityCategoryComparison extends com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparison>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityCategoryComparison;
					public getComparisonOperator(): com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator;
					public getInternal(): com.esri.arcgisruntime.internal.jni.jp;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityCategory, param1: com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition);
					public getCategory(): com.esri.arcgisruntime.utilitynetworks.UtilityCategory;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.jp);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityCategoryComparison): com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparison;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityCategoryComparisonOperator {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator>;
					public static EXISTS: com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator;
					public static DOES_NOT_EXIST: com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityCategoryComparisonOperator;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityDomainNetwork {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityDomainNetwork>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork): com.esri.arcgisruntime.utilitynetworks.UtilityDomainNetwork;
					public getTiers(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTier>;
					public getTierGroups(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTierGroup>;
					public getSubnetworkControllerType(): com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType;
					public getDomainNetworkId(): number;
					public isStructureNetwork(): boolean;
					public getNetworkSources(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource>;
					public getTierGroup(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTierGroup;
					public getName(): string;
					public getTierType(): com.esri.arcgisruntime.utilitynetworks.UtilityTierType;
					public getAlias(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityDomainNetwork;
					public getTier(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTier;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityElement {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityElement>;
					public getAssetType(): com.esri.arcgisruntime.utilitynetworks.UtilityAssetType;
					public getGlobalId(): java.util.UUID;
					public setTerminal(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTerminal): void;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityElement;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityElement): com.esri.arcgisruntime.utilitynetworks.UtilityElement;
					public getNetworkSource(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource;
					public getAssetGroup(): com.esri.arcgisruntime.utilitynetworks.UtilityAssetGroup;
					public getFractionAlongEdge(): number;
					public getTerminal(): com.esri.arcgisruntime.utilitynetworks.UtilityTerminal;
					public getObjectId(): number;
					public setFractionAlongEdge(param0: number): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityElementTraceResult extends com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityElementTraceResult>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult): com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityElementTraceResult;
					public getElements(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityElement>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityElementTraceResult): com.esri.arcgisruntime.utilitynetworks.UtilityElementTraceResult;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityNetwork implements com.esri.arcgisruntime.io.RemoteResource, com.esri.arcgisruntime.loadable.Loadable {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetwork>;
					public constructor(param0: string);
					public removeLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): boolean;
					public getUri(): string;
					public setCredential(param0: com.esri.arcgisruntime.security.Credential): void;
					public getDefinition(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkDefinition;
					public loadAsync(): void;
					public traceAsync(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceParameters): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult>>;
					public getRequestConfiguration(): com.esri.arcgisruntime.io.RequestConfiguration;
					public constructor(param0: string, param1: com.esri.arcgisruntime.mapping.ArcGISMap);
					public createElement(param0: com.esri.arcgisruntime.utilitynetworks.UtilityAssetType, param1: java.util.UUID): com.esri.arcgisruntime.utilitynetworks.UtilityElement;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetwork;
					public fetchFeaturesForElementsAsync(param0: java.lang.Iterable<com.esri.arcgisruntime.utilitynetworks.UtilityElement>): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.data.ArcGISFeature>>;
					public createElement(param0: com.esri.arcgisruntime.utilitynetworks.UtilityAssetType, param1: java.util.UUID, param2: com.esri.arcgisruntime.utilitynetworks.UtilityTerminal): com.esri.arcgisruntime.utilitynetworks.UtilityElement;
					public getAssociationsAsync(param0: com.esri.arcgisruntime.utilitynetworks.UtilityElement): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityAssociation>>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetwork): com.esri.arcgisruntime.utilitynetworks.UtilityNetwork;
					public cancelLoad(): void;
					public getLoadError(): com.esri.arcgisruntime.ArcGISRuntimeException;
					public removeDoneLoadingListener(param0: java.lang.Runnable): boolean;
					public addDoneLoadingListener(param0: java.lang.Runnable): void;
					public setRequestConfiguration(param0: com.esri.arcgisruntime.io.RequestConfiguration): void;
					public retryLoadAsync(): void;
					public createElement(param0: com.esri.arcgisruntime.data.ArcGISFeature): com.esri.arcgisruntime.utilitynetworks.UtilityElement;
					public getCredential(): com.esri.arcgisruntime.security.Credential;
					public getLoadStatus(): com.esri.arcgisruntime.loadable.LoadStatus;
					public createElement(param0: com.esri.arcgisruntime.data.ArcGISFeature, param1: com.esri.arcgisruntime.utilitynetworks.UtilityTerminal): com.esri.arcgisruntime.utilitynetworks.UtilityElement;
					public getAssociationsAsync(param0: com.esri.arcgisruntime.utilitynetworks.UtilityElement, param1: com.esri.arcgisruntime.utilitynetworks.UtilityAssociationType): com.esri.arcgisruntime.concurrent.ListenableFuture<java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityAssociation>>;
					public addLoadStatusChangedListener(param0: com.esri.arcgisruntime.loadable.LoadStatusChangedListener): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityNetworkAttribute {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public getNetworkAttributeToSubstitute(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public getName(): string;
					public isSystemDefined(): boolean;
					public isApportionable(): boolean;
					public getDataType(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType;
					public isSubstitution(): boolean;
					public getDomain(): com.esri.arcgisruntime.data.Domain;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttribute;
				}
				export module UtilityNetworkAttribute {
					export class DataType {
						public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType>;
						public static INTEGER: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType;
						public static FLOAT: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType;
						public static DOUBLE: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType;
						public static BOOLEAN: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType;
						public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType>;
						public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute.DataType;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityNetworkAttributeComparison extends com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttributeComparison>;
					public getValue(): any;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute, param1: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator, param2: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute);
					public getInternal(): com.esri.arcgisruntime.internal.jni.jp;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition);
					public getNetworkAttribute(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttributeComparison;
					public getOtherNetworkAttribute(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.jp);
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute, param1: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator, param2: any);
					public getComparisonOperator(): com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkAttributeComparison): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttributeComparison;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityNetworkDefinition {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkDefinition>;
					public getNetworkAttribute(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public getNetworkSources(): com.esri.arcgisruntime.util.ListenableList<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkDefinition): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkDefinition;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkDefinition;
					public getTerminalConfigurations(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTerminalConfiguration>;
					public getDomainNetwork(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityDomainNetwork;
					public getSchemaVersion(): number;
					public getCategories(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityCategory>;
					public getNetworkSource(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource;
					public getDomainNetworks(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityDomainNetwork>;
					public getNetworkAttributes(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityNetworkSource {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkSource;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityNetworkSource): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource;
					public getSourceId(): number;
					public getName(): string;
					public getSourceUsageType(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
					public getAssetGroups(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityAssetGroup>;
					public getAssetGroup(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityAssetGroup;
					public getFeatureTable(): com.esri.arcgisruntime.data.ArcGISFeatureTable;
					public getSourceType(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.Type;
				}
				export module UtilityNetworkSource {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.Type>;
						public static JUNCTION: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.Type;
						public static EDGE: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.Type;
						public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.Type>;
						public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.Type;
					}
					export class UsageType {
						public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType>;
						public static DEVICE: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static JUNCTION: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static LINE: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static ASSEMBLY: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static SUBNET_LINE: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static STRUCTURE_JUNCTION: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static STRUCTURE_LINE: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static STRUCTURE_BOUNDARY: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType;
						public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityNetworkSource.UsageType>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityPropagator {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityPropagator>;
					public getValue(): any;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityPropagator): com.esri.arcgisruntime.utilitynetworks.UtilityPropagator;
					public getNetworkAttribute(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityPropagator;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute, param1: com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType, param2: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator, param3: any);
					public getSubstitutionNetworkAttribute(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public getComparisonOperator(): com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute, param1: com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType, param2: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator, param3: any, param4: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute);
					public getPropagatorFunctionType(): com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityPropagatorFunctionType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType>;
					public static BITWISE_AND: com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType;
					public static MAX: com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType;
					public static MIN: com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityPropagatorFunctionType>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilitySubnetworkControllerType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType>;
					public static NONE: com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType;
					public static SOURCE: com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType;
					public static SINK: com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilitySubnetworkControllerType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTerminal {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTerminal>;
					public getName(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal;
					public getTerminalId(): number;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTerminal): com.esri.arcgisruntime.utilitynetworks.UtilityTerminal;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTerminalConfiguration {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTerminalConfiguration>;
					public getName(): string;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTerminalConfiguration;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTerminalConfiguration): com.esri.arcgisruntime.utilitynetworks.UtilityTerminalConfiguration;
					public getTerminalConfigurationId(): number;
					public getTerminals(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTerminal>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTier {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTier>;
					public getName(): string;
					public getTraceConfiguration(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceConfiguration;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTier;
					public getRank(): number;
					public getTopologyType(): com.esri.arcgisruntime.utilitynetworks.UtilityTierTopologyType;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTier): com.esri.arcgisruntime.utilitynetworks.UtilityTier;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTierGroup {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTierGroup>;
					public getTiers(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTier>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTierGroup): com.esri.arcgisruntime.utilitynetworks.UtilityTierGroup;
					public getName(): string;
					public getTier(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTier;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTierGroup;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTierTopologyType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTierTopologyType>;
					public static RADIAL: com.esri.arcgisruntime.utilitynetworks.UtilityTierTopologyType;
					public static MESH: com.esri.arcgisruntime.utilitynetworks.UtilityTierTopologyType;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityTierTopologyType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTierTopologyType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTierType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTierType>;
					public static HIERARCHICAL: com.esri.arcgisruntime.utilitynetworks.UtilityTierType;
					public static PARTITIONED: com.esri.arcgisruntime.utilitynetworks.UtilityTierType;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTierType;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityTierType>;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceAndCondition extends com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceAndCondition>;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression, param1: com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression);
					public getRightExpression(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.jp);
					public getLeftExpression(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceAndCondition): com.esri.arcgisruntime.utilitynetworks.UtilityTraceAndCondition;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export abstract class UtilityTraceCondition {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceCondition>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export abstract class UtilityTraceConditionalExpression extends com.esri.arcgisruntime.utilitynetworks.UtilityTraceCondition {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression>;
					public getInternal(): com.esri.arcgisruntime.internal.jni.jp;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition);
					public constructor(param0: com.esri.arcgisruntime.internal.jni.jp);
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceConfiguration {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceConfiguration>;
					public getTargetTier(): com.esri.arcgisruntime.utilitynetworks.UtilityTier;
					public setIgnoreBarriersAtStartingPoints(param0: boolean): void;
					public setDomainNetwork(param0: com.esri.arcgisruntime.utilitynetworks.UtilityDomainNetwork): void;
					public getDomainNetwork(): com.esri.arcgisruntime.utilitynetworks.UtilityDomainNetwork;
					public isIgnoreBarriersAtStartingPoints(): boolean;
					public setIncludeBarriers(param0: boolean): void;
					public setSourceTier(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTier): void;
					public setIncludeContent(param0: boolean): void;
					public getSourceTier(): com.esri.arcgisruntime.utilitynetworks.UtilityTier;
					public isIncludeContent(): boolean;
					public isIncludeStructures(): boolean;
					public setTargetTier(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTier): void;
					public getTraversability(): com.esri.arcgisruntime.utilitynetworks.UtilityTraversability;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceConfiguration): com.esri.arcgisruntime.utilitynetworks.UtilityTraceConfiguration;
					public isValidateConsistency(): boolean;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceConfiguration;
					public constructor();
					public setValidateConsistency(param0: boolean): void;
					public setIncludeStructures(param0: boolean): void;
					public isIncludeBarriers(): boolean;
					public getPropagators(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityPropagator>;
					public isIncludeContainers(): boolean;
					public setIncludeContainers(param0: boolean): void;
					public setTraversability(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraversability): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceFunction {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunction>;
					public getFunctionType(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
					public getNetworkAttribute(): com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunction;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunction): com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunction;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType, param1: com.esri.arcgisruntime.utilitynetworks.UtilityNetworkAttribute);
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceFunctionBarrier {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionBarrier>;
					public getValue(): any;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunctionBarrier;
					public getTraceFunction(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunction;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunction, param1: com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator, param2: any);
					public getComparisonOperator(): com.esri.arcgisruntime.utilitynetworks.UtilityAttributeComparisonOperator;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceFunctionBarrier): com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionBarrier;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceFunctionType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType>;
					public static ADD: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
					public static AVERAGE: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
					public static COUNT: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
					public static MAX: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
					public static MIN: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
					public static SUBTRACT: com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceOrCondition extends com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceOrCondition>;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression, param1: com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression);
					public getRightExpression(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceCondition);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceOrCondition): com.esri.arcgisruntime.utilitynetworks.UtilityTraceOrCondition;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.jp);
					public getLeftExpression(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceConditionalExpression;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceParameters {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceParameters>;
					public getBarriers(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityElement>;
					public getTraceType(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceType;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceParameters;
					public getResultTypes(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type>;
					public getStartingLocations(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityElement>;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceParameters): com.esri.arcgisruntime.utilitynetworks.UtilityTraceParameters;
					public getTraceConfiguration(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceConfiguration;
					public constructor(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceType, param1: java.lang.Iterable<com.esri.arcgisruntime.utilitynetworks.UtilityElement>);
					public setTraceConfiguration(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceConfiguration): void;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceResult {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult>;
					public getWarnings(): java.util.List<string>;
					public constructor(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult);
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult): com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraceResult;
				}
				export module UtilityTraceResult {
					export class Type {
						public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type>;
						public static ELEMENTS: com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type;
						public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type;
						public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityTraceResult.Type>;
					}
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraceType {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraceType>;
					public static CONNECTED: com.esri.arcgisruntime.utilitynetworks.UtilityTraceType;
					public static SUBNETWORK: com.esri.arcgisruntime.utilitynetworks.UtilityTraceType;
					public static UPSTREAM: com.esri.arcgisruntime.utilitynetworks.UtilityTraceType;
					public static DOWNSTREAM: com.esri.arcgisruntime.utilitynetworks.UtilityTraceType;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityTraceType>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTraceType;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraversability {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraversability>;
					public getFunctionBarriers(): java.util.List<com.esri.arcgisruntime.utilitynetworks.UtilityTraceFunctionBarrier>;
					public constructor();
					public setBarriers(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraceCondition): void;
					public setScope(param0: com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope): void;
					public getBarriers(): com.esri.arcgisruntime.utilitynetworks.UtilityTraceCondition;
					public static createFromInternal(param0: com.esri.arcgisruntime.internal.jni.CoreUtilityTraversability): com.esri.arcgisruntime.utilitynetworks.UtilityTraversability;
					public getScope(): com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope;
					public getInternal(): com.esri.arcgisruntime.internal.jni.CoreUtilityTraversability;
				}
			}
		}
	}
}

declare module com {
	export module esri {
		export module arcgisruntime {
			export module utilitynetworks {
				export class UtilityTraversabilityScope {
					public static class: java.lang.Class<com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope>;
					public static JUNCTIONS_AND_EDGES: com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope;
					public static JUNCTIONS: com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope;
					public static EDGES: com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope;
					public static values(): native.Array<com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope>;
					public static valueOf(param0: string): com.esri.arcgisruntime.utilitynetworks.UtilityTraversabilityScope;
				}
			}
		}
	}
}

//Generics information:
//com.esri.arcgisruntime.concurrent.ListenableFuture:1
//com.esri.arcgisruntime.data.Geodatabase.TransactionStatusChangedEvent:1
//com.esri.arcgisruntime.internal.b.b:1
//com.esri.arcgisruntime.internal.b.c:1
//com.esri.arcgisruntime.internal.b.h:2
//com.esri.arcgisruntime.internal.b.j:2
//com.esri.arcgisruntime.internal.b.j.a:2
//com.esri.arcgisruntime.internal.d.c.b:1
//com.esri.arcgisruntime.internal.d.d.b:1
//com.esri.arcgisruntime.internal.d.d.d:1
//com.esri.arcgisruntime.internal.d.d.e:1
//com.esri.arcgisruntime.internal.d.e.j:2
//com.esri.arcgisruntime.internal.d.i.g.a:1
//com.esri.arcgisruntime.internal.d.i.g.b:1
//com.esri.arcgisruntime.internal.d.j.b:1
//com.esri.arcgisruntime.internal.d.j.c:1
//com.esri.arcgisruntime.internal.d.j.d:1
//com.esri.arcgisruntime.internal.d.j.e:1
//com.esri.arcgisruntime.internal.d.m.a:3
//com.esri.arcgisruntime.internal.d.m.b:2
//com.esri.arcgisruntime.internal.d.m.c:2
//com.esri.arcgisruntime.internal.d.m.d:2
//com.esri.arcgisruntime.internal.d.m.f:3
//com.esri.arcgisruntime.internal.d.n.b:1
//com.esri.arcgisruntime.internal.e.a.a.a.ae:1
//com.esri.arcgisruntime.internal.e.a.a.c:1
//com.esri.arcgisruntime.internal.e.a.a.m:1
//com.esri.arcgisruntime.internal.h.b.j:2
//com.esri.arcgisruntime.internal.h.b.t:1
//com.esri.arcgisruntime.internal.p.ad:1
//com.esri.arcgisruntime.internal.p.ae:1
//com.esri.arcgisruntime.internal.p.af:1
//com.esri.arcgisruntime.internal.p.ag:1
//com.esri.arcgisruntime.internal.p.k:1
//com.esri.arcgisruntime.internal.p.l:2
//com.esri.arcgisruntime.internal.p.q:1
//com.esri.arcgisruntime.internal.p.s:1
//com.esri.arcgisruntime.internal.p.t:1
//com.esri.arcgisruntime.internal.p.u:1
//com.esri.arcgisruntime.internal.p.v:1
//com.esri.arcgisruntime.internal.p.w:1
//com.esri.arcgisruntime.mapping.view.CameraDistanceChangedEvent:1
//com.esri.arcgisruntime.mapping.view.CameraDistanceChangedListener:1
//com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedEvent:1
//com.esri.arcgisruntime.mapping.view.CameraHeadingOffsetChangedListener:1
//com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedEvent:1
//com.esri.arcgisruntime.mapping.view.CameraPitchOffsetChangedListener:1
//com.esri.arcgisruntime.portal.PortalQueryResultSet:1
//com.esri.arcgisruntime.util.ListChangedEvent:1
//com.esri.arcgisruntime.util.ListChangedListener:1
//com.esri.arcgisruntime.util.ListenableList:1

